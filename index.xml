<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>张华的博客</title><link>http://localhost:1313/</link><description>Recent content on 张华的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 13 May 2024 07:28:11 -0700</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>Theme preview</title><link>http://localhost:1313/post/2017/even-preview/</link><pubDate>Tue, 10 Jul 2018 00:00:00 +0800</pubDate><guid>http://localhost:1313/post/2017/even-preview/</guid><description>Based on MarkdownPreview test.md. Markdown 1 2 3 4 5 6 7 8 # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 ### Duplicate Header ### Duplicate Header H1 H2 H3 H4 H5 H6 Duplicate Header Duplicate Header Paragraphs 1 2 3 4 This is a paragraph. I am still part of the paragraph. New paragraph. This is a paragraph. I am still part of the paragraph.</description></item><item><title>About</title><link>http://localhost:1313/about/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>http://localhost:1313/about/</guid><description>简介 张华，网名hustbill，80后，程序员。曾作为核心员工搭建负责Visa-API告警监控平台OperA2.0。现为微软Azure软件工</description></item><item><title>Links</title><link>http://localhost:1313/links/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>http://localhost:1313/links/</guid><description>唐巧的博客 四火的唠叨 猫和柴的野游 王垠的博客 张鑫旭的博客 Lindsay Hill automation, networking, worklife Laisky Cai的博客 酷壳-陈皓 李苦李-技术-生活 黄玄的博客 佈衣清风</description></item><item><title>2024 05 12 读李梦霁《允许一切发生，过不紧绷松弛的人生》</title><link>http://localhost:1313/post/2024/2024-05-12-%E6%9D%8E%E6%A2%A6%E9%9C%81%E5%85%81%E8%AE%B8%E4%B8%80%E5%88%87%E5%8F%91%E7%94%9F%E8%BF%87%E4%B8%8D%E7%B4%A7%E7%BB%B7%E6%9D%BE%E5%BC%9B%E7%9A%84%E4%BA%BA%E7%94%9F/</link><pubDate>Mon, 13 May 2024 07:28:11 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-05-12-%E6%9D%8E%E6%A2%A6%E9%9C%81%E5%85%81%E8%AE%B8%E4%B8%80%E5%88%87%E5%8F%91%E7%94%9F%E8%BF%87%E4%B8%8D%E7%B4%A7%E7%BB%B7%E6%9D%BE%E5%BC%9B%E7%9A%84%E4%BA%BA%E7%94%9F/</guid><description>上周从图书馆借来的书。放在书架上没来得及读。晚上打开随手翻翻，就读进去了。 三十岁的女作家。有着超越同龄人的阅历和通透。曾经她也曾北漂，租住在</description></item><item><title>2024 05 11 要技术进步，也需要好的身体</title><link>http://localhost:1313/post/2024/2024-05-11-%E8%A6%81%E6%8A%80%E6%9C%AF%E8%BF%9B%E6%AD%A5%E4%B9%9F%E9%9C%80%E8%A6%81%E5%A5%BD%E7%9A%84%E8%BA%AB%E4%BD%93/</link><pubDate>Sun, 12 May 2024 01:17:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-05-11-%E8%A6%81%E6%8A%80%E6%9C%AF%E8%BF%9B%E6%AD%A5%E4%B9%9F%E9%9C%80%E8%A6%81%E5%A5%BD%E7%9A%84%E8%BA%AB%E4%BD%93/</guid><description>我的老友联系我，知道我被绩效改进所困。 让我努力刷题找工作。 他坚持跑步三年，瘦了15斤。 晚饭吃的清淡。 身体也比之前精神了许多。 打算尝试 Oracle 他在尝</description></item><item><title>2024 05 11 更新Hugo和Node.md</title><link>http://localhost:1313/post/2024/2024-05-11-%E6%9B%B4%E6%96%B0hugo%E5%92%8Cnode.md/</link><pubDate>Sat, 11 May 2024 23:45:44 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-05-11-%E6%9B%B4%E6%96%B0hugo%E5%92%8Cnode.md/</guid><description>问题描述 发现自己博客2023-08月后就没更新了。其实我一直有写博客。是Hugo Deploy的workflow所依赖的Ubuntu版本不支持</description></item><item><title>2024 05 11 记录自己找工作的历程</title><link>http://localhost:1313/post/2024/2024-05-11-%E8%AE%B0%E5%BD%95%E8%87%AA%E5%B7%B1%E6%89%BE%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%8E%86%E7%A8%8B/</link><pubDate>Sat, 11 May 2024 20:48:01 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-05-11-%E8%AE%B0%E5%BD%95%E8%87%AA%E5%B7%B1%E6%89%BE%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%8E%86%E7%A8%8B/</guid><description>刷题、求职、面试全记录 希望未来两个月的时间，能够在刷题求职面试过程有所收获。 绩效改进约谈后-TimeLine 2024-04-30 和领导一对一面谈，领导在会议记</description></item><item><title>2024 04 22 观影-《老狐狸》</title><link>http://localhost:1313/post/2024/2024-04-22-%E8%A7%82%E5%BD%B1-%E8%80%81%E7%8B%90%E7%8B%B8/</link><pubDate>Mon, 22 Apr 2024 08:01:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-04-22-%E8%A7%82%E5%BD%B1-%E8%80%81%E7%8B%90%E7%8B%B8/</guid><description>陪博闻看了台湾电影《老狐狸》， 富人，强者； 穷人，弱者。做一个有良心、有手段的富人。 光有良心是弱者； 光有手段的富人，如老狐狸，并不让人喜欢。 女</description></item><item><title>2024 04 21 读万维钢先生的《佛畏系统》</title><link>http://localhost:1313/post/2024/2024-04-21-%E8%AF%BB%E4%B8%87%E7%BB%B4%E9%92%A2%E5%85%88-%E7%94%9F%E7%9A%84%E4%BD%9B%E7%95%8F%E7%B3%BB%E7%BB%9F/</link><pubDate>Sun, 21 Apr 2024 06:54:40 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-04-21-%E8%AF%BB%E4%B8%87%E7%BB%B4%E9%92%A2%E5%85%88-%E7%94%9F%E7%9A%84%E4%BD%9B%E7%95%8F%E7%B3%BB%E7%BB%9F/</guid><description>读万维钢先生的《佛畏系统》 系统性思维 英文名《System Thinking in Daily Life》 佛畏系统 记录如下： 用数量确保质量，勤奋 机会青睐有准备的头脑，知识的复</description></item><item><title>2024 04 12 读吴军先生的《元智慧》</title><link>http://localhost:1313/post/2024/2024-04-12-%E8%AF%BB%E5%90%B4%E5%86%9B%E5%85%88%E7%94%9F%E7%9A%84%E5%85%83%E6%99%BA%E6%85%A7/</link><pubDate>Sat, 13 Apr 2024 06:54:40 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-04-12-%E8%AF%BB%E5%90%B4%E5%86%9B%E5%85%88%E7%94%9F%E7%9A%84%E5%85%83%E6%99%BA%E6%85%A7/</guid><description>吴军先生的《元智慧》 读吴军先生的《元智慧》，受益良多。 凭着记忆，写几条读书笔记。 要有系统论的思维，分辨一个观点和理论，要看能否从系统论来自洽</description></item><item><title>2024年春节前夕</title><link>http://localhost:1313/post/2024/2024-01-01-%E5%85%83%E6%97%A6-%E6%9B%B9%E8%AE%B0%E7%BE%8A%E8%82%89/</link><pubDate>Sun, 04 Feb 2024 01:01:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-01-01-%E5%85%83%E6%97%A6-%E6%9B%B9%E8%AE%B0%E7%BE%8A%E8%82%89/</guid><description>2024年春节前夕。 去Newcastle 附近中学，参加新春活动。最后看了古筝表演。是一个混血女孩子。她爸爸是老美。 家里人支持她学古筝。她的妹</description></item><item><title>2024 01 24 读采铜的《精进3》</title><link>http://localhost:1313/post/2024/2024-01-24-%E8%AF%BB%E9%87%87%E9%93%9C%E7%9A%84%E7%B2%BE%E8%BF%9B3/</link><pubDate>Wed, 24 Jan 2024 08:17:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-01-24-%E8%AF%BB%E9%87%87%E9%93%9C%E7%9A%84%E7%B2%BE%E8%BF%9B3/</guid><description>读《精进3》内在动机“intrinsic motivation”， 做事驱动力来自内心。自我决定论（self-determination theory) 做事满</description></item><item><title>2024 01 22 读《自信的陷阱》</title><link>http://localhost:1313/post/2024/2024-01-22-%E8%AF%BB%E8%87%AA%E4%BF%A1%E7%9A%84%E9%99%B7%E9%98%B1/</link><pubDate>Mon, 22 Jan 2024 08:17:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-01-22-%E8%AF%BB%E8%87%AA%E4%BF%A1%E7%9A%84%E9%99%B7%E9%98%B1/</guid><description>Notes: 2024年5月12号更新，完全不记得这本书写得什么内容了。 说明读书笔记还是很重要的。 读《自信的陷阱》 早上8点29分 生活改变列表 我的行为方式</description></item><item><title>2024 01 01 看王家卫执导的电视剧-繁花</title><link>http://localhost:1313/post/2024/2024-01-01-%E7%9C%8B%E7%8E%8B%E5%AE%B6%E5%8D%AB%E6%89%A7%E5%AF%BC%E7%9A%84%E7%B9%81%E8%8A%B1/</link><pubDate>Mon, 01 Jan 2024 01:17:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-01-01-%E7%9C%8B%E7%8E%8B%E5%AE%B6%E5%8D%AB%E6%89%A7%E5%AF%BC%E7%9A%84%E7%B9%81%E8%8A%B1/</guid><description>青年阿宝 阿宝对兰芝的喜欢和追求。兰芝只是公交车的售票员，但是她上进，敢于追求更好的生活。兰芝就是阿宝的白月光。 兰芝去了香港。阿宝满是失落。 阿</description></item><item><title>2024年元旦，新的开始</title><link>http://localhost:1313/post/2024/2024-02-04-%E6%98%A5%E8%8A%82%E5%89%8D%E5%A4%95/</link><pubDate>Mon, 01 Jan 2024 01:01:02 -0700</pubDate><guid>http://localhost:1313/post/2024/2024-02-04-%E6%98%A5%E8%8A%82%E5%89%8D%E5%A4%95/</guid><description>新年过得比较平淡。 2024年元旦，和家人去曹记羊肉。</description></item><item><title>2023 11 08-双月总结</title><link>http://localhost:1313/post/2023/2023-11-08-%E5%8F%8C%E6%9C%88%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 08 Nov 2023 08:16:54 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-11-08-%E5%8F%8C%E6%9C%88%E6%80%BB%E7%BB%93/</guid><description>9月和10月过去了。 虽然努力冲绩效，但是结果差强人意。 惯性的力量比较强大，我没能做到100%让自己满意。 还是在原先的轨道上滑行。 做的好的地方</description></item><item><title>2023 08 27 不做寒号鸟</title><link>http://localhost:1313/post/2023/2023-08-27-%E4%B8%8D%E5%81%9A%E5%AF%92%E5%8F%B7%E9%B8%9F/</link><pubDate>Sun, 27 Aug 2023 00:30:13 -0700</pubDate><guid>http://localhost:1313/post/2023/2023-08-27-%E4%B8%8D%E5%81%9A%E5%AF%92%E5%8F%B7%E9%B8%9F/</guid><description>每次绩效考核前，都担心老板给低绩效。 这两次和老板1:1 面谈，老板对我的工作进度和表现都不太满意。 我在日常工作中疲于奔命，但是绩效一般。 自己的</description></item><item><title>纪念陈皓先生</title><link>http://localhost:1313/post/2023/2023-05-15-%E7%BA%AA%E5%BF%B5%E9%99%88%E7%9A%93%E5%85%88%E7%94%9F/</link><pubDate>Mon, 15 May 2023 09:37:28 -0700</pubDate><guid>http://localhost:1313/post/2023/2023-05-15-%E7%BA%AA%E5%BF%B5%E9%99%88%E7%9A%93%E5%85%88%E7%94%9F/</guid><description>惊闻陈皓先生心梗去世，47岁的年纪，天妒英才！ 一直有读陈皓先生的博客，从中受益良多。 陈皓先生品行好、技术扎实，乐于分享，敢于直面现实，陈述技</description></item><item><title>掌控自己的生活</title><link>http://localhost:1313/post/2023/2023-05-04-%E6%8E%8C%E6%8E%A7%E8%87%AA%E5%B7%B1%E7%9A%84%E7%94%9F%E6%B4%BB/</link><pubDate>Thu, 04 May 2023 07:52:30 -0700</pubDate><guid>http://localhost:1313/post/2023/2023-05-04-%E6%8E%8C%E6%8E%A7%E8%87%AA%E5%B7%B1%E7%9A%84%E7%94%9F%E6%B4%BB/</guid><description>Date：2023 05 04 发觉自己在微信短视频上花费了过多的时间，最近有失控的趋势。 尝试改进的手段： 卸载手机微信，尝试一段时间不看微信 只用电脑版</description></item><item><title>时间飞逝，莫要再空转了</title><link>http://localhost:1313/post/2023/2023-04-01-%E6%97%B6%E9%97%B4%E9%A3%9E%E9%80%9D%E8%8E%AB%E8%A6%81%E5%86%8D%E7%A9%BA%E8%BD%AC%E4%BA%86/</link><pubDate>Sat, 01 Apr 2023 09:26:38 -0700</pubDate><guid>http://localhost:1313/post/2023/2023-04-01-%E6%97%B6%E9%97%B4%E9%A3%9E%E9%80%9D%E8%8E%AB%E8%A6%81%E5%86%8D%E7%A9%BA%E8%BD%AC%E4%BA%86/</guid><description>2022年匆匆而过，2023 还没回过味来，就一个季度走完了。 2022年的全年总结还没写。 上周填完了报税的资料，还没提交。 去年一年在经济上收入</description></item><item><title>纪念棒球教练Erik先生</title><link>http://localhost:1313/post/2023/2023-04-01-%E7%BA%AA%E5%BF%B5%E6%A3%92%E7%90%83%E6%95%99%E7%BB%83erik/</link><pubDate>Sat, 01 Apr 2023 09:00:39 -0700</pubDate><guid>http://localhost:1313/post/2023/2023-04-01-%E7%BA%AA%E5%BF%B5%E6%A3%92%E7%90%83%E6%95%99%E7%BB%83erik/</guid><description>上个星期一，晚饭后，在餐桌上，老婆看到一封电子邮件，里面写到棒球教练Erik 去世的消息，然后把递给我手机，我反复读了三遍邮件。 Eric去世的</description></item><item><title>读《这就是马云》有感</title><link>http://localhost:1313/post/2023/2023-03-15-%E7%9C%8B%E5%AE%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E9%A9%AC%E4%BA%91/</link><pubDate>Wed, 15 Mar 2023 16:28:26 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-03-15-%E7%9C%8B%E5%AE%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E9%A9%AC%E4%BA%91/</guid><description>这是一篇补记的读后感。 《这就是马云》这本书，写的平铺直叙，中规中矩。总裁助理的文风比较洗练。 里面提到了马云创办的英文兴趣班，他和参加英文兴趣</description></item><item><title>2023 02 04 看完《狂飙》有感</title><link>http://localhost:1313/post/2023/2023-02-04-%E7%9C%8B%E5%AE%8C%E7%8B%82%E9%A3%99%E6%9C%89%E6%84%9F/</link><pubDate>Sat, 04 Feb 2023 17:00:20 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-02-04-%E7%9C%8B%E5%AE%8C%E7%8B%82%E9%A3%99%E6%9C%89%E6%84%9F/</guid><description>张译、张颂文主演的扫黑除恶电视剧《狂飙》收视率一路走高。 在同事的安利下，我还是看了这部剧，四天的时间刷完了。为此，对日常工作还有点影响。 谈谈</description></item><item><title>2023 02 04 看完追凶者也有感</title><link>http://localhost:1313/post/2023/2023-02-04-%E7%9C%8B%E5%AE%8C%E8%BF%BD%E5%87%B6%E8%80%85%E4%B9%9F%E6%9C%89%E6%84%9F/</link><pubDate>Sat, 04 Feb 2023 16:28:26 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-02-04-%E7%9C%8B%E5%AE%8C%E8%BF%BD%E5%87%B6%E8%80%85%E4%B9%9F%E6%9C%89%E6%84%9F/</guid><description>昨晚看完了刘烨、张译主演的电影《追凶者也》 印象深刻的是在KTV的那一幕， 杀手小凤去找女友，没想到女友在陪侍两位马老板一个高老板，还有王砚辉演</description></item><item><title>2023 01 17 调试心态与情绪</title><link>http://localhost:1313/post/2023/2023-01-17-%E8%B0%83%E8%AF%95%E5%BF%83%E6%80%81%E4%B8%8E%E6%83%85%E7%BB%AA/</link><pubDate>Tue, 17 Jan 2023 09:24:55 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-01-17-%E8%B0%83%E8%AF%95%E5%BF%83%E6%80%81%E4%B8%8E%E6%83%85%E7%BB%AA/</guid><description>昨天的是小长假的最后一天。 情绪有点低落。下午三点多钟，带孩子去小学操场打篮球。 还有一个印度爸爸带女儿打篮球。 遇到了一些附近散步的人。 天气好，</description></item><item><title>2023 01 07 读完射雕英雄传</title><link>http://localhost:1313/post/2023/2023-01-07-%E8%AF%BB%E5%AE%8C%E5%B0%84%E9%9B%95%E8%8B%B1%E9%9B%84%E4%BC%A0/</link><pubDate>Wed, 11 Jan 2023 14:29:14 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-01-07-%E8%AF%BB%E5%AE%8C%E5%B0%84%E9%9B%95%E8%8B%B1%E9%9B%84%E4%BC%A0/</guid><description>花费了三天时间，读完了射雕英雄传。 年岁渐长，看书求快。 囫囵吞枣。 学习也是因缘际会，有好的师傅教，有好的教材，还需要自身领悟。 另外，对手越强，</description></item><item><title>整理2022全年的照片</title><link>http://localhost:1313/post/2023/2023-01-06-import-photoes-from-iphone-to-mac/</link><pubDate>Fri, 06 Jan 2023 15:55:34 -0800</pubDate><guid>http://localhost:1313/post/2023/2023-01-06-import-photoes-from-iphone-to-mac/</guid><description>发现iPhone11有点存储空间不够了。 删照片比较费事。 后来发现用AirDrop，可以按照地址分文件夹，然后选择照片后AirDrop到Mac</description></item><item><title>2022-10-23跑下去，太阳自然升起</title><link>http://localhost:1313/post/2022/2022-10-23-%E8%B7%91%E4%B8%8B%E5%8E%BB%E5%A4%AA%E9%98%B3%E8%87%AA%E7%84%B6%E5%8D%87%E8%B5%B7/</link><pubDate>Sun, 23 Oct 2022 10:09:58 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-10-23-%E8%B7%91%E4%B8%8B%E5%8E%BB%E5%A4%AA%E9%98%B3%E8%87%AA%E7%84%B6%E5%8D%87%E8%B5%B7/</guid><description>时间过得真快，一晃就到十月下旬了。总觉得从2020年3月份开始，生活就变得比较不确定了。 昨天早上看到Twitter上有人转发的二十大闭幕式视</description></item><item><title>2022-07-09在字节的日子</title><link>http://localhost:1313/post/2022/2022-07-09-%E5%9C%A8%E5%AD%97%E8%8A%82%E7%9A%84%E6%97%A5%E5%AD%90/</link><pubDate>Sat, 09 Jul 2022 07:42:09 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-07-09-%E5%9C%A8%E5%AD%97%E8%8A%82%E7%9A%84%E6%97%A5%E5%AD%90/</guid><description>加入字节40多天，进入到预期的忙碌中了。 前三周是学习，提交了两个小的merge request。第三周接受一个生产环境的改动需求，在和国内同事</description></item><item><title>转载-电影清单</title><link>http://localhost:1313/post/2022/2022-05-20-%E7%94%B5%E5%BD%B1%E6%B8%85%E5%8D%95/</link><pubDate>Sat, 21 May 2022 09:13:49 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-05-20-%E7%94%B5%E5%BD%B1%E6%B8%85%E5%8D%95/</guid><description>整理电脑，发现了这篇文章，重新整理出来。在辛勤工作之余，可以看看电影。 这些估计是2009年之前的电影。 以下是转载部分： 25部口语练习电影、2</description></item><item><title>Day1的心态</title><link>http://localhost:1313/post/2022/2022-05-20-day1%E7%9A%84%E5%BF%83%E6%80%81/</link><pubDate>Fri, 20 May 2022 09:59:38 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-05-20-day1%E7%9A%84%E5%BF%83%E6%80%81/</guid><description>下周一就要开始一段新的工作旅程了，希望自己能够在新的岗位上做出成绩。 今天上午开始，整理好工作电脑，移除自己的相关文档和资料，卸载工具，下午把</description></item><item><title>Vue3.0 Web App Develop 学习日志</title><link>http://localhost:1313/post/2022/2022-05-08-vue3.0-web-app-develop-work-log/</link><pubDate>Sun, 08 May 2022 09:20:41 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-05-08-vue3.0-web-app-develop-work-log/</guid><description>之前的web 开发，是按照React来进行的。最近参与了一个Machine learning管理平台的前端开发。因为前期开发人员技术选型，才用的</description></item><item><title>读吴军先生的《态度》</title><link>http://localhost:1313/post/2022/2022-04-23-%E8%AF%BB%E5%90%B4%E5%86%9B%E5%85%88%E7%94%9F%E7%9A%84%E6%80%81%E5%BA%A6/</link><pubDate>Sat, 23 Apr 2022 09:44:08 -0700</pubDate><guid>http://localhost:1313/post/2022/2022-04-23-%E8%AF%BB%E5%90%B4%E5%86%9B%E5%85%88%E7%94%9F%E7%9A%84%E6%80%81%E5%BA%A6/</guid><description>读了吴军先生的《态度》一书，里面是他写给两个女儿的家书，email的结集整理出来的。里面谈到了很多为人处事的观点和做法。也讨论了人生观，金钱</description></item><item><title>早睡早起，坚持运动</title><link>http://localhost:1313/post/2022/2022-03-10-%E6%97%A9%E7%9D%A1%E6%97%A9%E8%B5%B7%E5%9D%9A%E6%8C%81%E8%BF%90%E5%8A%A8/</link><pubDate>Thu, 10 Mar 2022 10:43:34 -0800</pubDate><guid>http://localhost:1313/post/2022/2022-03-10-%E6%97%A9%E7%9D%A1%E6%97%A9%E8%B5%B7%E5%9D%9A%E6%8C%81%E8%BF%90%E5%8A%A8/</guid><description>早睡早起，坚持运动。 连续几天刷剧《人世间》、《都挺好》，都是晚睡。白天的精神状态并不好。 昨晚尝试早睡，9:45关电脑，10:02在儿子房间，</description></item><item><title>重新开始审视自己</title><link>http://localhost:1313/post/2022/2022-02-26-2022-02-26-%E9%87%8D%E6%96%B0%E5%BC%80%E5%A7%8B%E5%AE%A1%E8%A7%86%E8%87%AA%E5%B7%B1/</link><pubDate>Sat, 26 Feb 2022 14:16:52 -0800</pubDate><guid>http://localhost:1313/post/2022/2022-02-26-2022-02-26-%E9%87%8D%E6%96%B0%E5%BC%80%E5%A7%8B%E5%AE%A1%E8%A7%86%E8%87%AA%E5%B7%B1/</guid><description>2-24 看了《人世间》 2-25 4:00 参加了group meeting， DDIA 学习小组。 看了《鸡毛飞上天》49，50集 看了《龙门相》 故事梗概： 东北小镇，白事先生张英</description></item><item><title>2022 02 11 读完《遥远的救世主》</title><link>http://localhost:1313/post/2022/2022-02-11-%E8%AF%BB%E5%AE%8C%E9%81%A5%E8%BF%9C%E7%9A%84%E6%95%91%E4%B8%96%E4%B8%BB/</link><pubDate>Fri, 11 Feb 2022 09:33:43 -0800</pubDate><guid>http://localhost:1313/post/2022/2022-02-11-%E8%AF%BB%E5%AE%8C%E9%81%A5%E8%BF%9C%E7%9A%84%E6%95%91%E4%B8%96%E4%B8%BB/</guid><description>读完《遥远的救世主》这本书的剩下的20%，小丹路遇之前逃脱的武装劫匪，一对四，击毙一名，击伤一名。自己双脚被炸断，右手右脸损伤严重，在支援警</description></item><item><title>2021年终总结</title><link>http://localhost:1313/post/2022/2022-01-01-2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 01 Jan 2022 09:13:16 -0800</pubDate><guid>http://localhost:1313/post/2022/2022-01-01-2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</guid><description>2021年终总结 2021年过去了。整年都是在家工作，送娃上学，接娃放学。买菜、做饭，洗衣服。 时间流水账： 2020年9月买的房子，现在增值了2</description></item><item><title>2022新年计划</title><link>http://localhost:1313/post/2022/2022-01-01-2022%E6%96%B0%E5%B9%B4%E8%AE%A1%E5%88%92/</link><pubDate>Sat, 01 Jan 2022 09:03:14 -0800</pubDate><guid>http://localhost:1313/post/2022/2022-01-01-2022%E6%96%B0%E5%B9%B4%E8%AE%A1%E5%88%92/</guid><description>2022 新年计划 自律：少用社交媒体和视频网站-少用微信，Youtube，还有pangzitv，少刷剧，少刷小说 健身： 跳绳、上下蹲、太极拳、踢键子、</description></item><item><title>俞敏洪：如何提升认知水平</title><link>http://localhost:1313/post/2021/2021-12-26-%E4%BF%9E%E6%95%8F%E6%B4%AA-%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%AE%A4%E7%9F%A5%E6%B0%B4%E5%B9%B3/</link><pubDate>Sun, 26 Dec 2021 08:16:06 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-12-26-%E4%BF%9E%E6%95%8F%E6%B4%AA-%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E8%AE%A4%E7%9F%A5%E6%B0%B4%E5%B9%B3/</guid><description>俞敏洪：人的差距在哪里？ 人与人之间的差距在哪里？ 有长相的差距，家庭背景的差距，地域的差距，还有知识的差距。 其实一辈子最大的差距是认知水平的差</description></item><item><title>2021年12月作息时间记录</title><link>http://localhost:1313/post/2021/2021-12-05-2021%E5%B9%B412%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 01 Dec 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-12-05-2021%E5%B9%B412%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 12/1 12/2 12/3 12:15 12/4 7:50 12:30 12/5 9:05 11:45 12/6 8:05 12/7 12/8 12/9 12/10 12/11 12/12 12/13 12/14 12/15 12/16 12/17 12/18 12/19 12/20 12/21 12/22 12/23 12/24 12/25 12/26 12/27 12/28 12/29 12/5 昨天下午喝了一杯浓咖啡。 晚上入睡有点浅，再加上</description></item><item><title>2021 11 16 Golang并发机制 异步处理</title><link>http://localhost:1313/post/2021/2021-11-16-golang%E5%B9%B6%E5%8F%91%E6%9C%BA%E5%88%B6-%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86/</link><pubDate>Tue, 16 Nov 2021 08:08:31 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-11-16-golang%E5%B9%B6%E5%8F%91%E6%9C%BA%E5%88%B6-%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86/</guid><description>昨晚和朋友一起尝试解决Golang 调用的API 处理时间过长，客户端等不及的问题。 场景 1 2 3 4 5 6 7 /* 客户端 ----&amp;gt; service A ---&amp;gt; service B + cache | &amp;lt;---- | | | | ---------&amp;gt; | |</description></item><item><title>Create Hive tables and load data from Azure Blob Storage</title><link>http://localhost:1313/post/2021/2021-11-09-create-hive-tabls-and-load-data-from-azure-blob/</link><pubDate>Tue, 09 Nov 2021 13:54:00 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-11-09-create-hive-tabls-and-load-data-from-azure-blob/</guid><description>Upload data to Azure Blob Storage We assume that the data for Hive tables is in an uncompressed tabular format, and that the data has been uploaded to the default (or to an additional) container of the storage account used by the Hadoop cluster. If you want to practice on the NYC Taxi Trip Data, you need to: download the 24 NYC Taxi Trip Data files (12 Trip files and</description></item><item><title>Flink中使用Azure Blob Storage</title><link>http://localhost:1313/post/2021/2021-11-09-flink%E4%B8%AD%E4%BD%BF%E7%94%A8azure-blob-storage/</link><pubDate>Tue, 09 Nov 2021 13:40:34 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-11-09-flink%E4%B8%AD%E4%BD%BF%E7%94%A8azure-blob-storage/</guid><description>Azure Blob Storage Azure Blob Storage 是一项由 Microsoft 管理的服务，能提供多种应用场景下的云Storage。 Azure Blob Storage可与 Flink 一起使用以读取和写入数据，以及与流 State Backend 结合</description></item><item><title>2021年11月作息时间记录</title><link>http://localhost:1313/post/2021/2021-11-01-2021%E5%B9%B411%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 01 Nov 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-11-01-2021%E5%B9%B411%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 11/1 11/2 11/3 11/4 11/5 11/6 11/7 11/8 11/9 11/10 11/11 11/12 11/13 11/14 11/15 11/16 11/17 11/18 11/19 11/20 11/21 11/22 11/23 11/24 11/25 11/26 11/27 11/28 11/29 11/30 10/31/2021 把自己的时间用到点子上，认真准备。学会屏蔽一些外界的干扰</description></item><item><title>2021年11月作息时间记录</title><link>http://localhost:1313/post/2021/2021-11/2021-11-02-2021%E5%B9%B411%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 01 Nov 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-11/2021-11-02-2021%E5%B9%B411%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 11/1 11/2 11/3 11/4 12:30 11/5 8:10 10:45 11/6 8:05 12:45 11/7 8:47 12:35 11/8 7:45 12:35 11/9 8:10 12:35 11/10 8:05 11/11 11/12 11/13 7:50 12:20 11/14 7:35 12:45 11/15 7:50 1:15 11/16 7:45 12:15 11/17 7:45 12:20 11/18 7:40 12:15 11/19 7:40 11:45 11/20 7:35 12:15 11/21 7:30 11/22 12:35 11/23 12:15 11/24 7:45 12:05 11/25 7:55</description></item><item><title>2021 10 31 做算法题的体验</title><link>http://localhost:1313/post/2021/2021-10/2021-10-31-%E5%81%9A%E7%AE%97%E6%B3%95%E9%A2%98%E7%9A%84%E4%BD%93%E9%AA%8C/</link><pubDate>Sun, 31 Oct 2021 09:04:16 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-10/2021-10-31-%E5%81%9A%E7%AE%97%E6%B3%95%E9%A2%98%E7%9A%84%E4%BD%93%E9%AA%8C/</guid><description>看到身边的朋友通过勤刷算法题和系统设计，拿到了翻倍的薪水，心里不免起了波澜。在同一个公司同一岗位做了两年，如果技术上没有进步，在老板眼里也就</description></item><item><title>2021 10 28 Azure Web App Acr Ci Deploy Log</title><link>http://localhost:1313/post/2021/2021-10/2021-10-28-azure-web-app-acr-ci-deploy-log/</link><pubDate>Thu, 28 Oct 2021 16:08:56 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-10/2021-10-28-azure-web-app-acr-ci-deploy-log/</guid><description>要把一个Node.js app 部署到Azure cloud上，我尝试成功了两种方法： 第一个尝试是用Visual code直接部署Node.js web app</description></item><item><title>2021年10月作息时间记录</title><link>http://localhost:1313/post/2021/2021-10/2021-10-02-2021%E5%B9%B410%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Sat, 02 Oct 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-10/2021-10-02-2021%E5%B9%B410%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 10/1 8:30PM 10/2 7:05 11:25 10/3 8:40 11:50 10/4 7:25 11:05 10/5 10/6 10/7 10:25 10/8 11:35 10/9 7:15 12:00 10/10 8:50 12:35 10/11 7:35 12:35 10/12 7:40 10/13 10/14 10/15 10/16 10/17 10/18 10/19 10/20 10/21 10/22 10/23 12:40 10/24 7:50 12:40 10/25 8:00 12:35 10/26 8:09 12:25 10/27 8:10 12:45 10/28 8:05 12:30 10/29 12:45 10/30 8:45</description></item><item><title>2021年9月作息时间记录</title><link>http://localhost:1313/post/2021/2021-09/2021-09-02-2021%E5%B9%B409%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 02 Sep 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-09/2021-09-02-2021%E5%B9%B409%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 9/1 7:05 11:32 9/2 7:10 10:53 9/3 7:10 1:15 9/4 7:20 1:10 9/5 8:05 12:55 9/6 7:00 9/7 7:10 11:50 9/8 7:05 9/9 9/10 10:30 9/11 6:10 10:45 9/12 7:05 1:05 9/13 7:10 12:55 9/14 7:20 12:35 9/15 7:15 12:45 9/16 7:20 12:20 9/17 7:30 1:20 9/18 8:50 1:15 9/19 7:15 10:35 9/20 7:20 12:32 9/21 7：1</description></item><item><title>2021 08 08 2021年七月八月小结</title><link>http://localhost:1313/post/2021/2021-08/2021-08-08-2021%E5%B9%B4%E4%B8%83%E6%9C%88%E5%85%AB%E6%9C%88%E5%B0%8F%E7%BB%93/</link><pubDate>Sun, 08 Aug 2021 08:04:12 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-08/2021-08-08-2021%E5%B9%B4%E4%B8%83%E6%9C%88%E5%85%AB%E6%9C%88%E5%B0%8F%E7%BB%93/</guid><description>7/5-8/7这一个多月以来，部门重组，我心思也不在工作上。 看了网文小说，也刷了三部剧《伪装者》和《红色》，还有《麻雀》，对儿子的教育也没有</description></item><item><title>2021年8月作息时间记录</title><link>http://localhost:1313/post/2021/2021-08/2021-08-02-2021%E5%B9%B48%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 01 Aug 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-08/2021-08-02-2021%E5%B9%B48%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 8/1 8/2 7:30 12:35 8/3 7:55 12:55 8/4 7:30 8/5 8/6 1:55 8/7 8:35 11:35 8/8 6:36 11:20 8/9 7:30 10:25 8/10 7:35 12:45 8/11 6:35 8/12 11:50 8/13 1:10 8/14 7:45 2:45 8/15 8:45 11:25 8/16 7:05 1:00 8/17 7:02 12:46 8/18 7:18 8/19 8/20 2:40 8/21 8:05 12:30 8/22 7:20 11:32 8/23 7:05 12:03 8/24 7:05 11:40</description></item><item><title>2021 07 27 奥林匹亚国家公园两天一晚自驾游</title><link>http://localhost:1313/post/2021/202-07/2021-07-27-%E5%A5%A5%E6%9E%97%E5%8C%B9%E4%BA%9A%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD%E4%B8%A4%E5%A4%A9%E4%B8%80%E6%99%9A%E8%87%AA%E9%A9%BE%E6%B8%B8/</link><pubDate>Tue, 27 Jul 2021 09:39:03 -0700</pubDate><guid>http://localhost:1313/post/2021/202-07/2021-07-27-%E5%A5%A5%E6%9E%97%E5%8C%B9%E4%BA%9A%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD%E4%B8%A4%E5%A4%A9%E4%B8%80%E6%99%9A%E8%87%AA%E9%A9%BE%E6%B8%B8/</guid><description>带着老婆儿子和同事一家四口去了一趟奥林匹亚国家公园。 第一站 轮渡 早上7点起来，收拾旅行所需的物品还有食物饮料。8:20出门，9点在emonds</description></item><item><title>2021 07 24 2021年6月23黄石公园游记</title><link>http://localhost:1313/post/2021/202-07/2021-07-24-2021%E5%B9%B46%E6%9C%8823%E9%BB%84%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%B8%B8%E8%AE%B0/</link><pubDate>Sat, 24 Jul 2021 20:08:42 -0700</pubDate><guid>http://localhost:1313/post/2021/202-07/2021-07-24-2021%E5%B9%B46%E6%9C%8823%E9%BB%84%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%B8%B8%E8%AE%B0/</guid><description>Day 1 2021年6月20，我五点多钟就醒了，在网上刷小木屋，居然让我刷到三个小木屋。于是请假出发。 老婆收拾好一路上要吃要喝的，还有换洗衣服。我</description></item><item><title>2021年7月作息时间记录</title><link>http://localhost:1313/post/2021/202-07/2021-07-02-2021%E5%B9%B47%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 01 Jul 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/202-07/2021-07-02-2021%E5%B9%B47%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 7/1 12:55 7/2 8:35 7/3 7/4 7/5 7/6 7/7 7/8 7/9 7/10 7/11 12:40上床 7/12 7:20 12:35上床 7/13 7:35 11:55 上床 7/14 7:20起 7/15 7/16 7:30起 12:00上床12:55</description></item><item><title>2021 06 16 提升认知</title><link>http://localhost:1313/post/2021/2021-06/2021-06-16-%E6%8F%90%E5%8D%87%E8%AE%A4%E7%9F%A5/</link><pubDate>Sat, 26 Jun 2021 07:51:11 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-06/2021-06-16-%E6%8F%90%E5%8D%87%E8%AE%A4%E7%9F%A5/</guid><description>听了微信公众号-每晚一卷书的《骆驼祥子-一个人贫穷的根源，认知不够》 许子东曾说：“看《骆驼祥子》，第一遍看的是斗争，第二遍看的是老舍，第三遍</description></item><item><title>2021年6月作息时间记录</title><link>http://localhost:1313/post/2021/2021-06/2021-06-02-2021%E5%B9%B46%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 01 Jun 2021 08:43:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-06/2021-06-02-2021%E5%B9%B46%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 6/1 7:45 12:15 6/2 8:10 11:30 6/3 7:50 12:15 6/4 8:10 1:31 6/5 8:30 11:05 6/6 8:20 11:10 6/7 8:10 11:25 6/8 7:40 12:40 6/9 8:08 12:45 6/10 8:15 6/11 8:10 1:20上床 6/12 8:00 10:30上床 6/13 8:16起 11:45上床</description></item><item><title>2021 05 17 看完《潜伏》有感</title><link>http://localhost:1313/post/2021/2021-05/2021-05-17-%E7%9C%8B%E5%AE%8C%E6%BD%9C%E4%BC%8F/</link><pubDate>Mon, 17 May 2021 15:12:24 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-05/2021-05-17-%E7%9C%8B%E5%AE%8C%E6%BD%9C%E4%BC%8F/</guid><description>周五下午四点打完第二针辉瑞疫苗。周六中午开始反应，两点半左右头有点昏沉，坚持开车送孩子去球场学足球。在车里等待过程中，有点开始发烧，等小孩上</description></item><item><title>2021 05 14 清北毕业生做教培老师，高校讲师的职称晋升难</title><link>http://localhost:1313/post/2021/2021-05/2021-05-14-%E6%B8%85%E5%8C%97%E6%AF%95%E4%B8%9A%E7%94%9F%E5%81%9A%E6%95%99%E5%9F%B9%E8%80%81%E5%B8%88%E9%AB%98%E6%A0%A1%E8%AE%B2%E5%B8%88%E7%9A%84%E8%81%8C%E7%A7%B0%E6%99%8B%E5%8D%87%E9%9A%BE/</link><pubDate>Sat, 15 May 2021 11:18:23 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-05/2021-05-14-%E6%B8%85%E5%8C%97%E6%AF%95%E4%B8%9A%E7%94%9F%E5%81%9A%E6%95%99%E5%9F%B9%E8%80%81%E5%B8%88%E9%AB%98%E6%A0%A1%E8%AE%B2%E5%B8%88%E7%9A%84%E8%81%8C%E7%A7%B0%E6%99%8B%E5%8D%87%E9%9A%BE/</guid><description>看了下面两篇文章，颇有感触。于是摘录下来。就算清华北大毕业，就算是高校博士毕业，他们都有这自己的辛苦与烦恼。前路漫漫，只能咬牙坚持，认真打拼</description></item><item><title>2021 05 14 梦见了以前的老板一起开会</title><link>http://localhost:1313/post/2021/2021-05/2021-05-14-%E6%A2%A6%E8%A7%81%E4%BA%86%E4%BB%A5%E5%89%8D%E7%9A%84%E8%80%81%E6%9D%BF%E4%B8%80%E8%B5%B7%E5%BC%80%E4%BC%9A/</link><pubDate>Sat, 15 May 2021 10:24:01 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-05/2021-05-14-%E6%A2%A6%E8%A7%81%E4%BA%86%E4%BB%A5%E5%89%8D%E7%9A%84%E8%80%81%E6%9D%BF%E4%B8%80%E8%B5%B7%E5%BC%80%E4%BC%9A/</guid><description>早上起来发现做了一个梦。梦见以前公司的老板，来会议室看大家。 傍晚，我们当时点了外卖做晚饭，就在会议室吃。老板是临时来的，也就没有点老板的晚餐</description></item><item><title>2021 05 14 你好 李焕英</title><link>http://localhost:1313/post/2021/2021-05/2021-05-14-%E4%BD%A0%E5%A5%BD-%E6%9D%8E%E7%84%95%E8%8B%B1/</link><pubDate>Fri, 14 May 2021 21:29:02 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-05/2021-05-14-%E4%BD%A0%E5%A5%BD-%E6%9D%8E%E7%84%95%E8%8B%B1/</guid><description>女儿考上了大学，父母摆酒宴请亲朋好友，录取通知书也大方展示给亲朋看。作为父母的，这一刻是感到欣慰的。虽然王琴的女儿，上了UCLA导演系，月薪</description></item><item><title>2021年5月作息时间记录</title><link>http://localhost:1313/post/2021/2021-05/2021-05-03-2021%E5%B9%B45%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 02 May 2021 08:36:29 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-05/2021-05-03-2021%E5%B9%B45%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 5/1 8:20 起 12:30上床 5/2 8:43 起 去bellevue botanic garden 1：00-4：00 12:45上床 5/3 8:25起 处理报税 12:20上床 5/4 7</description></item><item><title>2021 04 30 Splunk Introduction</title><link>http://localhost:1313/post/2021/2021-04/2021-04-30-splunk-introduction/</link><pubDate>Fri, 30 Apr 2021 11:03:38 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-30-splunk-introduction/</guid><description>What is Splunk-Enterprise splunk-enterprise | Guidance on deploying Splunk Enterprise on Azure with automated reference implementation This documentation provides detailed guidance to support the deployment of Splunk Enterprise on Azure in line with Splunk Validated Architectures and the following key priorities: High Availability Maximum Performance Security Scalability Background Customers blocked by lack of support for splunk enterprise on Azure BlackRock, Tesco, Adobe Key Issues No Azure-specific reference architecture or guidance</description></item><item><title>2021 04 28 囧妈的极地任务</title><link>http://localhost:1313/post/2021/2021-04/2021-04-28-%E5%9B%A7%E5%A6%88%E7%9A%84%E6%9E%81%E5%9C%B0%E4%BB%BB%E5%8A%A1/</link><pubDate>Wed, 28 Apr 2021 00:35:11 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-28-%E5%9B%A7%E5%A6%88%E7%9A%84%E6%9E%81%E5%9C%B0%E4%BB%BB%E5%8A%A1/</guid><description>看了《囧妈的极地任务》 https://tv.gboku.com/vodplay/1060-1-1.html 一个天才建筑设计师，内心深处有过创伤。生活在日趋平淡的中，她失眠，狂躁，对学校的其他家长出言不逊。 放任隔壁邻居铲除山</description></item><item><title>2021 04 26 自我提升的App</title><link>http://localhost:1313/post/2021/2021-04/2021-04-26-%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87%E7%9A%84app/</link><pubDate>Mon, 26 Apr 2021 22:17:19 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-26-%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87%E7%9A%84app/</guid><description>自我提升的App fabulous 2.未來之光 Woebot Now then Grid diary iCalendar / google calendar iBooks 7个学习的app Canva 设计免费的Logo， 国内类似的APP 创客贴 夸克 APP 精准，无广告，搜索 精准，</description></item><item><title>2021 04 25 提高学习效率</title><link>http://localhost:1313/post/2021/2021-04/2021-04-25-%E6%8F%90%E9%AB%98%E5%AD%A6%E4%B9%A0%E6%95%88%E7%8E%87/</link><pubDate>Sun, 25 Apr 2021 14:15:10 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-25-%E6%8F%90%E9%AB%98%E5%AD%A6%E4%B9%A0%E6%95%88%E7%8E%87/</guid><description>看了Youtube博主ElenaLin_青青的三个学习视频 - 《高效学习的7个技巧 》、《精力管理》和《5本改变人生的好书》 高效学习的7个技巧 |</description></item><item><title>2021 04 20 Azure Sdk for Js Akv</title><link>http://localhost:1313/post/2021/2021-04/2021-04-20-azure-sdk-for-js-akv/</link><pubDate>Tue, 20 Apr 2021 15:38:06 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-20-azure-sdk-for-js-akv/</guid><description>Azure SDK samples for React (TypeScript) This sample application shows how to use the TypeScript client libraries for Azure in some common scenarios. In this sample, we build a simple Todo application in React using create-react-app and integrating with various Azure services. Integration with Azure Event Hubs to support real-time updates across multiple instances of the application. Integration with Azure Storage Blob for persisting ToDo attachments. https://github.com/Azure/azure-sdk-for-js/tree/master/samples/frameworks/react/ts Authenticating client side</description></item><item><title>2021 04 17 多读书、少刷剧</title><link>http://localhost:1313/post/2021/2021-04/2021-04-17-%E5%A4%9A%E8%AF%BB%E4%B9%A6%E5%B0%91%E5%88%B7%E5%89%A7/</link><pubDate>Sat, 17 Apr 2021 11:31:03 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-17-%E5%A4%9A%E8%AF%BB%E4%B9%A6%E5%B0%91%E5%88%B7%E5%89%A7/</guid><description>本周小结 这一周也是本次Sprint的第二周，按照部门安排，这个周五，也就是昨天，大家自己业务学习，不需要参会和提交代码。我就彻底放羊了，不仅</description></item><item><title>Kids Javascript Game Design Plan 2021</title><link>http://localhost:1313/post/2021/2021-04/2021-04-10-kids-javascript-game-design-plan-2021/</link><pubDate>Sat, 10 Apr 2021 09:57:31 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-10-kids-javascript-game-design-plan-2021/</guid><description>Kids Javascript Game design Plan 2021-04 4/10 review the status: button Event, button click Wall gaming, moving bar</description></item><item><title>2021 04 09 How to Enable TLS1</title><link>http://localhost:1313/post/2021/2021-04/2021-04-09-how-to-enable-tls1.2-on-clients/</link><pubDate>Fri, 09 Apr 2021 12:29:03 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-09-how-to-enable-tls1.2-on-clients/</guid><description>How to enable TLS 1.2 on clients 12/13/2019 There are three tasks for enabling TLS 1.2 on clients: Update Windows and WinHTTP Ensure that TLS 1.2 is enabled as a protocol for SChannel at the operating system level Update and configure the .NET Framework to support TLS 1.2 Ref: https://docs.microsoft.com/en-us/mem/configmgr/core/plan-design/security/enable-tls-1-2-client Verify the value of the DefaultSecureProtocols registry setting, for example: 1 2 3 4 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp\ DefaultSecureProtocols = (DWORD): 0xAA0</description></item><item><title>2021-04-Azure Cognitive Service</title><link>http://localhost:1313/post/2021/2021-04/2021-04-08-azure-cognitive-service/</link><pubDate>Thu, 08 Apr 2021 09:57:50 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-08-azure-cognitive-service/</guid><description>Azure Cognitive Services A comprehensive family of AI services and cognitive APIs to help you build intelligent apps What is Azure Cognitive Services? Cognitive Services brings AI within reach of every developer—without requiring machine-learning expertise. All it takes is an API call to embed the ability to see, hear, speak, search, understand, and accelerate</description></item><item><title>2021年3月小结</title><link>http://localhost:1313/post/2021/2021-04/2021-04-05-2021%E5%B9%B43%E6%9C%88%E5%B0%8F%E7%BB%93/</link><pubDate>Mon, 05 Apr 2021 09:34:32 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-05-2021%E5%B9%B43%E6%9C%88%E5%B0%8F%E7%BB%93/</guid><description>3月已经过去几天了，现在静下心来写小结。 3月4日和孙哥聊天，他说生成系统roll over的时候出了问题，导致生产环境服务宕机一个多小时。遇事</description></item><item><title>2021 04 03 Leetcode Solution in Python</title><link>http://localhost:1313/post/2021/2021-04/2021-04-03-lc-solution-in-python/</link><pubDate>Sat, 03 Apr 2021 21:18:08 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-03-lc-solution-in-python/</guid><description>1. two sum 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: # xa + xb = target, xb = target - xa, use dictionary {} to store key-value pair # 用dictionary来存key-value对，如</description></item><item><title>2021年4月作息时间记录</title><link>http://localhost:1313/post/2021/2021-04/2021-04-02-2021%E5%B9%B44%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 02 Apr 2021 08:36:29 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-04/2021-04-02-2021%E5%B9%B44%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 4/1 8:20 起 10:35关机 11:35 洗漱 12:07上床 4/2 7:30 起 10:52关机 12:30 AM洗澡，上床 4/3 9:16起 踢球 11:30 关机 12:03上床 4/4 8:</description></item><item><title>2021-03-List All Files and Dirs From Azure File Share</title><link>http://localhost:1313/post/2021/2021-03/2021-03-30-list-all-files-and-dirs-from-azure-file-share/</link><pubDate>Tue, 30 Mar 2021 17:30:03 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-30-list-all-files-and-dirs-from-azure-file-share/</guid><description>React component 读取Azure File share下面所以的文件和目录 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45</description></item><item><title>2021 03 29 React Tips</title><link>http://localhost:1313/post/2021/2021-03/2021-03-29-react-tips/</link><pubDate>Mon, 29 Mar 2021 19:25:29 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-29-react-tips/</guid><description>React Tips How to import const from other modules A good rule is to keep all constants in a separate file, away from all Views. Try creating a file for all App Constants. Constants.js is a good choice. Then put constants in like this: 1 2 3 4 5 6 const Constants = { AZURE_BLOB_CONTAINER: &amp;#39;gisdatacontainer&amp;#39;, ARCGIS_USERNAMER: &amp;#39;user&amp;#39;, ARCGIS_PORTAL: &amp;#39;https://www.arcgis.com/portal&amp;#39; } export default Constants Then you can import your constants</description></item><item><title>2021-03-28《寄生虫》观后感</title><link>http://localhost:1313/post/2021/2021-03/2021-03-28-%E5%AF%84%E7%94%9F%E8%99%AB%E8%A7%82%E5%90%8E%E6%84%9F/</link><pubDate>Sun, 28 Mar 2021 11:58:26 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-28-%E5%AF%84%E7%94%9F%E8%99%AB%E8%A7%82%E5%90%8E%E6%84%9F/</guid><description>昨晚看完了奉俊昊导演的《寄生虫》。这部影片比较写实。先谈谈自己的观后感，再梳理一下剧中的人物性格与命运。 观后感 基宇在成为多惠的辅导老师之后，</description></item><item><title>如何戒掉拖延症，提高执行力</title><link>http://localhost:1313/post/2021/2021-03/2021-03-22-%E6%88%92%E6%8E%89%E6%8B%96%E5%BB%B6%E7%97%87%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 22 Mar 2021 09:15:53 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-22-%E6%88%92%E6%8E%89%E6%8B%96%E5%BB%B6%E7%97%87%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>如何戒掉拖延症，提高执行力 我们往往是目标的巨人，行动的矮子。如何戒掉拖延症，提高执行力，下面有三个方法可以尝试一下。 两分钟原则 如果事情能在两</description></item><item><title>2021-03-20读《人生护城河：如何建立自己真正的优势》</title><link>http://localhost:1313/post/2021/2021-03/2021-03-20-%E6%94%B9%E5%8F%98%E8%AE%A4%E7%9F%A5%E7%9A%84%E4%B9%A6-%E4%BA%BA%E7%94%9F%E6%8A%A4%E5%9F%8E%E6%B2%B3/</link><pubDate>Sun, 21 Mar 2021 19:29:15 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-20-%E6%94%B9%E5%8F%98%E8%AE%A4%E7%9F%A5%E7%9A%84%E4%B9%A6-%E4%BA%BA%E7%94%9F%E6%8A%A4%E5%9F%8E%E6%B2%B3/</guid><description>改变认知的书 真正的好书有一个重要标准：能改变你认知的书。 例如： 《禅与摩托车维修艺术》改变了很多人看待周围世界的方式； 《爱上双人舞》让人重新认</description></item><item><title>2021-03-20白夜追凶 观后感</title><link>http://localhost:1313/post/2021/2021-03/2021-03-20-%E7%99%BD%E5%A4%9C%E8%BF%BD%E5%87%B6-%E8%A7%82%E5%90%8E%E6%84%9F/</link><pubDate>Sat, 20 Mar 2021 13:46:02 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-20-%E7%99%BD%E5%A4%9C%E8%BF%BD%E5%87%B6-%E8%A7%82%E5%90%8E%E6%84%9F/</guid><description>看完了《白夜追凶》，觉得很棒。对于谁是最终幕后操纵者，也有一些疑惑。对于主要人物的故事也有一些感悟。 刘长荣和关宏峰在东北的表现对比 关宏峰去长</description></item><item><title>黄峥辞任PDD董事长</title><link>http://localhost:1313/post/2021/2021-03/2021-03-18-pdd%E6%8D%A2%E5%B8%85/</link><pubDate>Thu, 18 Mar 2021 11:51:16 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-18-pdd%E6%8D%A2%E5%B8%85/</guid><description>拼多多的创始人黄峥出人意料地辞去执行职务，以探索新的长期机会。 黄峥在致股东的信中表示：“如果要确保它10年后的高速高质量发展，那么有些探索现</description></item><item><title>2021 03 16 Create a Web App to Azure</title><link>http://localhost:1313/post/2021/2021-03/2021-03-16-create-a-web-app-to-azure/</link><pubDate>Tue, 16 Mar 2021 09:39:54 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-16-create-a-web-app-to-azure/</guid><description>Ref： Tutorial: (Upload image data in the cloud with Azure Storage | Microsoft Docs) Create a storage account Create a container and set permissions Retrieve an access key Deploy a web app to Azure Configure app settings Interact with the web app</description></item><item><title>2021-03-10炒股懒人心经</title><link>http://localhost:1313/post/2021/2021-03/2021-03-10-%E7%82%92%E8%82%A1%E6%87%92%E4%BA%BA%E5%BF%83%E7%BB%8F/</link><pubDate>Wed, 10 Mar 2021 16:58:27 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-10-%E7%82%92%E8%82%A1%E6%87%92%E4%BA%BA%E5%BF%83%E7%BB%8F/</guid><description>摘要 可以学习一下Python实现代码。 异界番茄说美股 异界番茄说美股 107K subscribers 懒人炒股心经，只有短短4句话，28个字，却浓缩了一整个完整的交易系统。</description></item><item><title>2021-03-09面试技巧集锦</title><link>http://localhost:1313/post/2021/2021-03/2021-03-09-%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%E9%9B%86%E9%94%A6/</link><pubDate>Tue, 09 Mar 2021 12:33:49 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-09-%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%E9%9B%86%E9%94%A6/</guid><description>架构师面试的几个小技巧 - nickbulljs 21-03-06 banq 解决面试问题101： 不要立即提出解决方案 提出问题以搞清楚需求 大声解释您做出的每个判断与决策 谈谈解决方案中的权衡</description></item><item><title>2021年3月作息时间记录</title><link>http://localhost:1313/post/2021/2021-03/2021-03-08-2021%E5%B9%B43%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 08 Mar 2021 09:13:20 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-08-2021%E5%B9%B43%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>作息时间记录 早 中 下午 晚 3/8 7:30醒 8:15 起 10:45 - 11:05 去公园散步 运动10分钟 12:52 洗澡1:00上床 3/9 7:30醒 8:22 起 12:15关机洗澡 3/10 8:00醒 8:25起</description></item><item><title>健身减脂八个动作</title><link>http://localhost:1313/post/2021/2021-03/2021-03-07-%E5%87%8F%E8%82%A5%E5%85%AB%E4%B8%AA%E5%8A%A8%E4%BD%9C/</link><pubDate>Sun, 07 Mar 2021 10:14:52 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-07-%E5%87%8F%E8%82%A5%E5%85%AB%E4%B8%AA%E5%8A%A8%E4%BD%9C/</guid><description>一个方案包含八个动作，一个动作做10次，运动量就已经挺大了，可以达到减脂目的。 开头的热身动作和结尾的拉伸动作都分配仔细了，部位兼顾的也很全面</description></item><item><title>读《巴拉巴西成功定律》</title><link>http://localhost:1313/post/2021/2021-03/2021-03-05-%E8%AF%BB-%E5%B7%B4%E6%8B%89%E5%B7%B4%E8%A5%BF%E6%88%90%E5%8A%9F%E5%AE%9A%E5%BE%8B/</link><pubDate>Fri, 05 Mar 2021 16:38:28 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-05-%E8%AF%BB-%E5%B7%B4%E6%8B%89%E5%B7%B4%E8%A5%BF%E6%88%90%E5%8A%9F%E5%AE%9A%E5%BE%8B/</guid><description>今天在家休息，整理了自己的Mac电脑，抽空读了电子书《巴拉巴西成功定律》。 听书地址： https://youtu.be/w-agkE7CTok 作者视频：年龄和成功机会之间的真正关系 透過數學分析，網</description></item><item><title>2021-03-04系统上线故障有感，遇事能抗事</title><link>http://localhost:1313/post/2021/2021-03/2021-03-04-%E9%81%87%E4%BA%8B%E8%83%BD%E6%8A%97%E4%BA%8B/</link><pubDate>Thu, 04 Mar 2021 22:20:58 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-03/2021-03-04-%E9%81%87%E4%BA%8B%E8%83%BD%E6%8A%97%E4%BA%8B/</guid><description>今晚吃完晚饭，八点左右看了一部吴孟达出演的电影《天若有情》，是刘德华和吴倩莲主演的。里面有达叔的精彩表演。达叔就是凭借这部电影中太保一角获得</description></item><item><title>2021 02 28 2021年2月小结</title><link>http://localhost:1313/post/2021/2021-02/2021-02-28-2021%E5%B9%B42%E6%9C%88%E5%B0%8F%E7%BB%93/</link><pubDate>Sun, 28 Feb 2021 14:48:50 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-28-2021%E5%B9%B42%E6%9C%88%E5%B0%8F%E7%BB%93/</guid><description>时间过得飞快，今天就是二月份的最后一天了。 早睡早起的日子，不到这月的1/5，大多数日子都是半夜12点左右上床睡觉的。 过了春节，总统日，还有A</description></item><item><title>2021 02 28 读四火的唠叨博客</title><link>http://localhost:1313/post/2021/2021-02/2021-02-28-%E8%AF%BB%E5%9B%9B%E7%81%AB%E7%9A%84%E5%94%A0%E5%8F%A8%E5%8D%9A%E5%AE%A2/</link><pubDate>Sun, 28 Feb 2021 10:09:12 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-28-%E8%AF%BB%E5%9B%9B%E7%81%AB%E7%9A%84%E5%94%A0%E5%8F%A8%E5%8D%9A%E5%AE%A2/</guid><description>看了博客-四火的唠叨，作者从华为，转到亚马逊，最后到了Oracle，看作者的文章，和自己走过的路很相似。 2008-2020自己工作学习历程 我</description></item><item><title>2021 02 22 读《侠客行》</title><link>http://localhost:1313/post/2021/2021-02/2021-02-22-%E8%AF%BB%E4%BE%A0%E5%AE%A2%E8%A1%8C/</link><pubDate>Tue, 23 Feb 2021 22:08:34 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-22-%E8%AF%BB%E4%BE%A0%E5%AE%A2%E8%A1%8C/</guid><description>忙里偷闲，读完了金庸先生的两部小说《侠客行》和《鸳鸯刀》。个人觉得《侠客行》写得很不错。 《侠客行》故事梗概 石破天一个小乞儿，误入江湖，无意中</description></item><item><title>2021-02-22早上醒来发现做了一个梦</title><link>http://localhost:1313/post/2021/2021-02/2021-02-22-%E6%97%A9%E4%B8%8A%E9%86%92%E6%9D%A5%E5%8F%91%E7%8E%B0%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E6%A2%A6/</link><pubDate>Mon, 22 Feb 2021 10:28:45 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-22-%E6%97%A9%E4%B8%8A%E9%86%92%E6%9D%A5%E5%8F%91%E7%8E%B0%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E6%A2%A6/</guid><description>早上8:10分我起来，到儿子房间叫他起来准备参加今天早上特长班选拔考试。他比以往都要乖不少，很听话地起来了。我去卫生间小便，猛然想起自己今早</description></item><item><title>Python调试工具`PySnooper`介绍</title><link>http://localhost:1313/post/2021/2021-02/2021-02-21-python%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7pysnooper%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 21 Feb 2021 22:47:52 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-21-python%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7pysnooper%E4%BB%8B%E7%BB%8D/</guid><description>对于程序开发工程师来说，调试几乎是必备技能。今天再给你介绍一款非常好用的调试工具，它能在一些场景下，大幅度提高调试的效率， 那就是 PySnoo</description></item><item><title>2021 02 21 职场社恐怎么办，如何跨文化沟通障碍</title><link>http://localhost:1313/post/2021/2021-02/2021-02-21-%E8%81%8C%E5%9C%BA%E7%A4%BE%E6%81%90%E6%80%8E%E4%B9%88%E5%8A%9E%E5%A6%82%E4%BD%95%E8%B7%A8%E6%96%87%E5%8C%96%E6%B2%9F%E9%80%9A%E9%9A%9C%E7%A2%8D/</link><pubDate>Sun, 21 Feb 2021 18:46:49 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-21-%E8%81%8C%E5%9C%BA%E7%A4%BE%E6%81%90%E6%80%8E%E4%B9%88%E5%8A%9E%E5%A6%82%E4%BD%95%E8%B7%A8%E6%96%87%E5%8C%96%E6%B2%9F%E9%80%9A%E9%9A%9C%E7%A2%8D/</guid><description>如何更好地跨文化、跨部门、跨级别沟通 首先提高自己的口语沟通水平 平时多看一些英文电影，美剧，还有听脱口秀。有一位朋友提到了NPR里面的访谈，对</description></item><item><title>2021 02 20 自动部署Hugo静态博客</title><link>http://localhost:1313/post/2021/2021-02/2021-02-20-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</link><pubDate>Sat, 20 Feb 2021 12:43:45 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-20-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</guid><description>Hugo静态博客自动部署 两个Github Repos：原始Repo: PDCA-blog 和目标Repo: hustbill.github.io 所有的原始博客文件(post/2021-02-20-p</description></item><item><title>2021 02 12 好好活着</title><link>http://localhost:1313/post/2021/2021-02/2021-02-12-%E5%A5%BD%E5%A5%BD%E6%B4%BB%E7%9D%80/</link><pubDate>Mon, 15 Feb 2021 11:07:28 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-12-%E5%A5%BD%E5%A5%BD%E6%B4%BB%E7%9D%80/</guid><description>今天上午看电影解说《没事偷着乐》，改编自刘恒的小说《贫嘴张大民的幸福生活》。 在影片的结尾，张大民的儿子问张大民，“今后还会有更幸福的生活吗？</description></item><item><title>讨论中国教育问题，寒门还能出贵子吗？</title><link>http://localhost:1313/post/2021/2021-02/2021-02-12-%E6%95%99%E8%82%B2%E8%AE%A8%E8%AE%BA-%E5%AF%92%E9%97%A8%E8%BF%98%E8%83%BD%E5%87%BA%E8%B4%B5%E5%AD%90%E5%90%97/</link><pubDate>Sun, 14 Feb 2021 11:48:06 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-12-%E6%95%99%E8%82%B2%E8%AE%A8%E8%AE%BA-%E5%AF%92%E9%97%A8%E8%BF%98%E8%83%BD%E5%87%BA%E8%B4%B5%E5%AD%90%E5%90%97/</guid><description>中国教育问题，寒门还能出贵子吗？发言的听友讲到了体育精神和学习经历。 两分钟分享自己的成长故事。 体育精神 - 耐力 温州人对孩子们的学术要求不高，但</description></item><item><title>2021 02 12 Clubhouse 硅谷投资人小客厅 工程师升职记</title><link>http://localhost:1313/post/2021/2021-02/2021-02-12-clubhouse-%E7%A1%85%E8%B0%B7%E6%8A%95%E8%B5%84%E4%BA%BA%E5%B0%8F%E5%AE%A2%E5%8E%85-%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%8D%87%E8%81%8C%E8%AE%B0/</link><pubDate>Sat, 13 Feb 2021 20:34:11 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-12-clubhouse-%E7%A1%85%E8%B0%B7%E6%8A%95%E8%B5%84%E4%BA%BA%E5%B0%8F%E5%AE%A2%E5%8E%85-%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%8D%87%E8%81%8C%E8%AE%B0/</guid><description>潜水Clubhouse，听了Google/Facebook/eBay的软件工程师关于职场打怪升级的讨论。听了好多过来人的说法，还是很有收获的</description></item><item><title>看电影《1917》有感</title><link>http://localhost:1313/post/2021/2021-02/2021-02-11-%E7%9C%8B%E7%94%B5%E5%BD%B11917/</link><pubDate>Fri, 12 Feb 2021 10:26:44 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-11-%E7%9C%8B%E7%94%B5%E5%BD%B11917/</guid><description>电影《1917》讲的是第一次世界大战中英国军队中的两名军人穿越英德战场空隙、冒死传递命令的故事。这两个军人一个上次恶战余生的老兵S-Scho</description></item><item><title>看电影《除暴》</title><link>http://localhost:1313/post/2021/2021-02/2021-02-08-%E9%99%A4%E6%9A%B4/</link><pubDate>Thu, 11 Feb 2021 09:23:48 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-08-%E9%99%A4%E6%9A%B4/</guid><description>今天是大年初一，一大早起来给国内的亲戚朋友发微信拜年。股票又涨了一些，心情蛮好。 昨晚睡觉前看了英文电影《1917》和中文电影《除暴》 《除暴》</description></item><item><title>2021-02-08写在农历新年来临前</title><link>http://localhost:1313/post/2021/2021-02/2021-02-08-%E5%86%99%E5%9C%A8%E5%86%9C%E5%8E%86%E6%96%B0%E5%B9%B4%E6%9D%A5%E4%B8%B4%E5%89%8D/</link><pubDate>Wed, 10 Feb 2021 10:42:43 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-08-%E5%86%99%E5%9C%A8%E5%86%9C%E5%8E%86%E6%96%B0%E5%B9%B4%E6%9D%A5%E4%B8%B4%E5%89%8D/</guid><description>昨天在硕士同学发了假期读书清单，一共有七本书：亚当斯密的《国富论》上下两册，Daniel Kahneman的《Thinking, fast and slow》</description></item><item><title>2021 02 09 Python List Indices Must Be Integer</title><link>http://localhost:1313/post/2021/2021-02/2021-02-09-python-list-indices-must-be-integer/</link><pubDate>Tue, 09 Feb 2021 00:30:12 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-09-python-list-indices-must-be-integer/</guid><description>We can solve the error “typeerror: list indices must be integers or slices, not str” by making sure that we access items in a list using index numbers, not strings. The problem in our code is that we’re trying to access “level” in our list of lods:</description></item><item><title>2021 02 05 Function_in_bash_profile</title><link>http://localhost:1313/post/2021/2021-02/2021-02-05-function_in_bash_profile/</link><pubDate>Fri, 05 Feb 2021 17:12:42 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-05-function_in_bash_profile/</guid><description>改进了之前的脚本，把writeblog从Alias改成了function，可以接受从命令行传入的文件名，而不是用datetime加post生</description></item><item><title>转载-InfoQ-快手核心技术揭秘</title><link>http://localhost:1313/post/2021/2021-02/2021-02-05-%E8%BD%AC%E8%BD%BD-infoq-%E5%BF%AB%E6%89%8B%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98/</link><pubDate>Fri, 05 Feb 2021 15:49:57 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-05-%E8%BD%AC%E8%BD%BD-infoq-%E5%BF%AB%E6%89%8B%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98/</guid><description>快手核心技术揭秘 11 月 6 日，快手正式披露了招股书，除了商业上的成功，也首次系统化对外展示了快手的技术建设与核心能力。 在 AI 等技术方面有哪些核心的</description></item><item><title>有感于快手上市</title><link>http://localhost:1313/post/2021/2021-02/2021-02-05-%E6%9C%89%E6%84%9F%E4%BA%8E%E5%BF%AB%E6%89%8B%E4%B8%8A%E5%B8%82/</link><pubDate>Fri, 05 Feb 2021 00:10:47 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-05-%E6%9C%89%E6%84%9F%E4%BA%8E%E5%BF%AB%E6%89%8B%E4%B8%8A%E5%B8%82/</guid><description>朋友的老公阿鹏是宿华的清华本科同班同学。宿华清华毕业后去了Google工作，后来去了百度工作，再后来就离职连续创业。做成了快手以后，同班同学</description></item><item><title>2021费曼学习法与英文学习</title><link>http://localhost:1313/post/2021/2021-02/2021-02-02-%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95%E4%B8%8E%E8%8B%B1%E6%96%87%E5%AD%A6%E4%B9%A0md/</link><pubDate>Tue, 02 Feb 2021 09:22:58 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-02-%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95%E4%B8%8E%E8%8B%B1%E6%96%87%E5%AD%A6%E4%B9%A0md/</guid><description>费曼学习法 确定目标： 上网，看视频教程 模拟教学： 简洁地讲出，讲明白，什么地方卡壳，什么地方模糊 反馈： 哪个地方听不懂 简化并重复： 简单地类比 费曼学</description></item><item><title>2021年2月作息时间记录</title><link>http://localhost:1313/post/2021/2021-02/2021-02-01-2021%E5%B9%B42%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 02 Feb 2021 08:54:20 -0700</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-01-2021%E5%B9%B42%E6%9C%88%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</guid><description>记录流水账如下： 2月2日 赖世雄讲英语学习 2月7日 体验ClubHouse应用，听了有意思的嘉宾发言 2月8日 用小米盒子投屏看电影《除暴》追捕悍匪</description></item><item><title>赖世雄讲英语学习</title><link>http://localhost:1313/post/2021/2021-02/2021-02-01-%E8%B5%96%E4%B8%96%E9%9B%84%E8%AE%B2%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 01 Feb 2021 19:34:59 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-01-%E8%B5%96%E4%B8%96%E9%9B%84%E8%AE%B2%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</guid><description>英语名师赖世雄先生英语学习的经验： 三个基本态度 善用零星时间：先记住发音 少就是多，慢就是快 持之以恒，永不放弃 三个学习阶段 发音：回炉再造，学KK</description></item><item><title>昨晚心情颇不宁静</title><link>http://localhost:1313/post/2021/2021-02/2021-02-01-%E6%98%A8%E6%99%9A%E5%BF%83%E6%83%85%E9%A2%87%E4%B8%8D%E5%AE%81%E9%9D%99/</link><pubDate>Mon, 01 Feb 2021 08:51:04 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-02-01-%E6%98%A8%E6%99%9A%E5%BF%83%E6%83%85%E9%A2%87%E4%B8%8D%E5%AE%81%E9%9D%99/</guid><description>昨天是星期天，坚持了写了日记。 但是有两篇笔记-《react hooks》和《GraphQL》还是没写。 昨天上午继续整理2017年的日志，修改了</description></item><item><title>Costco遇见的虎妈</title><link>http://localhost:1313/post/2021/2021-02/2021-01-30-costco%E9%81%87%E8%A7%81%E7%9A%84%E8%99%8E%E5%A6%88/</link><pubDate>Sat, 30 Jan 2021 17:34:20 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-30-costco%E9%81%87%E8%A7%81%E7%9A%84%E8%99%8E%E5%A6%88/</guid><description>今天下午三点多去Costco超市买菜。在买香蕉的地方遇见一个亚裔妈妈，三十来岁，这个妈妈很像蔡美儿那样的虎妈，长头发，身材颀长，显得精力充沛</description></item><item><title>在Visual-Code中用正则表达式批量替换文件中的日期</title><link>http://localhost:1313/post/2021/2021-02/2021-01-29-%E5%9C%A8vs-code%E4%B8%AD%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%AD%E7%9A%84date/</link><pubDate>Fri, 29 Jan 2021 23:00:33 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-29-%E5%9C%A8vs-code%E4%B8%AD%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%AD%E7%9A%84date/</guid><description>&lt;p>2016年的日记是在简书里面写的，日记的标题都是带日期的，例如2016-03-30。现在导入Hugo的post以后，在存档页面的list中标题显示日期，就有点太长了，有时候长标题需要换行，显得不美观。于是想把日记里的标题日期都批量删除掉。尝试在VS Code的替换框用正则表达式来批量修改标题中的日期。&lt;/p></description></item><item><title>Dogecoin交易记录</title><link>http://localhost:1313/post/2021/2021-02/2021-01-29-dogecoin%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 29 Jan 2021 07:03:30 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-29-dogecoin%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/</guid><description>昨天参与了买卖Dogecoin，也叫狗币。整个过程比较刺激，比较投机，值得记录一笔。 整个交易记录如下： 9:51 AM第一次以0.019买入10美元 9:52</description></item><item><title>2021年2月提升计划</title><link>http://localhost:1313/post/2021/2021-02/2021-01-28-feb-perfermance-improve-plan/</link><pubDate>Thu, 28 Jan 2021 10:16:57 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-28-feb-perfermance-improve-plan/</guid><description>2021年二月份打算从编程技能、系统设计、英语听说读写、健身锻炼四个方面来提升自己。 编程技能 夯实算法基础：把常见的算法用Java，JavaS</description></item><item><title>用Hugo生成新Post，Typora编写，自动部署</title><link>http://localhost:1313/post/2021/2021-02/2021-01-27-hugo%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90post-typora%E7%BC%96%E5%86%99%E6%8F%90%E4%BA%A4%E4%B8%8E%E9%83%A8%E7%BD%B2/</link><pubDate>Wed, 27 Jan 2021 15:43:22 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-27-hugo%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90post-typora%E7%BC%96%E5%86%99%E6%8F%90%E4%BA%A4%E4%B8%8E%E9%83%A8%E7%BD%B2/</guid><description>撰写新的文章需要几个步骤： 用Hugo 命令生成新的文章，hugo new content/post/blog_2021/2021-01-27-new-post.md 打开Typora Markdown编辑工具编辑这个文章 编写完毕以后，保存并提</description></item><item><title>2021年博客更新计划</title><link>http://localhost:1313/post/2021/2021-02/2021-01-27-blog-plan/</link><pubDate>Wed, 27 Jan 2021 10:56:25 -0800</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-27-blog-plan/</guid><description>持续三天的博客搭建尝试，终于告一段落了。目前的博客计划是把以前在CSDN，简书，Medium上写的文章都迁移到自己的博客中，修订以后，统一管</description></item><item><title>2020 全年回顾</title><link>http://localhost:1313/post/2021/2021-02/2021-01-24-2020-annual-summary/</link><pubDate>Sun, 24 Jan 2021 10:13:00 +0000</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-24-2020-annual-summary/</guid><description>2020年过去了，发生了很多事情，值得写一下。新冠对我们的生活影响非常大。去年用一句话来概括：换工作、搬到西雅图、买房安家。 记录一下去年一整</description></item><item><title>折腾Hexo和Jekyll</title><link>http://localhost:1313/post/2021/2021-02/2021-01-24-jekyll-and-hexo-logs/</link><pubDate>Sun, 24 Jan 2021 01:45:00 +0000</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-24-jekyll-and-hexo-logs/</guid><description>Hexo 尝试了Hexo，是用Nodejs的 比较容易生成博客，速度快，但是deploy到github pages 需要提交的文件比较多。异步问题 2021-01-25 更新 修改 Deploy 到s</description></item><item><title>Jekyll-install-notes</title><link>http://localhost:1313/post/2021/2021-02/2021-01-22-jekyll-install-notes/</link><pubDate>Fri, 22 Jan 2021 17:55:00 +0000</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-22-jekyll-install-notes/</guid><description>Jekyll notes Jekyll - Transform your plain text into static websites and blogs. Get up and running in seconds. Quick-start Instructions
1 2 3 4 5 6 7 gem install bundler jekyll jekyll new my-awesome-site cd my-awesome-site bundle exec jekyll serve Install FAQ gem install bundler You don&amp;rsquo;t have write permissions for the /Library/Ruby/Gems/2.3.0 directory. (mac user)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 Install zsh https://github.</description></item><item><title>看《动物凶猛》和《阳光灿烂的日子》有感</title><link>http://localhost:1313/post/2021/2021-02/2021-01-22-in-the-heat-of-the-sun-1994/</link><pubDate>Fri, 22 Jan 2021 17:08:00 +0000</pubDate><guid>http://localhost:1313/post/2021/2021-02/2021-01-22-in-the-heat-of-the-sun-1994/</guid><description>先是在Kindle电子书看了王朔写的《动物凶猛》，觉得写得蛮好的。其中有一段有点没弄清楚，就是马小军究竟是否事先见过米兰的那个红色泳衣照片，</description></item><item><title>冬日暖阳，适宜外出散步</title><link>http://localhost:1313/post/2020/2020-12-11-winter-sunshine-nice/</link><pubDate>Fri, 11 Dec 2020 08:30:00 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-12-11-winter-sunshine-nice/</guid><description>12/11/2020 今天休息一天，没有看code，看了一会儿Kindle上的程序员修炼的书籍，把自己当作一个企业。自己不光是工作拿薪水，还需要提高自己的能力，</description></item><item><title>英雄莫问出处</title><link>http://localhost:1313/post/2020/2020-11-21--ill-be-the-one/</link><pubDate>Sat, 21 Nov 2020 15:36:00 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-11-21--ill-be-the-one/</guid><description>冲段少年 推荐一下《棋魂》这部电视剧。看了国产真人版《棋魂》，才觉得定段赛对冲段少年多么重要。《平凡的荣耀》里面的孙弈秋没能通过定段赛成为职业</description></item><item><title>Python3爬取小说章节</title><link>http://localhost:1313/post/2020/2020-09-24-python-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4/</link><pubDate>Thu, 24 Sep 2020 18:17:13 -0800</pubDate><guid>http://localhost:1313/post/2020/2020-09-24-python-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4/</guid><description>网络小说《侯大利刑侦笔记》比较吸引人，在手机上的微信读书App看得不过瘾。于是找到了一个小说论坛，可以顺畅地看小说了，但是一页一页地点击论坛</description></item><item><title>有哪些你毕业多年后才明白的道理?</title><link>http://localhost:1313/post/2020/2020-09-13-%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%A0%E6%AF%95%E4%B8%9A%E5%A4%9A%E5%B9%B4%E5%90%8E%E6%89%8D%E6%98%8E%E7%99%BD%E7%9A%84%E9%81%93%E7%90%86/</link><pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-09-13-%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%A0%E6%AF%95%E4%B8%9A%E5%A4%9A%E5%B9%B4%E5%90%8E%E6%89%8D%E6%98%8E%E7%99%BD%E7%9A%84%E9%81%93%E7%90%86/</guid><description>有哪些你毕业多年后才明白的道理？ 1、那些虚假的情话，都是为了上床做铺垫 爱情是不需要通过说来表达的，要的是实际行动；那些刻意编造、行为与承诺不</description></item><item><title>看了文章《黄峥四十》</title><link>http://localhost:1313/post/2020/2020-09-03-%E7%9C%8B%E4%BA%86%E6%96%87%E7%AB%A0%E9%BB%84%E5%B3%A5%E5%9B%9B%E5%8D%81/</link><pubDate>Thu, 03 Sep 2020 01:52:12 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-09-03-%E7%9C%8B%E4%BA%86%E6%96%87%E7%AB%A0%E9%BB%84%E5%B3%A5%E5%9B%9B%E5%8D%81/</guid><description>拼多多创始人黄峥小学就是学霸，经常考第一名，也参加过奥数，后来上了杭州外国语学校，高三被保送浙江大学，接受了良好的本科教育，本科导师是浙大软</description></item><item><title>第一章 楔子</title><link>http://localhost:1313/post/2020/2020-09-02-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A5%94%E5%AD%90/</link><pubDate>Wed, 02 Sep 2020 13:47:58 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-09-02-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A5%94%E5%AD%90/</guid><description>襄河，指汉江下游河段，它发源于陕西秦岭太白山，蜿蜒流经陕、鄂两省，至汉口龙王庙与汉阳南岸嘴夹峙处汇入长江，是长江最大的支流。汉江在陕西汉中一</description></item><item><title>沟通效率有点低</title><link>http://localhost:1313/post/2020/2020-08-30-%E6%B2%9F%E9%80%9A%E6%95%88%E7%8E%87%E6%9C%89%E7%82%B9%E4%BD%8E/</link><pubDate>Sun, 30 Aug 2020 15:24:11 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-30-%E6%B2%9F%E9%80%9A%E6%95%88%E7%8E%87%E6%9C%89%E7%82%B9%E4%BD%8E/</guid><description>我在和人谈话的时候，总是没太多耐心听人家把话说完，也喜欢自己带着观点去听人家讲话。 这样导致我和人家的沟通效率很低，这也是我的职位等级不能上去</description></item><item><title>重读安永全先生的《我的高考》</title><link>http://localhost:1313/post/2020/2020-08-29-%E9%87%8D%E8%AF%BB%E5%AE%89%E6%B0%B8%E5%85%A8%E5%85%88%E7%94%9F%E7%9A%84%E6%88%91%E7%9A%84%E9%AB%98%E8%80%83/</link><pubDate>Sat, 29 Aug 2020 09:35:04 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-29-%E9%87%8D%E8%AF%BB%E5%AE%89%E6%B0%B8%E5%85%A8%E5%85%88%E7%94%9F%E7%9A%84%E6%88%91%E7%9A%84%E9%AB%98%E8%80%83/</guid><description>原文：我的高考 安永全 晚来有闲，到康杰中学高三的文科班看了看。面对就要高考的同学们， 或者说是备受磨难的孩子们。三十八年前靠自修两次高考之事涌上</description></item><item><title>《一出好戏》观后感：物竞天择，适者生存</title><link>http://localhost:1313/post/2020/2020-08-27-%E4%B8%80%E5%87%BA%E5%A5%BD%E6%88%8F%E8%A7%82%E5%90%8E%E6%84%9F-%E7%89%A9%E7%AB%9E%E5%A4%A9%E6%8B%A9%E9%80%82%E8%80%85%E7%94%9F%E5%AD%98/</link><pubDate>Thu, 27 Aug 2020 02:58:39 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-27-%E4%B8%80%E5%87%BA%E5%A5%BD%E6%88%8F%E8%A7%82%E5%90%8E%E6%84%9F-%E7%89%A9%E7%AB%9E%E5%A4%A9%E6%8B%A9%E9%80%82%E8%80%85%E7%94%9F%E5%AD%98/</guid><description>昨天晚上看了黄渤导演的《一出好戏》英文名《The Island》，总体感觉还可以。 电影梗概 一开始王宝强饰演的司机兼导游小王开着冲鸭号遭遇海上事</description></item><item><title>读微信文章《我认识的美国穷人乔安娜》有感</title><link>http://localhost:1313/post/2020/2020-08-21-%E8%AF%BB%E5%BE%AE%E4%BF%A1%E6%96%87%E7%AB%A0%E6%88%91%E8%AE%A4%E8%AF%86%E7%9A%84%E7%BE%8E%E5%9B%BD%E7%A9%B7%E4%BA%BA%E4%B9%94%E5%AE%89%E5%A8%9C%E6%9C%89%E6%84%9F/</link><pubDate>Fri, 21 Aug 2020 23:09:13 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-21-%E8%AF%BB%E5%BE%AE%E4%BF%A1%E6%96%87%E7%AB%A0%E6%88%91%E8%AE%A4%E8%AF%86%E7%9A%84%E7%BE%8E%E5%9B%BD%E7%A9%B7%E4%BA%BA%E4%B9%94%E5%AE%89%E5%A8%9C%E6%9C%89%E6%84%9F/</guid><description>8/21/20 7:39 AM 读微信文章《我认识的美国穷人乔安娜》 有感 原文链接 美国有三千八百万人生活在贫困线以下。 作者在法学院读书的时候，她选过一节名为“贫穷”的课</description></item><item><title>樊登读书会《第三选择》分享的建议</title><link>http://localhost:1313/post/2020/2020-08-14-%E6%A8%8A%E7%99%BB%E8%AF%BB%E4%B9%A6%E4%BC%9A-%E7%AC%AC%E4%B8%89%E9%80%89%E6%8B%A9%E5%88%86%E4%BA%AB%E7%9A%84%E5%BB%BA%E8%AE%AE/</link><pubDate>Fri, 14 Aug 2020 11:46:55 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-14-%E6%A8%8A%E7%99%BB%E8%AF%BB%E4%B9%A6%E4%BC%9A-%E7%AC%AC%E4%B8%89%E9%80%89%E6%8B%A9%E5%88%86%E4%BA%AB%E7%9A%84%E5%BB%BA%E8%AE%AE/</guid><description>樊登读书会《 第三选择》分享的建议，摘录如下： 不骄傲自满，放下自己总是正确的想法 学会说“对不起” 快速宽恕被轻视的感觉。你可以选是否被冒犯，如果</description></item><item><title>2020-08-13 读了《北上广女子图鉴》</title><link>http://localhost:1313/post/2020/2020-08-13-%E8%AF%BB%E4%BA%86%E5%8C%97%E4%B8%8A%E5%B9%BF%E5%A5%B3%E5%AD%90%E5%9B%BE%E9%89%B4/</link><pubDate>Fri, 14 Aug 2020 08:32:19 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-13-%E8%AF%BB%E4%BA%86%E5%8C%97%E4%B8%8A%E5%B9%BF%E5%A5%B3%E5%AD%90%E5%9B%BE%E9%89%B4/</guid><description>花了两个多小时读完这本书，感觉作者写得还比较细腻入微。23个女子的故事，各有各的特色。 因为是程序员嘛，所以关心其中对女程序员的描写，还有男程</description></item><item><title>读了《北上广女子图鉴》</title><link>http://localhost:1313/post/jianshu/2020/2020-08-13-%E8%AF%BB%E4%BA%86%E5%8C%97%E4%B8%8A%E5%B9%BF%E5%A5%B3%E5%AD%90%E5%9B%BE%E9%89%B4/</link><pubDate>Fri, 14 Aug 2020 08:32:19 +0000</pubDate><guid>http://localhost:1313/post/jianshu/2020/2020-08-13-%E8%AF%BB%E4%BA%86%E5%8C%97%E4%B8%8A%E5%B9%BF%E5%A5%B3%E5%AD%90%E5%9B%BE%E9%89%B4/</guid><description>花了两个多小时读完这本书，感觉作者写得还比较细腻入微。23个女子的故事，各有各的特色。 因为是程序员嘛，所以关心其中对女程序员的描写，还有男程</description></item><item><title>用双拼输入法写小说</title><link>http://localhost:1313/post/2020/2020-08-10-shuangpin-typing-md/</link><pubDate>Mon, 10 Aug 2020 10:12:30 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-10-shuangpin-typing-md/</guid><description>通过将近一周的时间掌握了双拼输入法。的确比全拼输入法要节省击键次数。输入速度也提高不少。连带的效果是，我之前拼音没学会，zh/z，ch/c，</description></item><item><title>2020-08在家办公以后生活回顾与总结</title><link>http://localhost:1313/post/2020/2020-08-09-%E5%9C%A8%E5%AE%B6%E5%8A%9E%E5%85%AC%E4%BB%A5%E5%90%8E%E7%94%9F%E6%B4%BB%E5%9B%9E%E9%A1%BE%E4%B8%8E%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 09 Aug 2020 03:01:33 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-08-09-%E5%9C%A8%E5%AE%B6%E5%8A%9E%E5%85%AC%E4%BB%A5%E5%90%8E%E7%94%9F%E6%B4%BB%E5%9B%9E%E9%A1%BE%E4%B8%8E%E6%80%BB%E7%BB%93/</guid><description>今天重新登录简书来记录自己的这五个月居家工作历程。 工作还是有条不紊地去做。 生活习惯起了变化，晚上睡得有点晚，有几天刷小时和视频到了凌晨。 看过</description></item><item><title>2020-04-18 Mac下面文件压缩与解压</title><link>http://localhost:1313/post/2020/2020-04-19-mac%E4%B8%8B%E9%9D%A2%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</link><pubDate>Sun, 19 Apr 2020 02:05:47 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-04-19-mac%E4%B8%8B%E9%9D%A2%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</guid><description>要通过微信传送文件给国内的同学，他要的文件压缩以后为150MB，微信上传文件的限制是100MB。解决方案就是，把文件夹压缩成两个80MB以下</description></item><item><title>Kubernetes Dashboard - skip Auth</title><link>http://localhost:1313/post/2020/2020-04-09-kubernetes-dashboard-skip-auth/</link><pubDate>Thu, 09 Apr 2020 03:27:34 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-04-09-kubernetes-dashboard-skip-auth/</guid><description>Ref this doc: Bypassing authentication for the local Kubernetes Cluster Dashboard
open the downloaded file in your favorite text editor, I’ll use VS Code.
1 code .\kubernetes-dashboard.yaml Locate the container -&amp;gt; args section under the Dashboard-Deployment section (around line 116) and add the following command line arguments:
1 2 --enable-skip-login --disable-settings-authorizer Your modified args section should look like the following
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 spec: containers: - name: kubernetes-dashboard image: k8s.</description></item><item><title>转载-湾区无人车公司找工作总结</title><link>http://localhost:1313/post/2020/2020-03-19-%E8%BD%AC%E8%BD%BD-%E6%B9%BE%E5%8C%BA%E6%97%A0%E4%BA%BA%E8%BD%A6%E5%85%AC%E5%8F%B8%E6%89%BE%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 19 Mar 2020 13:49:42 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-03-19-%E8%BD%AC%E8%BD%BD-%E6%B9%BE%E5%8C%BA%E6%97%A0%E4%BA%BA%E8%BD%A6%E5%85%AC%E5%8F%B8%E6%89%BE%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/</guid><description>2020(1-3月) 码农类General 博士 全职@Amazon - 网上海投 - **技术电面 Onsite 视频面试 ** | Pass/Offer | 在职跳槽 | 本帖最后由 usummer 于 2020-3-18 12:08 编辑 在职</description></item><item><title>《虎度门》和《盲井》</title><link>http://localhost:1313/post/2020/2020-03-18-%E8%99%8E%E5%BA%A6%E9%97%A8/</link><pubDate>Thu, 19 Mar 2020 12:34:47 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-03-18-%E8%99%8E%E5%BA%A6%E9%97%A8/</guid><description>《虎度门》 萧芳芳演得真好，把冷剑心这个粤剧名伶演绎得精彩纷呈。其中母子情，师徒情都比较感人。袁咏仪的扮相也很棒。 《盲井》 展现出人性的恶，还有</description></item><item><title>2020-03-16在家工作的思考</title><link>http://localhost:1313/post/2020/2020-03-16%E5%9C%A8%E5%AE%B6%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%80%9D%E8%80%83/</link><pubDate>Tue, 17 Mar 2020 02:33:41 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-03-16%E5%9C%A8%E5%AE%B6%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%80%9D%E8%80%83/</guid><description>因为疫情的原因，公司安排技术部门员工从上周二开始在家工作，顺便测试公司的IT基础设施是否能抗住这么多人在家工作。 一开始因为大家都有没适应这种</description></item><item><title>看电影《念书的孩子》</title><link>http://localhost:1313/post/2020/2020-03-14-%E5%BF%B5%E4%B9%A6%E7%9A%84%E5%AD%A9%E5%AD%90/</link><pubDate>Sat, 14 Mar 2020 12:31:12 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-03-14-%E5%BF%B5%E4%B9%A6%E7%9A%84%E5%AD%A9%E5%AD%90/</guid><description>看了油管上博主何止电影推荐的《念书的孩子》。讲了爷孙相依为命，孙子在山里念书的事情。家里没钱交电视费，看不了电视，开开只能念书给爷爷听。爸妈</description></item><item><title>influxdb-grafana</title><link>http://localhost:1313/post/2020/2020-03-03-influxdb-grafana/</link><pubDate>Tue, 03 Mar 2020 07:15:23 +0000</pubDate><guid>http://localhost:1313/post/2020/2020-03-03-influxdb-grafana/</guid><description>在MacBook上启动了InfluxDB 和 Grafana，做监控指标的存储和监控主面板。Grafana的监控模版可以去Grafana官网上去</description></item><item><title>2019年前端面试与技术准备</title><link>http://localhost:1313/post/2019/2019-11-16-fe-interview-prepare/</link><pubDate>Sat, 16 Nov 2019 11:27:05 +0000</pubDate><guid>http://localhost:1313/post/2019/2019-11-16-fe-interview-prepare/</guid><description>前端面试准备链接 airuikun/Weekly-FE-Interview, 每周十道前端大厂面试题，并收集大家在大厂面试中遇到的难题，一起共同成长。 jirengu 大家可以在Issue上通过提交Issue的形式提</description></item><item><title>读《如何超过大多数人》有感</title><link>http://localhost:1313/post/2019/2019-10-26-coolshell-0622-2019/</link><pubDate>Thu, 24 Oct 2019 09:11:05 +0000</pubDate><guid>http://localhost:1313/post/2019/2019-10-26-coolshell-0622-2019/</guid><description>陈皓的文章如何超过大多数人很有意思，用诙谐的语气指出了普通人在信息获取上的弊端。 只要不沉迷于一些杀时间的互联网产品，例如抖音、微信和微博，你</description></item><item><title>2019-10-04 送东阳马生序 原文</title><link>http://localhost:1313/post/2019/2019-10-05-%E9%80%81%E4%B8%9C%E9%98%B3%E9%A9%AC%E7%94%9F%E5%BA%8F-%E5%8E%9F%E6%96%87/</link><pubDate>Sat, 05 Oct 2019 00:54:49 +0000</pubDate><guid>http://localhost:1313/post/2019/2019-10-05-%E9%80%81%E4%B8%9C%E9%98%B3%E9%A9%AC%E7%94%9F%E5%BA%8F-%E5%8E%9F%E6%96%87/</guid><description>明代： 宋濂 余幼时即嗜学。家贫，无从致书以观，每假借于藏书之家，手自笔录，计日以还。天大寒，砚冰坚，手指不可屈伸，弗之怠。录毕，走送之，不敢稍</description></item><item><title>2019-10-04 为学-彭端淑</title><link>http://localhost:1313/post/2019/2019-10-05-%E4%B8%BA%E5%AD%A6-%E5%BD%AD%E7%AB%AF%E6%B7%91/</link><pubDate>Sat, 05 Oct 2019 00:33:19 +0000</pubDate><guid>http://localhost:1313/post/2019/2019-10-05-%E4%B8%BA%E5%AD%A6-%E5%BD%AD%E7%AB%AF%E6%B7%91/</guid><description>为学 作者：彭端淑 天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。人之为学有难易乎？学之，则难者亦易矣；不学，则易者亦难矣。 吾资之昏，</description></item><item><title>79. Word Search</title><link>http://localhost:1313/post/2019/2019-08-19-79-word-search/</link><pubDate>Mon, 19 Aug 2019 14:05:13 +0000</pubDate><guid>http://localhost:1313/post/2019/2019-08-19-79-word-search/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 79. Word Search Medium Given a 2D board and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cell, where &amp;#34;adjacent&amp;#34; cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once. Example:</description></item><item><title>重庆万州公交车堕江的反思</title><link>http://localhost:1313/post/2018/2018-11-02-%E9%87%8D%E5%BA%86%E4%B8%87%E5%B7%9E%E5%85%AC%E4%BA%A4%E8%BD%A6%E5%A0%95%E6%B1%9F%E7%9A%84%E5%8F%8D%E6%80%9D/</link><pubDate>Fri, 02 Nov 2018 23:52:17 +0000</pubDate><guid>http://localhost:1313/post/2018/2018-11-02-%E9%87%8D%E5%BA%86%E4%B8%87%E5%B7%9E%E5%85%AC%E4%BA%A4%E8%BD%A6%E5%A0%95%E6%B1%9F%E7%9A%84%E5%8F%8D%E6%80%9D/</guid><description>重庆万州公交车堕江起因是48岁的女乘客因为坐过站和司机争执，升级为相互殴打，进而导致堕江的悲剧。在这里姑且不论双方的对错，我想谈谈其他13名</description></item><item><title>2018-11-01读了《读史论人生》</title><link>http://localhost:1313/post/2018/2018-11-01-%E8%AF%BB%E4%BA%86%E8%AF%BB%E5%8F%B2%E8%AE%BA%E4%BA%BA%E7%94%9F/</link><pubDate>Fri, 02 Nov 2018 06:46:02 +0000</pubDate><guid>http://localhost:1313/post/2018/2018-11-01-%E8%AF%BB%E4%BA%86%E8%AF%BB%E5%8F%B2%E8%AE%BA%E4%BA%BA%E7%94%9F/</guid><description>读了《读史论人生》觉得很有收获。作者是一个退休的金融银行投资专家。养育了两个儿子。 奔走在香港、台湾、日本、欧洲和美国、加拿大一些地方。 他对钱</description></item><item><title>2018-05-03遇到一个有趣的Uber司机</title><link>http://localhost:1313/post/2018/2018-05-03-%E9%81%87%E5%88%B0%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84uber%E5%8F%B8%E6%9C%BA/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2018/2018-05-03-%E9%81%87%E5%88%B0%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84uber%E5%8F%B8%E6%9C%BA/</guid><description>5月3号坐Uber从公司去 Santa Clara的Palo Alto Networks现场面试。 Uber司机是一个热情开朗的中年华人，穿着抓绒外套，带着眼镜，斯</description></item><item><title>This is a hidden post.</title><link>http://localhost:1313/post/2017/hidden-post/</link><pubDate>Thu, 08 Mar 2018 17:40:19 +0800</pubDate><guid>http://localhost:1313/post/2017/hidden-post/</guid><description>&lt;p>This post is hidden from the home page.&lt;/p></description></item><item><title>2018喜欢的导演、电影和书</title><link>http://localhost:1313/post/2018/2018-01-29-%E5%96%9C%E6%AC%A2%E7%9A%84%E5%AF%BC%E6%BC%94%E7%94%B5%E5%BD%B1%E5%92%8C%E4%B9%A6/</link><pubDate>Mon, 29 Jan 2018 12:01:51 -0800</pubDate><guid>http://localhost:1313/post/2018/2018-01-29-%E5%96%9C%E6%AC%A2%E7%9A%84%E5%AF%BC%E6%BC%94%E7%94%B5%E5%BD%B1%E5%92%8C%E4%B9%A6/</guid><description>喜欢的导演 胡金铨、侯孝贤、杨德昌、李安、许鞍华、周星驰、张艺谋、姜文、黑泽明、北野武、吕克·贝松、诺兰、昆丁.塔伦、斯皮尔伯格、大卫·芬奇 喜</description></item><item><title>让Vim支持Javascript语法高亮显示</title><link>http://localhost:1313/post/2017/2017-11-05-%E8%AE%A9vim%E6%94%AF%E6%8C%81javascript%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E6%98%BE%E7%A4%BA/</link><pubDate>Sun, 05 Nov 2017 03:30:47 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-11-05-%E8%AE%A9vim%E6%94%AF%E6%8C%81javascript%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E6%98%BE%E7%A4%BA/</guid><description>Installation Download plug.vim and put it in the &amp;ldquo;autoload&amp;rdquo; directory. Ref: vim-plug Vim Unix 1 2 curl -fLo ~/.vim/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Windows (PowerShell) 1 2 3 4 5 6 7 8 md ~\vimfiles\autoload $uri = &amp;#39;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&amp;#39; (New-Object Net.WebClient).DownloadFile( $uri, $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath( &amp;#34;~\vimfiles\autoload\plug.vim&amp;#34; ) ) Usage Add a vim-plug section to your ~/.vimrc (or ~/.config/nvim/init.vim for Neovim): Begin the section with call plug#begin() List the plugins with Plug commands call plug#end()</description></item><item><title>257. Binary Tree Paths</title><link>http://localhost:1313/post/2017/2017-10-08-257-binary-tree-paths/</link><pubDate>Sun, 08 Oct 2017 23:50:01 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-10-08-257-binary-tree-paths/</guid><description>** Notes: 这道题和 PathSum ii 比较类似，解法只需要改动一两行即可。 **Add to List **Description**Hints**Submissions**Solutions Total Accepted: 101944 Total Submissions: 276629 Difficulty: Easy Contributor: LeetCode Given a binary tree, return all root-to-leaf paths. For example, given the following binary tree: 1 / \2 3 \ 5 All root-to-leaf paths are: [&amp;ldquo;1-&amp;gt;2-&amp;gt;5&amp;rdquo;, &amp;ldquo;1-&amp;gt;3&amp;rdquo;] **Credits:**Special thanks to</description></item><item><title>108. Convert Sorted Array to Binary Search Tree</title><link>http://localhost:1313/post/2017/2017-09-18-108-convert-sorted-array-to-binary-search-tree/</link><pubDate>Mon, 18 Sep 2017 09:22:58 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-09-18-108-convert-sorted-array-to-binary-search-tree/</guid><description>Given an array where elements are sorted in ascending order, convert it to a height balanced BST. 解题思路： dfs ，按照bst的定义，从nums的中点选做head， 然后左右两边去dfs 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>生日将近</title><link>http://localhost:1313/post/2017/2017-08-09-%E7%94%9F%E6%97%A5%E5%B0%86%E8%BF%91/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-08-09-%E7%94%9F%E6%97%A5%E5%B0%86%E8%BF%91/</guid><description>老婆儿子来的这段时光。我很快乐。换工作也有眉目了。但是还不够稳定。主要是自己的实力还不够，对自己所掌握的技术不够透彻。 每到面试的时候，发觉自</description></item><item><title>Webstorm-适合写javascript</title><link>http://localhost:1313/post/2017/2017-07-14-webstorm-%E9%80%82%E5%90%88%E5%86%99javascript/</link><pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-07-14-webstorm-%E9%80%82%E5%90%88%E5%86%99javascript/</guid><description>感觉比intelij 好用太多了。 首先注释方面 // /* */ 就比intelij好用。 然后颜色有点侧边条显示。 这一点对UI调色尤为重要。</description></item><item><title>七月过半</title><link>http://localhost:1313/post/2017/2017-07-13-%E4%B8%83%E6%9C%88%E8%BF%87%E5%8D%8A/</link><pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-07-13-%E4%B8%83%E6%9C%88%E8%BF%87%E5%8D%8A/</guid><description>从7月1号开始，陆续去tahoe湖晚了， 又去了旧金山看老同事。 然后，国内老师的女儿和男友又过来湾区玩，地陪加司机。 我这段时间算是懈怠了。 今天</description></item><item><title>536. Construct Binary Tree from String</title><link>http://localhost:1313/post/2017/2017-07-05-536-construct-binary-tree-from-string/</link><pubDate>Wed, 05 Jul 2017 02:32:37 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-07-05-536-construct-binary-tree-from-string/</guid><description>You need to construct a binary tree from a string consisting of parenthesis and integers. The whole input represents a binary tree. It contains an integer followed by zero, one or two pairs of parenthesis. The integer represents the root&amp;rsquo;s value and a pair of parenthesis contains a child binary tree with the same structure. You always start to construct the left child node of the parent first if it</description></item><item><title>606. Construct String from Binary Tree</title><link>http://localhost:1313/post/2017/2017-07-05-606-construct-string-from-binary-tree/</link><pubDate>Wed, 05 Jul 2017 01:53:37 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-07-05-606-construct-string-from-binary-tree/</guid><description>You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way. The null node needs to be represented by empty parenthesis pair &amp;ldquo;()&amp;rdquo;. And you need to omit all the empty parenthesis pairs that don&amp;rsquo;t affect the one-to-one mapping relationship between the string and the original binary tree. Example 1: Input: Binary tree: [1,2,3,4] 1 / 2 3 / 4 Output:</description></item><item><title>2017-06-29路遇交警查超速</title><link>http://localhost:1313/post/2017/2017-06-29-%E8%B7%AF%E9%81%87%E4%BA%A4%E8%AD%A6%E6%9F%A5%E8%B6%85%E9%80%9F/</link><pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-29-%E8%B7%AF%E9%81%87%E4%BA%A4%E8%AD%A6%E6%9F%A5%E8%B6%85%E9%80%9F/</guid><description>今天在去接小可同学的路上，刚转到central ave 停着一辆警察摩托，我开过去的的时候下意识减速了。 警察没有没找我麻烦，我左后侧跟随的一辆车中招</description></item><item><title>17. Letter Combinations of a Phone Number</title><link>http://localhost:1313/post/2017/2017-06-24-17-letter-combinations-of-a-phone-number/</link><pubDate>Sat, 24 Jun 2017 12:39:47 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-24-17-letter-combinations-of-a-phone-number/</guid><description>Given a digit string, return all possible letter combinations that the number could represent. A mapping of digit to letters (just like on the telephone buttons) is given below. **Input:**Digit string &amp;ldquo;23&amp;rdquo;Output: [&amp;ldquo;ad&amp;rdquo;, &amp;ldquo;ae&amp;rdquo;, &amp;ldquo;af&amp;rdquo;, &amp;ldquo;bd&amp;rdquo;, &amp;ldquo;be&amp;rdquo;, &amp;ldquo;bf&amp;rdquo;, &amp;ldquo;cd&amp;rdquo;, &amp;ldquo;ce&amp;rdquo;, &amp;ldquo;cf&amp;rdquo;]. **解题思路 ** 两种解法： 1. back tracking 2. iterative 用一个Queue存取中间</description></item><item><title>有感于刘国梁被离职乒乓球总教练</title><link>http://localhost:1313/post/2017/2017-06-24-%E6%9C%89%E6%84%9F%E4%BA%8E%E5%88%98%E5%9B%BD%E6%A2%81%E8%A2%AB%E7%A6%BB%E8%81%8C%E4%B9%92%E4%B9%93%E7%90%83%E6%80%BB%E6%95%99%E7%BB%83/</link><pubDate>Sat, 24 Jun 2017 08:25:17 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-24-%E6%9C%89%E6%84%9F%E4%BA%8E%E5%88%98%E5%9B%BD%E6%A2%81%E8%A2%AB%E7%A6%BB%E8%81%8C%E4%B9%92%E4%B9%93%E7%90%83%E6%80%BB%E6%95%99%E7%BB%83/</guid><description>刘国梁被离职乒乓球总教练，相关的运动员退赛 四十岁的刘国梁，一路走来很不容易。成为第19名平协副主席，有职无权，可以理解为被废黜了。人生有起伏</description></item><item><title>360. Sort Transformed Array</title><link>http://localhost:1313/post/2017/2017-06-23-360-sort-transformed-array/</link><pubDate>Fri, 23 Jun 2017 12:14:18 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-23-360-sort-transformed-array/</guid><description>Given a sorted array of integers nums and integer values a, b and c. Apply a function of the form f(x) = ax2 + bx + c to each element x in the array. The returned array must be in sorted order. Expected time complexity: O(n) Example: nums = [-4, -2, 2, 4], a = 1, b = 3, c = 5, Result: [3, 9, 15, 33] nums = [-4,</description></item><item><title>2017-06-21机遇留给有准备的人</title><link>http://localhost:1313/post/2017/2017-06-21-%E6%9C%BA%E9%81%87%E7%95%99%E7%BB%99%E6%9C%89%E5%87%86%E5%A4%87%E7%9A%84%E4%BA%BA/</link><pubDate>Wed, 21 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-21-%E6%9C%BA%E9%81%87%E7%95%99%E7%BB%99%E6%9C%89%E5%87%86%E5%A4%87%E7%9A%84%E4%BA%BA/</guid><description>朋友之前在国内是做类似Google TensorFlow的项目。来湾区工作不到半年，这周一就拿到新公司offer，38万美元的包裹，让我心动不</description></item><item><title>2017-06-19去旧金山领事馆换发护照</title><link>http://localhost:1313/post/2017/2017-06-20-%E5%8E%BB%E6%97%A7%E9%87%91%E5%B1%B1%E9%A2%86%E4%BA%8B%E9%A6%86%E6%8D%A2%E5%8F%91%E6%8A%A4%E7%85%A7/</link><pubDate>Tue, 20 Jun 2017 07:31:01 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-20-%E5%8E%BB%E6%97%A7%E9%87%91%E5%B1%B1%E9%A2%86%E4%BA%8B%E9%A6%86%E6%8D%A2%E5%8F%91%E6%8A%A4%E7%85%A7/</guid><description>旧护照还是在2007年准备去香港出差办理的，快要过期了。提前在网上约了6月19号下午1:00-2:00在旧金山领事馆办理新护照。 打Uber从</description></item><item><title>259. 3Sum Smaller</title><link>http://localhost:1313/post/2017/2017-06-19-259-3sum-smaller/</link><pubDate>Mon, 19 Jun 2017 08:02:19 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-19-259-3sum-smaller/</guid><description>Given an array of n integers nums and a target, find the number of index triplets i, j, k with 0 &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt; n that satisfy the condition nums[i] + nums[j] + nums[k] &amp;lt; target. For example, given nums = [-2, 0, 1, 3], and target = 2. Return 2. Because there are two triplets which sums are less than 2: [-2, 0, 1] [-2,</description></item><item><title> 61. Rotate List</title><link>http://localhost:1313/post/2017/2017-06-18-61-rotate-list/</link><pubDate>Sun, 18 Jun 2017 06:58:19 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-18-61-rotate-list/</guid><description>Given a list, rotate the list to the right by k places, where k is non-negative. For example: Given 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL and k = 2, return 4-&amp;gt;5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;NULL. ** 解题思路 ** 用快慢指针，分三步来做。第一步用fast 指针算出链表长度；第二步用slow 指</description></item><item><title>86. Partition List</title><link>http://localhost:1313/post/2017/2017-06-18-86-partition-list/</link><pubDate>Sun, 18 Jun 2017 02:52:30 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-18-86-partition-list/</guid><description>Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. You should preserve the original relative order of the nodes in each of the two partitions. For example, Given 1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;2 and x = 3, return 1-&amp;gt;2-&amp;gt;2-&amp;gt;4-&amp;gt;3-&amp;gt;5. ** 解题思路** 用两个queue 来分别</description></item><item><title>24. Swap Nodes in Pairs</title><link>http://localhost:1313/post/2017/2017-06-18-24-swap-nodes-in-pairs/</link><pubDate>Sun, 18 Jun 2017 00:53:43 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-18-24-swap-nodes-in-pairs/</guid><description>Given a linked list, swap every two adjacent nodes and return its head. For example, Given 1-&amp;gt;2-&amp;gt;3-&amp;gt;4, you should return the list as 2-&amp;gt;1-&amp;gt;4-&amp;gt;3. Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed. ** 解题思路** Using Recursion and Iterative Solution 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>19. Remove Nth Node From End of List</title><link>http://localhost:1313/post/2017/2017-06-17-19-remove-nth-node-from-end-of-list/</link><pubDate>Sat, 17 Jun 2017 13:12:40 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-17-19-remove-nth-node-from-end-of-list/</guid><description>Given a linked list, remove the nth node from the end of list and return its head. For example, Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2. After removing the second node from the end, the linked list becomes 1-&amp;gt;2-&amp;gt;3-&amp;gt;5. Note: Given n will always be valid. Try to do this in one pass. ** 解题报告 ** 使用快慢指针来做。 Using</description></item><item><title>92. Reverse Linked List II</title><link>http://localhost:1313/post/2017/2017-06-17-92-reverse-linked-list-ii/</link><pubDate>Sat, 17 Jun 2017 11:45:51 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-17-92-reverse-linked-list-ii/</guid><description>Reverse a linked list from position m to n. Do it in-place and in one-pass. For example: Given 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2 and n = 4, return 1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;NULL. Note: Given m, n satisfy the following condition: 1 ≤ m ≤ n ≤ length of list. ** 解题思路 ** 先用dummy node来记录链表的起始</description></item><item><title>27. Remove Element</title><link>http://localhost:1313/post/2017/2017-06-17-27-remove-element/</link><pubDate>Sat, 17 Jun 2017 09:41:31 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-17-27-remove-element/</guid><description>Given an array and a value, remove all instances of that value in place and return the new length. Do not allocate extra space for another array, you must do this in place with constant memory. The order of elements can be changed. It doesn&amp;rsquo;t matter what you leave beyond the new length. Example: Given input array nums = [3,2,2,3], val = 3 Your function should return length = 2,</description></item><item><title>2017-06-15去雅虎餐厅吃饭有感</title><link>http://localhost:1313/post/2017/2017-06-17-%E5%8E%BB%E9%9B%85%E8%99%8E%E9%A4%90%E5%8E%85%E5%90%83%E9%A5%AD%E6%9C%89%E6%84%9F/</link><pubDate>Sat, 17 Jun 2017 08:11:04 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-17-%E5%8E%BB%E9%9B%85%E8%99%8E%E9%A4%90%E5%8E%85%E5%90%83%E9%A5%AD%E6%9C%89%E6%84%9F/</guid><description>时隔一年多，又去雅虎餐厅吃饭了。心情和上次完全不一样。 上次，心里有点傍徨。因为没有拿到录用信，处于失业状态。去雅虎这么曾经高大上的地方，内心</description></item><item><title>345. Reverse Vowels of a String</title><link>http://localhost:1313/post/2017/2017-06-16-345-reverse-vowels-of-a-string/</link><pubDate>Fri, 16 Jun 2017 15:17:31 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-16-345-reverse-vowels-of-a-string/</guid><description>Write a function that takes a string as input and reverse only the vowels of a string. Example 1: Given s = &amp;ldquo;hello&amp;rdquo;, return &amp;ldquo;holle&amp;rdquo;. Example 2: Given s = &amp;ldquo;leetcode&amp;rdquo;, return &amp;ldquo;leotcede&amp;rdquo;. Note: The vowels does not include the letter &amp;ldquo;y&amp;rdquo;. **解题思路 ** Two pointers. Use a HashSet to reduce the look up time to O(1) 1 2 3 4 5 6 7 8</description></item><item><title>16. 3Sum Closest</title><link>http://localhost:1313/post/2017/2017-06-14-16-3sum-closest/</link><pubDate>Wed, 14 Jun 2017 09:01:19 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-14-16-3sum-closest/</guid><description>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution. For example, given array S = {-1 2 1 -4}, and target = 1. The sum that is closest to the target is 2. (-1 + 2 + 1</description></item><item><title>169. Majority Element</title><link>http://localhost:1313/post/2017/2017-06-12-169-majority-element/</link><pubDate>Mon, 12 Jun 2017 15:47:10 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-12-169-majority-element/</guid><description>**Description**Hints**Submissions**Solutions
Total Accepted: 192332 Total Submissions: 417285 Difficulty: Easy Contributor: LeetCode
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. You may assume that the array is non-empty and the majority element always exist in the array. **Credits:**Special thanks to @ts for adding this problem and creating all test cases.
Hide Company Tags Adobe Zenefits Hide Tags Array Divide and Conquer Bit Manipulation Hide Similar Problems (M) Majority Element II</description></item><item><title>350. Intersection of Two Arrays II</title><link>http://localhost:1313/post/2017/2017-06-12-350-intersection-of-two-arrays-ii/</link><pubDate>Mon, 12 Jun 2017 04:58:47 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-12-350-intersection-of-two-arrays-ii/</guid><description>Given two arrays, write a function to compute their intersection. Example: Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2, 2]. Note: Each element in the result should appear as many times as it shows in both arrays. The result can be in any order. ** Follow up: ** What if the given array is already sorted? How would you optimize your algorithm? What if nums1&amp;rsquo;s</description></item><item><title>349. Intersection of Two Arrays</title><link>http://localhost:1313/post/2017/2017-06-12-349-intersection-of-two-arrays/</link><pubDate>Mon, 12 Jun 2017 04:52:28 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-12-349-intersection-of-two-arrays/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>技能评估</title><link>http://localhost:1313/post/2017/2017-06-12-self-summary/</link><pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-12-self-summary/</guid><description>Strong Develop data virtualization and monitor application using d3.js, React, HTML5/CSS3; Design REST API, MicroServices, SOAP Web services using Node.js and Java; Built a real-time streaming pipeline with Kafka, InfluxDB and Telegraf Medium SQL database : MySQL, PostgreSQL, and NoSQL DB: MongoDB/ Redis DevOps tools and infrastructure: Docker, Kubernetes, Mesos and AWS, Google Cloud Platform Open source : ElasticSearch, Logstash, Kibana, Grafana, WebRTC/XMPP KnowHow Experience with agile development methodologies (SCRUM,</description></item><item><title>50. Pow(x, n)</title><link>http://localhost:1313/post/2017/2017-06-11-50-powx-n/</link><pubDate>Sun, 11 Jun 2017 09:28:33 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-11-50-powx-n/</guid><description>Implement pow(x, n). Hide Company Tags LinkedIn Google Bloomberg Facebook Hide Tags Binary Search Math Hide Similar Problems (E) Sqrt(x) (M) Super Pow ** 解题思路 ** 这道题有几种解题思路。 主要思想是用二分查找来做， 需要区分n &amp;lt; 0, n %2 == 1 or n % 2 == 0</description></item><item><title>154. Find Minimum in Rotated Sorted Array II</title><link>http://localhost:1313/post/2017/2017-06-11-154-find-minimum-in-rotated-sorted-array-ii/</link><pubDate>Sun, 11 Jun 2017 00:29:19 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-11-154-find-minimum-in-rotated-sorted-array-ii/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 77016 Total Submissions: 209191 Difficulty: Hard Contributor: LeetCode Follow up for &amp;ldquo;Find Minimum in Rotated Sorted Array&amp;rdquo;: **What if duplicates are allowed? Would this affect the run-time complexity? How and why? ** Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2). Find the</description></item><item><title>33. Search in Rotated Sorted Array</title><link>http://localhost:1313/post/2017/2017-06-10-33-search-in-rotated-sorted-array/</link><pubDate>Sat, 10 Jun 2017 12:38:57 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-33-search-in-rotated-sorted-array/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 168414 Total Submissions: 524192 Difficulty: Medium Contributor: LeetCode Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2 ). You are given a target value to search. If found in the array return its index, otherwise return -1. You may assume no duplicate exists</description></item><item><title>21. Merge Two Sorted Lists</title><link>http://localhost:1313/post/2017/2017-06-10-21-merge-two-sorted-lists/</link><pubDate>Sat, 10 Jun 2017 12:06:08 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-21-merge-two-sorted-lists/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 221656 Total Submissions: 571422 Difficulty: Easy Contributor: LeetCode Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists. Hide Company Tags Amazon LinkedIn Apple Microsoft Hide Tags Linked List Hide Similar Problems (H) Merge k Sorted Lists (E) Merge Sorted Array (M) Sort List (M) Shortest Word Distance II</description></item><item><title>88. Merge Sorted Array</title><link>http://localhost:1313/post/2017/2017-06-10-88-merge-sorted-array/</link><pubDate>Sat, 10 Jun 2017 11:42:18 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-88-merge-sorted-array/</guid><description>Merge Sorted Array **Question Editorial Solution My Submissions Total Accepted: 131111 Total Submissions: 420896 Difficulty: Easy Contributors: Admin Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. **Note:**You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and</description></item><item><title>142. Linked List Cycle II</title><link>http://localhost:1313/post/2017/2017-06-10-142-linked-list-cycle-ii/</link><pubDate>Sat, 10 Jun 2017 10:51:44 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-142-linked-list-cycle-ii/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 112637 Total Submissions: 363331 Difficulty: Medium Contributor: LeetCode Given a linked list, return the node where the cycle begins. If there is no cycle, return null . Note: Do not modify the linked list. Follow up:Can you solve it without using extra space? Hide Tags Linked List Two Pointers Hide Similar Problems (E) Linked List Cycle (M) Find the Duplicate Number ** 解题思路 **</description></item><item><title>141. Linked List Cycle</title><link>http://localhost:1313/post/2017/2017-06-10-141-linked-list-cycle/</link><pubDate>Sat, 10 Jun 2017 10:26:21 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-141-linked-list-cycle/</guid><description>**Description**Hints**Submissions**Solutions
Total Accepted: 177986 Total Submissions: 502453 Difficulty: Easy Contributor: LeetCode
Given a linked list, determine if it has a cycle in it. Follow up:Can you solve it without using extra space?
Hide Company Tags Amazon Microsoft Bloomberg Yahoo Hide Tags Linked List Two Pointers Hide Similar Problems (M) Linked List Cycle II
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* Use two pointers, slower and faster.</description></item><item><title>287. Find the Duplicate Number</title><link>http://localhost:1313/post/2017/2017-06-10-287-find-the-duplicate-number/</link><pubDate>Sat, 10 Jun 2017 09:42:01 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-287-find-the-duplicate-number/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 67370 Total Submissions: 157182 Difficulty: Medium Contributor: LeetCode Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one. Note: You must not modify the array (assume the array is read only). You must use only constant, O(1) extra</description></item><item><title>养成固定的习惯</title><link>http://localhost:1313/post/2017/2017-06-10-%E5%85%BB%E6%88%90%E5%9B%BA%E5%AE%9A%E7%9A%84%E4%B9%A0%E6%83%AF/</link><pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-10-%E5%85%BB%E6%88%90%E5%9B%BA%E5%AE%9A%E7%9A%84%E4%B9%A0%E6%83%AF/</guid><description>从上大学开始养成了晚上也刷牙的习惯。 坚持到现在十几年。 从工作开始，培养了游泳的爱好， 到现在也有十余年了。 从08年开始，养成了看网络小说的习惯</description></item><item><title>374. Guess Number Higher or Lower</title><link>http://localhost:1313/post/2017/2017-06-09-374-guess-number-higher-or-lower/</link><pubDate>Fri, 09 Jun 2017 10:13:28 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-09-374-guess-number-higher-or-lower/</guid><description>**Description**Hints**Submissions**Solutions
Total Accepted: 46483 Total Submissions: 133710 Difficulty: Easy Contributor: LeetCode
We are playing the Guess Game. The game is as follows:
I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I&amp;rsquo;ll tell you whether the number is higher or lower. You call a pre-defined API guess(int num) which returns 3 possible results (-1 , 1 , or 0 ): -1 : My number is lower 1 : My number is higher 0 : Congrats!</description></item><item><title>35. Search Insert Position</title><link>http://localhost:1313/post/2017/2017-06-09-35-search-insert-position/</link><pubDate>Fri, 09 Jun 2017 09:34:55 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-09-35-search-insert-position/</guid><description>Search Insert Position **Description**Hints**Submissions**Solutions
Total Accepted: 171574 Total Submissions: 434381 Difficulty: Easy Contributor: LeetCode
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array. Here are few examples. [1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0</description></item><item><title>Big-Mug-Coffee-Roaster</title><link>http://localhost:1313/post/2017/2017-06-09-big-mug-coffee-roaster/</link><pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-09-big-mug-coffee-roaster/</guid><description>3104 EL Camino Real, Santa Clara, CA, 95051 在这个咖啡馆，学习效率还不错。 连续做了三道题。 比在家强了不止一点点。 大家都在学习， 有点轻音乐。 更能促进学习。 喝了点绿茶拿铁，</description></item><item><title>利用好晚上的时间</title><link>http://localhost:1313/post/2017/2017-06-08-%E5%88%A9%E7%94%A8%E5%A5%BD%E6%99%9A%E4%B8%8A%E7%9A%84%E6%97%B6%E9%97%B4/</link><pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-08-%E5%88%A9%E7%94%A8%E5%A5%BD%E6%99%9A%E4%B8%8A%E7%9A%84%E6%97%B6%E9%97%B4/</guid><description>昨天晚上还好，先去小区游泳池游泳了，然后看了会小说。 10:50PM上床睡觉。 11:05PM闹钟响了，终于在自己规定时间前上床了，按灭闹钟继续</description></item><item><title>2017-06把事情做在前面</title><link>http://localhost:1313/post/2017/2017-06-07%E6%8A%8A%E4%BA%8B%E6%83%85%E5%81%9A%E5%9C%A8%E5%89%8D%E9%9D%A2/</link><pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-07%E6%8A%8A%E4%BA%8B%E6%83%85%E5%81%9A%E5%9C%A8%E5%89%8D%E9%9D%A2/</guid><description>健身 等到身体不好的时候，再抱怨也没有啥用处了。 牙齿 不去看牙医，不保健牙齿。吃不动东西的时候，才会追悔莫及。 眼睛 低头刷手机、看视频。躺在被窝玩</description></item><item><title>134. Gas Station</title><link>http://localhost:1313/post/2017/2017-05-31-134-gas-station/</link><pubDate>Wed, 31 May 2017 23:43:22 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-05-31-134-gas-station/</guid><description>**Description**Hints**Submissions**Solutions
Total Accepted: 83932 Total Submissions: 289062 Difficulty: Medium Contributor: LeetCode
There are N gas stations along a circular route, where the amount of gas at station i is gas[i] . You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations. Return the starting gas station&amp;rsquo;s index if you can travel around the circuit once, otherwise return -1.</description></item><item><title>看《夏洛特烦恼》和《比尔.林恩的下半场》</title><link>http://localhost:1313/post/2017/2017-05-19-%E7%9C%8B%E5%A4%8F%E6%B4%9B%E7%89%B9%E7%83%A6%E6%81%BC%E5%92%8C%E6%AF%94%E5%B0%94-%E6%9E%97%E6%81%A9%E7%9A%84%E4%B8%8B%E5%8D%8A%E5%9C%BA/</link><pubDate>Fri, 19 May 2017 14:40:56 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-05-19-%E7%9C%8B%E5%A4%8F%E6%B4%9B%E7%89%B9%E7%83%A6%E6%81%BC%E5%92%8C%E6%AF%94%E5%B0%94-%E6%9E%97%E6%81%A9%E7%9A%84%E4%B8%8B%E5%8D%8A%E5%9C%BA/</guid><description>看了两部电影 感觉还行。</description></item><item><title>3. Longest Substring Without Repeating Characters</title><link>http://localhost:1313/post/2017/2017-05-09-3-longest-substring-without-repeating-characters/</link><pubDate>Tue, 09 May 2017 16:03:26 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-05-09-3-longest-substring-without-repeating-characters/</guid><description>Description Total Accepted: 283937 Total Submissions: 1178327 Difficulty: Medium Contributor: LeetCode Given a string, find the length of the longest substring without repeating characters.
Examples:
Given &amp;ldquo;abcabcbb&amp;rdquo;, the answer is &amp;ldquo;abc&amp;rdquo;, which the length is 3.
Given &amp;ldquo;bbbbb&amp;rdquo;, the answer is &amp;ldquo;b&amp;rdquo;, with the length of 1.
Given &amp;ldquo;pwwkew&amp;rdquo;, the answer is &amp;ldquo;wke&amp;rdquo;, with the length of 3. Note that the answer must be a substring, &amp;ldquo;pwke&amp;rdquo; is a subsequence and not a substring.</description></item><item><title>378. Find the kth smallest number in at row and column sorted matrix</title><link>http://localhost:1313/post/2017/2017-05-07-378-find-the-kth-smallest-number-in-at-row-and-column-sorted-matrix/</link><pubDate>Sun, 07 May 2017 13:46:21 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-05-07-378-find-the-kth-smallest-number-in-at-row-and-column-sorted-matrix/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 /* * 378. Find the kth smallest number in at row and column</description></item><item><title>四年回头看</title><link>http://localhost:1313/post/2017/2017-04-27-%E5%9B%9B%E5%B9%B4%E5%9B%9E%E5%A4%B4%E7%9C%8B/</link><pubDate>Thu, 27 Apr 2017 10:44:32 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-27-%E5%9B%9B%E5%B9%B4%E5%9B%9E%E5%A4%B4%E7%9C%8B/</guid><description>2013年7月来美国，近四年了，还没有扎根下来。 体重飙升20磅 身体健康不如之前。缺乏正常的体育锻炼 编程能力有提高，设计能力还欠缺 英语口语和听</description></item><item><title>2017-04-27和自己的拖延症作斗争</title><link>http://localhost:1313/post/2017/2017-04-27-%E5%92%8C%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8B%96%E5%BB%B6%E7%97%87%E4%BD%9C%E6%96%97%E4%BA%89/</link><pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-27-%E5%92%8C%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8B%96%E5%BB%B6%E7%97%87%E4%BD%9C%E6%96%97%E4%BA%89/</guid><description>很幸运，我的H1b抽签抽中了。可以在美国待上几年了。纠结了几天的回国计划就此搁浅了。 需要改进的时候，我在看小说。需要训练的时候，我在看网页。</description></item><item><title>100offer文章-去新加坡VR公司做技术经理</title><link>http://localhost:1313/post/2017/2017-04-26-100offer-%E6%96%B0%E5%8A%A0%E5%9D%A1vr%E5%85%AC%E5%8F%B8%E5%81%9A%E6%8A%80%E6%9C%AF%E7%BB%8F%E7%90%86/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-100offer-%E6%96%B0%E5%8A%A0%E5%9D%A1vr%E5%85%AC%E5%8F%B8%E5%81%9A%E6%8A%80%E6%9C%AF%E7%BB%8F%E7%90%86/</guid><description>上海高级工程师去新加坡VR公司做技术经理 100offer上发的文章还是很抓眼球的。 2011年毕业的上海小伙，连续在两家互联网公司工作。跟对了</description></item><item><title>148--Sort-List-1</title><link>http://localhost:1313/post/2017/2017-04-26-148-sort-list-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-148-sort-list-1/</guid><description>My Submissions
Total Accepted: 90190 Total Submissions: 331787 Difficulty: Medium Contributors: Admin
Sort a linked list in O(n log n) time using constant space complexity.
Hide Tags Linked List Sort Hide Similar Problems (E) Merge Two Sorted Lists (M) Sort Colors (M) Insertion Sort List
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 // 12/23/2016 lake tahoe public class SortList { public ListNode sortList(ListNode head) { if (head == null || head.</description></item><item><title>15--3Sum</title><link>http://localhost:1313/post/2017/2017-04-26-15-3sum/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-15-3sum/</guid><description>My Submissions Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero. Note: The solution set must not contain duplicate triplets. For example, given array S = [-1, 0, 1, 2, -1, -4],A solution set is:[ [-1, 0, 1], [-1, -1, 2]] Hide</description></item><item><title>153--Find-Minimum-in-Rotated-Sorted-Array-1</title><link>http://localhost:1313/post/2017/2017-04-26-153-find-minimum-in-rotated-sorted-array-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-153-find-minimum-in-rotated-sorted-array-1/</guid><description/></item><item><title>170--Two-Sum-III---Data-structure-design-1</title><link>http://localhost:1313/post/2017/2017-04-26-170-two-sum-iii-data-structure-design-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-170-two-sum-iii-data-structure-design-1/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /* 170. Two Sum III - Data structure design https://leetcode.com/problems/two-sum-iii-data-structure-design/ Total Accepted: 10259 Total Submissions: 42707 Difficulty: Easy Design and implement a TwoSum class.</description></item><item><title>2016年10月读书计划</title><link>http://localhost:1313/post/2016/2016-10-01-10%E6%9C%88%E8%AF%BB%E4%B9%A6%E8%AE%A1%E5%88%92/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-01-10%E6%9C%88%E8%AF%BB%E4%B9%A6%E8%AE%A1%E5%88%92/</guid><description>准备读两本书 大数据日知录-架构与算法 淘宝技术这十年</description></item><item><title>209--Minimum-Size-Subarray-Sum</title><link>http://localhost:1313/post/2017/2017-04-26-209-minimum-size-subarray-sum/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-209-minimum-size-subarray-sum/</guid><description>Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn&amp;rsquo;t one, return 0 instead. For example, given the array [2,3,1,2,4,3] and s = 7, the subarray [4,3] has the minimal length under the problem constraint. click to show more practice. **More practice:**If you have figured out the O(n) solution, try coding</description></item><item><title>257--Binary-Tree-Paths-1</title><link>http://localhost:1313/post/2017/2017-04-26-257-binary-tree-paths-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-257-binary-tree-paths-1/</guid><description>Given a binary tree, return all root-to-leaf paths. For example, given the following binary tree: 1 2 3 4 5 1 / \ 2 3 \ 5 All root-to-leaf paths are: [&amp;ldquo;1-&amp;gt;2-&amp;gt;5&amp;rdquo;, &amp;ldquo;1-&amp;gt;3&amp;rdquo;] 解题分析 The time complexity for the problem should be O(n), since we are basically visiting each node in the tree. Yet an interviewer might ask you for further optimization when he or she saw</description></item><item><title>295--Find-Median-from-Data-Stream</title><link>http://localhost:1313/post/2017/2017-04-26-295-find-median-from-data-stream/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-295-find-median-from-data-stream/</guid><description>My Submissions Difficulty: Hard Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value. Examples: [2,3,4] , the median is 3 [2,3] , the median is (2 + 3) / 2 = 2.5 Design a data structure that supports the following two operations: void addNum(int num)</description></item><item><title>349--Intersection-of-Two-Arrays-1</title><link>http://localhost:1313/post/2017/2017-04-26-349-intersection-of-two-arrays-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-349-intersection-of-two-arrays-1/</guid><description>My Submissions
Given two arrays, write a function to compute their intersection. **Example:**Given nums1 = [1, 2, 2, 1] , nums2 = [2, 2] , return [2] . Note: Each element in the result must be unique. The result can be in any order.
Hide Company Tags Two Sigma Hide Tags Binary Search Hash Table Two Pointers Sort Hide Similar Problems (E) Intersection of Two Arrays II
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 public class Solution { // https://discuss.</description></item><item><title>349--Intersection-of-Two-Arrays-2</title><link>http://localhost:1313/post/2017/2017-04-26-349-intersection-of-two-arrays-2/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-349-intersection-of-two-arrays-2/</guid><description>Given two arrays, write a function to compute their intersection. Example: Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2]. Note: Each element in the result must be unique. The result can be in any order. https://discuss.leetcode.com/topic/45685/three-java-solutions ** 解题思路** 三种解法： Use two hash sets , O(n) Time complexity 先把nums1加入</description></item><item><title>39--Combination-Sum</title><link>http://localhost:1313/post/2017/2017-04-26-39-combination-sum/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-39-combination-sum/</guid><description>Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. The same repeated number may be chosen from C unlimited number of times. Note: All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations. For example, given candidate set [2, 3, 6, 7] and target 7, A</description></item><item><title>88--Merge-Sorted-Array-1</title><link>http://localhost:1313/post/2017/2017-04-26-88-merge-sorted-array-1/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-88-merge-sorted-array-1/</guid><description>**Description**Hints**Submissions**Solutions Total Accepted: 162541 Total Submissions: 510745 Difficulty: Easy Contributor: LeetCode Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. **Note:**You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively. Hide Company Tags Microsoft Bloomberg</description></item><item><title>Find-your-forgotten-join-token-for-kubeadm</title><link>http://localhost:1313/post/2017/2017-04-26-find-your-forgotten-join-token-for-kubeadm/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-find-your-forgotten-join-token-for-kubeadm/</guid><description>1 kubectl -n kube-system get secret clusterinfo -o yaml | grep token-map | awk &amp;#39;{print $2}&amp;#39; | base64 -d | sed &amp;#34;s|{||g;s|}||g;s|:|.|g;s/\&amp;#34;//g;&amp;#34; | xargs echo Reference</description></item><item><title>life-is-never-more-fun-than-when-you're-the-underdog-competing-against</title><link>http://localhost:1313/post/2017/2017-04-16-life-is-never-more-fun-than-when-youre-the-underdog-competing-against/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-16-life-is-never-more-fun-than-when-youre-the-underdog-competing-against/</guid><description>“Life is never more fun than when you’re the underdog competing against the giants.” — H. Ross Perot
Henry Ross Perot born Henry Ray Perot; June 27, 1930 – July 9, 2019) was an American business magnate, billionaire, and philanthropist. He was the founder and chief executive officer of Electronic Data Systems and Perot Systems. He ran an independent presidential campaign in 1992 and a third-party campaign in 1996, establishing the Reform Party in the latter election.</description></item><item><title>ParallelPhoneValidator</title><link>http://localhost:1313/post/2017/2017-04-26-parallelphonevalidator/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-parallelphonevalidator/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Pocket-Gems-OA</title><link>http://localhost:1313/post/2017/2017-04-26-pocket-gems-oa/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-pocket-gems-oa/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 题： \1. 有向图 找所有start node到end node之间的路径 输入是一个txt 形式</description></item><item><title>The-Pragmatic-Programmer--From-Journeyman-to-Master</title><link>http://localhost:1313/post/2017/2017-04-26-the-pragmatic-programmer-from-journeyman-to-master/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-the-pragmatic-programmer-from-journeyman-to-master/</guid><description>What Makes a Pragmatic Programmer? Each developer is unique, with individual strengths and weaknesses,preferences and dislikes. Over time, each will craft his or her own personalenvironment. That environment will reflect the programmer&amp;rsquo;s individualityjust as forcefully as his or her hobbies, clothing, or haircut. However, ifyou&amp;rsquo;re a Pragmatic Programmer, you&amp;rsquo;ll share many of the followingcharacteristics: • Early adopter/fast adapter. You have an instinct fortechnologies and techniques, and you love trying things</description></item><item><title>Townsend-park-早锻炼</title><link>http://localhost:1313/post/2017/2017-04-26-townsend-park-%E6%97%A9%E9%94%BB%E7%82%BC/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-townsend-park-%E6%97%A9%E9%94%BB%E7%82%BC/</guid><description>清晨，我步行去Townsend park，前面有一对印度裔的情侣，携手步行，然后一起跑步。走到公园里面，早锻炼的人以中老年人居多。在外圈台阶周</description></item><item><title>Townsend-park-早锻炼2</title><link>http://localhost:1313/post/2017/2017-04-26-townsend-park-%E6%97%A9%E9%94%BB%E7%82%BC2/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-townsend-park-%E6%97%A9%E9%94%BB%E7%82%BC2/</guid><description>今天早点9点出门，又去Townsend park 早锻炼了。 敲胆经，双腿都敲了一遍。 还做了一下简易操。 然后去做了7、8分钟的秋千。 公园里面依旧是老头老</description></item><item><title>Upstar-m280a1-Monitor-reset</title><link>http://localhost:1313/post/2017/2017-04-26-upstar-m280a1-monitor-reset/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-upstar-m280a1-monitor-reset/</guid><description>Upstar m280a1 Monitor showing sideways logo upon startup and then proceeding to show a black screen submitted 1 year ago by PigsNowFly Hey guys, I bought a new 4k monitor a couple of weeks ago and it got unplugged 2 days ago suddenly, on accident. I don&amp;rsquo;t think that&amp;rsquo;s a huge deal for most monitors, but it kinda seems to have broken this one. Now whenever I turn it on,</description></item><item><title>第二章-少年往事之值日生</title><link>http://localhost:1313/post/2017/2017-04-26-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%B0%91%E5%B9%B4%E5%BE%80%E4%BA%8B%E4%B9%8B%E5%80%BC%E6%97%A5%E7%94%9F/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%B0%91%E5%B9%B4%E5%BE%80%E4%BA%8B%E4%B9%8B%E5%80%BC%E6%97%A5%E7%94%9F/</guid><description>我是小学二年级转入复州师范附属小学的。我在之前的团结乡中心小学二年级是班长，也是排名第一的好学生。一到复州附小，我们的班主任王老师想测试我的</description></item><item><title>董其武将军</title><link>http://localhost:1313/post/2017/2017-04-26-%E8%91%A3%E5%85%B6%E6%AD%A6%E5%B0%86%E5%86%9B/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-%E8%91%A3%E5%85%B6%E6%AD%A6%E5%B0%86%E5%86%9B/</guid><description>董其武将军和陶峙岳将军都是国军将领，率部起义得到中共的肯定。 在文革中也顺利过关。 这就是他们做人做事的风格。 董其武将军从心里靠拢共产党，把自己</description></item><item><title>观影《全民目击》</title><link>http://localhost:1313/post/2017/2017-04-26-%E8%A7%82%E5%BD%B1%E5%85%A8%E6%B0%91%E7%9B%AE%E5%87%BB/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-%E8%A7%82%E5%BD%B1%E5%85%A8%E6%B0%91%E7%9B%AE%E5%87%BB/</guid><description>最近用家里的小米盒子看电影，效果感觉很赞，能够看最近两三年以内的电影。 《全民目击》这部影片，在豆瓣上评分还行，第一印象是觉得法庭很漂亮，有点</description></item><item><title>和UI-UX-designer-交互</title><link>http://localhost:1313/post/2017/2017-4-26-%E5%92%8Cui-ux-designer-%E4%BA%A4%E4%BA%92/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-4-26-%E5%92%8Cui-ux-designer-%E4%BA%A4%E4%BA%92/</guid><description>1.标注： 就是列出Button、Label、图片控件等在页面中的位置， 还有控件中文字的字号、字间距等 2.切图： 2.1 图标icon 可以做成svg 格</description></item><item><title>看小说-沙捞越战事</title><link>http://localhost:1313/post/2017/2017-04-26-%E7%9C%8B%E5%B0%8F%E8%AF%B4-%E6%B2%99%E6%8D%9E%E8%B6%8A%E6%88%98%E4%BA%8B/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-%E7%9C%8B%E5%B0%8F%E8%AF%B4-%E6%B2%99%E6%8D%9E%E8%B6%8A%E6%88%98%E4%BA%8B/</guid><description>行文比较简单。 描述了华裔士兵周天化担任特种兵的事迹。 二战期间，英军在马来西亚和新加坡被日本击败，发现空军基地有人发电报给日军。 启动训练华裔特</description></item><item><title>民国人物－熊式辉</title><link>http://localhost:1313/post/2017/2017-04-26-%E6%B0%91%E5%9B%BD%E4%BA%BA%E7%89%A9%E7%86%8A%E5%BC%8F%E8%BE%89/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-26-%E6%B0%91%E5%9B%BD%E4%BA%BA%E7%89%A9%E7%86%8A%E5%BC%8F%E8%BE%89/</guid><description>作为主政江西十年的省主席，熊式辉还是有其过人之处。 能够发展江西的近代工业和各种教育。特别是中正大学后改名南昌大学的创建历程。延揽人才，励精图</description></item><item><title>前路漫漫，认真前行</title><link>http://localhost:1313/post/2016/2016-02-16-%E5%89%8D%E8%B7%AF%E6%BC%AB%E6%BC%AB%E8%AE%A4%E7%9C%9F%E5%89%8D%E8%A1%8C/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-16-%E5%89%8D%E8%B7%AF%E6%BC%AB%E6%BC%AB%E8%AE%A4%E7%9C%9F%E5%89%8D%E8%A1%8C/</guid><description>2016年2月20号飞到美国旧金山。坐邻座的同事顺风车到亲戚家。觉得一切都很平淡。头脑还不怎么清晰。没有刷题，也没有练习听力和口语，就是在网</description></item><item><title>人民的名义观后感</title><link>http://localhost:1313/post/2017/2017-04-09-%E4%BA%BA%E6%B0%91%E7%9A%84%E5%90%8D%E4%B9%89%E8%A7%82%E5%90%8E%E6%84%9F/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-09-%E4%BA%BA%E6%B0%91%E7%9A%84%E5%90%8D%E4%B9%89%E8%A7%82%E5%90%8E%E6%84%9F/</guid><description>2017.4.09 看了1-6集《人民的名义》 这部电视剧还不错。吴刚演李达康书记和陆毅演的侯亮平处长 还有高育良书记 都刻画的比较到位。侯勇演的国土资源处长，满墙</description></item><item><title>阅读的乐趣</title><link>http://localhost:1313/post/2018/2018-04-26-%E9%98%85%E8%AF%BB%E7%9A%84%E4%B9%90%E8%B6%A3/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2018/2018-04-26-%E9%98%85%E8%AF%BB%E7%9A%84%E4%B9%90%E8%B6%A3/</guid><description>从小到大看了不少书，包括连环画，卡通书、人物传记、各类小说和杂志期刊。小说占据了很大的一部分，其中武侠小说，历史演义，爱情小说，凶杀悬疑小说</description></item><item><title>有感于美国H1B签证抽签</title><link>http://localhost:1313/post/2017/2017-04-18-%E6%9C%89%E6%84%9F%E4%BA%8E%E7%BE%8E%E5%9B%BDh1b%E7%AD%BE%E8%AF%81%E6%8A%BD%E7%AD%BE/</link><pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-18-%E6%9C%89%E6%84%9F%E4%BA%8E%E7%BE%8E%E5%9B%BDh1b%E7%AD%BE%E8%AF%81%E6%8A%BD%E7%AD%BE/</guid><description>大凡从国内来美国的留学生，在念完硕士和博士以后，如果想留下来，大多数人得走申opt，找工作，申请H1B和申请绿卡这条路。在绿卡拿到手之前，是</description></item><item><title>Back and Restore InfluxDB</title><link>http://localhost:1313/post/2017/2017-04-09-back-and-restore-influxdb-/</link><pubDate>Sun, 09 Apr 2017 01:32:50 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-09-back-and-restore-influxdb-/</guid><description>when I backup Influxdb on my Ubuntu 16.04 LTS on Lab, it uses v0.10.0, 1 2 3 sudo service influxdb stop sudo tar cvf influxdb.backup.2017.04.07.tar /var/lib/influxdb/data /var/lib/influxdb/meta /etc/influxdb/influxdb.conf sudo service influxdb start I try to restore the backup file into my personal System76 laptop which has InfluxDB v1.2.2. It failed with error in /etc/influxdb/influxdb.conf 1 sudo tar xvf influxdb.backup.2017.04.07.tar -C / So, I delete the /etc/influxdb/influxdb.conf and then try to</description></item><item><title>Kubernetes-web-UIs</title><link>http://localhost:1313/post/2017/2017-04-08-kubernetes-web-uis/</link><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-04-08-kubernetes-web-uis/</guid><description>Alternative UIs Tip
Also check out the blog post about Kubernetes web UIs in 2019 for a look at some different web UIs and why Kubernetes Web View was created.
This page lists a number of alternative, open source UIs for Kubernetes.
K8Dash https://github.com/herbrandson/k8dash, web, node.js
“K8Dash is the easiest way to manage your Kubernetes cluster.”
Konstellate https://github.com/containership/konstellate, web, Clojure
“Visualize Kubernetes Applications”
Kubernetator https://github.com/smpio/kubernator, web, node.js
“Kubernator is an alternative Kubernetes UI.</description></item><item><title>okhttp3 用certificate 和token来访问kubernnetes APIServer</title><link>http://localhost:1313/post/2017/2017-03-23-okhttp3-%E7%94%A8certificate-%E5%92%8Ctoken%E6%9D%A5%E8%AE%BF%E9%97%AEkubernnetes-apiserver/</link><pubDate>Thu, 23 Mar 2017 14:42:22 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-03-23-okhttp3-%E7%94%A8certificate-%E5%92%8Ctoken%E6%9D%A5%E8%AE%BF%E9%97%AEkubernnetes-apiserver/</guid><description>okhttp3 用certificate 和token来访问kubernnetes APIServer token 位于 /etc/kubernetes/pki/路径下， token.csv 可以通过curl</description></item><item><title>2017年前三月小结</title><link>http://localhost:1313/post/2017/2017-03-18-2017%E5%B9%B4%E5%89%8D%E4%B8%89%E6%9C%88%E5%B0%8F%E7%BB%93/</link><pubDate>Sat, 18 Mar 2017 23:04:38 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-03-18-2017%E5%B9%B4%E5%89%8D%E4%B8%89%E6%9C%88%E5%B0%8F%E7%BB%93/</guid><description>2017年1月1至1月10号 在项目组两个多月时间，还是有不少进步的。当然，自己还有欠缺。技术上的进步还比较缓慢。 看书和看文献还不够。 2017</description></item><item><title>看电影《金刚狼3：殊死一战》</title><link>http://localhost:1313/post/2017/2017-03-05-%E7%9C%8B%E7%94%B5%E5%BD%B1%E9%87%91%E5%88%9A%E7%8B%BC3%E6%AE%8A%E6%AD%BB%E4%B8%80%E6%88%98-logan-2017/</link><pubDate>Sun, 05 Mar 2017 12:20:53 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-03-05-%E7%9C%8B%E7%94%B5%E5%BD%B1%E9%87%91%E5%88%9A%E7%8B%BC3%E6%AE%8A%E6%AD%BB%E4%B8%80%E6%88%98-logan-2017/</guid><description>今天下午和国斌去电影院看电影了。感觉还不错。 其中《金刚狼3：殊死一战 Logan (2017)》中的男主有点英雄迟暮的味道。</description></item><item><title>48. Rotate Image</title><link>http://localhost:1313/post/2017/2017-01-27-48-rotate-image/</link><pubDate>Fri, 27 Jan 2017 16:07:41 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-27-48-rotate-image/</guid><description>You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise). Follow up: Could you do this in-place? 5/17/19 店面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 /*</description></item><item><title>刀剑如梦</title><link>http://localhost:1313/post/2017/2017-01-16-%E5%88%80%E5%89%91%E5%A6%82%E6%A2%A6/</link><pubDate>Mon, 16 Jan 2017 03:00:59 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-16-%E5%88%80%E5%89%91%E5%A6%82%E6%A2%A6/</guid><description>昨晚居然看了三部片子 《五亿探长雷洛传 I 雷老虎》和《五亿探长雷洛传 II 父子情仇》、《顽主》，还有看了一半吕良伟主演的《跛豪》 今早去公园散步做操，</description></item><item><title>2017年1月14号 随便想想</title><link>http://localhost:1313/post/2017/2017-01-15-%E9%9A%8F%E4%BE%BF%E6%83%B3%E6%83%B3/</link><pubDate>Sun, 15 Jan 2017 04:20:08 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-15-%E9%9A%8F%E4%BE%BF%E6%83%B3%E6%83%B3/</guid><description>唤醒心中的巨人 找回自己曾经的最好状态，利用好现有的时间，一天八小时高效率地度过 读书，阅读，日行一善积累福报</description></item><item><title>重听 摩拜单车创始人一席讲座</title><link>http://localhost:1313/post/2017/2017-01-12-%E9%87%8D%E5%90%AC-%E6%91%A9%E6%8B%9C%E5%8D%95%E8%BD%A6%E5%88%9B%E5%A7%8B%E4%BA%BA%E4%B8%80%E5%B8%AD%E8%AE%B2%E5%BA%A7/</link><pubDate>Thu, 12 Jan 2017 14:20:51 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-12-%E9%87%8D%E5%90%AC-%E6%91%A9%E6%8B%9C%E5%8D%95%E8%BD%A6%E5%88%9B%E5%A7%8B%E4%BA%BA%E4%B8%80%E5%B8%AD%E8%AE%B2%E5%BA%A7/</guid><description>超能查派 Chappie (2015) 技术出现分支以后 没有再回来。 电动车 挑战了既得利益者的利益。 现在的技术水平跟100年不一样。需要新的技术来推动 四年免维护的单车。 每</description></item><item><title>利用好自己业余时间</title><link>http://localhost:1313/post/2017/2017-01-10-%E5%88%A9%E7%94%A8%E5%A5%BD%E8%87%AA%E5%B7%B1%E4%B8%9A%E4%BD%99%E6%97%B6%E9%97%B4/</link><pubDate>Tue, 10 Jan 2017 11:04:34 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-10-%E5%88%A9%E7%94%A8%E5%A5%BD%E8%87%AA%E5%B7%B1%E4%B8%9A%E4%BD%99%E6%97%B6%E9%97%B4/</guid><description>今天5点半就收工回家了。到家吃好晚饭，还是学习。整理好自己的电脑桌面。 公司的活尽量在公司做完，不要拖延到家里来解决。除了，日常的工作以外，还</description></item><item><title>etcd Introduction</title><link>http://localhost:1313/post/2017/2017-01-01-etcd/</link><pubDate>Wed, 04 Jan 2017 11:50:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-01-etcd/</guid><description>etcd Logo etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being: Simple: well-defined, user-facing API (gRPC) Secure: automatic TLS with optional client cert authentication Fast: benchmarked 10,000 writes/sec Reliable: properly distributed using Raft etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log. etcd is used in production by many companies,</description></item><item><title>375. Guess Number Higher or Lower II</title><link>http://localhost:1313/post/2017/2017-01-03-375-guess-number-higher-or-lower-ii/</link><pubDate>Tue, 03 Jan 2017 09:04:10 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-03-375-guess-number-higher-or-lower-ii/</guid><description>My Submissions
Total Accepted: 14213 Total Submissions: 40773 Difficulty: Medium Contributors: Admin
We are playing the Guess Game. The game is as follows:
I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I&amp;rsquo;ll tell you whether the number I picked is higher or lower. However, when you guess a particular number x, and you guess wrong, you pay $x.</description></item><item><title>278. First Bad Version</title><link>http://localhost:1313/post/2017/2017-01-03-278-first-bad-version/</link><pubDate>Tue, 03 Jan 2017 08:34:55 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-03-278-first-bad-version/</guid><description>My Submissions
Total Accepted: 77480 Total Submissions: 319521 Difficulty: Easy Contributors: Admin
You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. Suppose you have n versions [1, 2, &amp;hellip;, n] and you want to find out the first bad one, which causes all the following ones to be bad.</description></item><item><title>2017年元旦计划</title><link>http://localhost:1313/post/2017/2017-01-02-2017%E5%B9%B4%E5%85%83%E6%97%A6%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 02 Jan 2017 03:25:39 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-01-02-2017%E5%B9%B4%E5%85%83%E6%97%A6%E8%AE%A1%E5%88%92/</guid><description>2007年新的一年开始了，要做的事情： 每天步行三千步，坚持每周一、三、五、日打太极拳，周二、四、六做广播体操 节食减肥，轻断食，周六周日不吃晚</description></item><item><title>368. Largest Divisible Subset</title><link>http://localhost:1313/post/2016/2016-12-30-368-largest-divisible-subset/</link><pubDate>Fri, 30 Dec 2016 11:46:44 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-30-368-largest-divisible-subset/</guid><description>Given a set of distinct positive integers, find the largest subset such that every pair (Si, Sj) of elements in this subset satisfies:
Si % Sj = 0 or Sj % Si = 0.
If there are multiple solutions, return any subset is fine. Example 1: nums: [1,2,3]Result: [1,2] (of course, [1,3] will also be ok)
Example 2: nums: [1,2,4,8]Result: [1,2,4,8]
**Credits:**Special thanks to @Stomach_ache for adding this problem and creating all test cases.</description></item><item><title>121. Best Time to Buy and Sell Stock</title><link>http://localhost:1313/post/2016/2016-12-27-121-best-time-to-buy-and-sell-stock/</link><pubDate>Tue, 27 Dec 2016 00:18:29 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-27-121-best-time-to-buy-and-sell-stock/</guid><description>My Submissions
Total Accepted: 152541 Total Submissions: 391716 Difficulty: Easy Contributors: Admin
Say you have an array for which the ith element is the price of a given stock on day i. If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit. Example 1: Input: [7, 1, 5, 3, 6, 4]Output: 5max.</description></item><item><title>189. Rotate Array</title><link>http://localhost:1313/post/2016/2016-12-26-189-rotate-array/</link><pubDate>Mon, 26 Dec 2016 12:47:58 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-26-189-rotate-array/</guid><description>My Submissions
Total Accepted: 104132 Total Submissions: 445535 Difficulty: Easy Contributors: Admin
Rotate an array of n elements to the right by k steps. For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4] . **Note:**Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem. [show hint] **Hint:**Could you do it in-place with O(1) extra space?</description></item><item><title>148. Sort List</title><link>http://localhost:1313/post/2016/2016-12-24-148-sort-list/</link><pubDate>Sat, 24 Dec 2016 14:37:01 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-24-148-sort-list/</guid><description>Sort a linked list in O(n log n) time using constant space complexity. Total Accepted: 70033 Total Submissions: 281580 Difficulty: Medium
Tags Linked List Sort Similar Problems (E) Merge Two Sorted Lists (M) Sort Colors (M) Insertion Sort List
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 /** * Definition for singly-linked list.</description></item><item><title> 23. Merge k Sorted Lists</title><link>http://localhost:1313/post/2016/2016-12-24-23-merge-k-sorted-lists/</link><pubDate>Sat, 24 Dec 2016 13:39:02 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-24-23-merge-k-sorted-lists/</guid><description>My Submissions
Total Accepted: 121007 Total Submissions: 469882 Difficulty: Hard Contributors: Admin
Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.
Hide Company Tags LinkedIn Google Uber Airbnb Facebook Twitter Amazon Microsoft Hide Tags Divide and Conquer Linked List Heap Hide Similar Problems (E) Merge Two Sorted Lists (M) Ugly Number II
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 /** * Definition for singly-linked list.</description></item><item><title>244. Shortest Word Distance II</title><link>http://localhost:1313/post/2016/2016-12-24-244-shortest-word-distance-ii/</link><pubDate>Sat, 24 Dec 2016 12:25:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-24-244-shortest-word-distance-ii/</guid><description>My Submissions
Total Accepted: 16006 Total Submissions: 46068 Difficulty: Medium Contributors: Admin
This is a follow up of Shortest Word Distance. The only difference is now you are given the list of words and your method will be called repeatedly many times with different parameters. How would you optimize it? Design a class which receives a list of words in the constructor, and implements a method that takes two words word1 and word2 and return the shortest distance between these two words in the list.</description></item><item><title>38. Count and Say</title><link>http://localhost:1313/post/2016/2016-12-20-38-count-and-say/</link><pubDate>Tue, 20 Dec 2016 15:45:36 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-20-38-count-and-say/</guid><description>My Submissions
Total Accepted: 110903 Total Submissions: 343285 Difficulty: Easy Contributors: Admin
The count-and-say sequence is the sequence of integers beginning as follows:1, 11, 21, 1211, 111221, &amp;hellip;
1 is read off as &amp;ldquo;one 1&amp;rdquo; or 11 .11 is read off as &amp;ldquo;two 1s&amp;rdquo; or 21 .21 is read off as &amp;ldquo;one 2 , then one 1&amp;rdquo; or 1211 . Given an integer n, generate the nth sequence. Note: The sequence of integers will be represented as a string.</description></item><item><title>看了两部电影《她》 和《归来》</title><link>http://localhost:1313/post/2016/2016-12-19-%E7%9C%8B%E4%BA%86%E4%B8%A4%E9%83%A8%E7%94%B5%E5%BD%B1%E5%A5%B9-%E5%92%8C%E5%BD%92%E6%9D%A5/</link><pubDate>Mon, 19 Dec 2016 15:17:01 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-19-%E7%9C%8B%E4%BA%86%E4%B8%A4%E9%83%A8%E7%94%B5%E5%BD%B1%E5%A5%B9-%E5%92%8C%E5%BD%92%E6%9D%A5/</guid><description>两部片子还可以。 第一部，里面有点乱。 第二部， 看过小说《陆犯焉识》 电影和小说有出入。 拍得还算可以。</description></item><item><title>31. Next Permutation</title><link>http://localhost:1313/post/2016/2016-12-19-31-next-permutation/</link><pubDate>Mon, 19 Dec 2016 03:20:47 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-19-31-next-permutation/</guid><description>My Submissions Total Accepted: 91019 Total Submissions: 325010 Difficulty: Medium Contributors: Admin Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers. If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order). The replacement must be in-place, do not allocate extra memory. Here are some examples. Inputs are in the left-hand column and its corresponding outputs</description></item><item><title>青春-写在2016年岁尾</title><link>http://localhost:1313/post/2016/2016-12-18-%E9%9D%92%E6%98%A5-%E5%86%99%E5%9C%A82016%E5%B9%B4%E5%B2%81%E5%B0%BE/</link><pubDate>Sun, 18 Dec 2016 03:39:51 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-18-%E9%9D%92%E6%98%A5-%E5%86%99%E5%9C%A82016%E5%B9%B4%E5%B2%81%E5%B0%BE/</guid><description>小学生写文章，喜欢引经据典，故作深沉。讲评书的老先生喜欢说， “时光飞逝、岁月如梭”。一晃2016就要过去了。这个年份注定是不平凡的。求职面试</description></item><item><title>219. Contains Duplicate II</title><link>http://localhost:1313/post/2016/2016-12-18-219-contains-duplicate-ii/</link><pubDate>Sun, 18 Dec 2016 03:22:26 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-18-219-contains-duplicate-ii/</guid><description>My Submissions
Total Accepted: 88264 Total Submissions: 281930 Difficulty: Easy Contributors: Admin
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the difference between i and j is at most k.
Hide Company Tags Palantir Airbnb Hide Tags Array Hash Table Hide Similar Problems (E) Contains Duplicate (M) Contains Duplicate III</description></item><item><title>大空头</title><link>http://localhost:1313/post/2016/2016-12-17-%E5%A4%A7%E7%A9%BA%E5%A4%B4/</link><pubDate>Sat, 17 Dec 2016 14:03:22 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-17-%E5%A4%A7%E7%A9%BA%E5%A4%B4/</guid><description>大空头 这部电影还不错。 就在家用小米盒子看的。 银行家证券投资公司的贪婪演绎的淋漓尽致。 作为一名程序员，作为一名普通人，如何改变自己的命运？ 把希</description></item><item><title>371. Sum of Two Integers</title><link>http://localhost:1313/post/2016/2016-12-06-371-sum-of-two-integers/</link><pubDate>Tue, 06 Dec 2016 16:06:59 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-06-371-sum-of-two-integers/</guid><description>My Submissions Difficulty: Easy Contributors: Admin
Calculate the sum of two integers a and b, but you are not allowed to use the operator + and - . **Example:**Given a = 1 and b = 2, return 3. **Credits:**Special thanks to @fujiaozhu for adding this problem and creating all test cases.
Hide Company Tags Hulu Hide Tags Bit Manipulation Hide Similar Problems (M) Add Two Numbers
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 public class Solution { // https://discuss.</description></item><item><title>看电影《无人区》、《窃听风云》1和2</title><link>http://localhost:1313/post/2016/2016-12-05-%E7%9C%8B%E7%94%B5%E5%BD%B1%E6%97%A0%E4%BA%BA%E5%8C%BA%E7%AA%83%E5%90%AC%E9%A3%8E%E4%BA%911%E5%92%8C2/</link><pubDate>Mon, 05 Dec 2016 01:57:53 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-12-05-%E7%9C%8B%E7%94%B5%E5%BD%B1%E6%97%A0%E4%BA%BA%E5%8C%BA%E7%AA%83%E5%90%AC%E9%A3%8E%E4%BA%911%E5%92%8C2/</guid><description>和室友一起看了三部电影。 周六的时间过得比较好快。 第二次看无人区，震撼感要小一点了。 窃听风云，人性的贪婪，最后还是靠钱来买命。真不容易。想比较</description></item><item><title>继续Townsend Park 每周末锻炼</title><link>http://localhost:1313/post/2016/2016-11-20-%E7%BB%A7%E7%BB%ADtownsend-park-%E6%AF%8F%E5%91%A8%E6%9C%AB%E9%94%BB%E7%82%BC/</link><pubDate>Sun, 20 Nov 2016 01:38:37 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-20-%E7%BB%A7%E7%BB%ADtownsend-park-%E6%AF%8F%E5%91%A8%E6%9C%AB%E9%94%BB%E7%82%BC/</guid><description>搬了新住处，发现步行到 Townsend park 也不到十分钟时间。 围着高尔夫球场走在。在公园里面做做广播体操，压压腿，感觉也蛮好的。 保持身体健康，努力提高自己。干</description></item><item><title>读《佐贺的超级阿嬷》</title><link>http://localhost:1313/post/2016/2016-11-06-%E8%AF%BB%E4%BD%90%E8%B4%BA%E7%9A%84%E8%B6%85%E7%BA%A7%E9%98%BF%E5%AC%B7/</link><pubDate>Sun, 06 Nov 2016 15:25:29 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-06-%E8%AF%BB%E4%BD%90%E8%B4%BA%E7%9A%84%E8%B6%85%E7%BA%A7%E9%98%BF%E5%AC%B7/</guid><description>比较简短的小书。 看起来很朴实。 加油吧，少年</description></item><item><title>293. Flip Game</title><link>http://localhost:1313/post/2016/2016-11-05-293-flip-game/</link><pubDate>Sat, 05 Nov 2016 14:53:59 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-05-293-flip-game/</guid><description>My Submissions
Total Accepted: 15789 Total Submissions: 29826 Difficulty: Easy Contributors: Admin
You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and - , you and your friend take turns to flip two consecutive &amp;ldquo;++&amp;rdquo; into &amp;ldquo;&amp;ndash;&amp;rdquo; . The game ends when a person can no longer make a move and therefore the other person will be the winner.</description></item><item><title>Win7 VirtualBox5.1 Ubuntu15.0.4 调整屏幕大小</title><link>http://localhost:1313/post/2016/2016-11-03-windows-7-+-virtualbox-5-1-8-+-ubuntu-15-0-4-%E8%B0%83%E6%95%B4%E5%B1%8F%E5%B9%95%E5%A4%A7%E5%B0%8F/</link><pubDate>Thu, 03 Nov 2016 06:56:10 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-03-windows-7-+-virtualbox-5-1-8-+-ubuntu-15-0-4-%E8%B0%83%E6%95%B4%E5%B1%8F%E5%B9%95%E5%A4%A7%E5%B0%8F/</guid><description>调整ubuntu的 分辨率1920 * 1080 by Hustbill 2016.11.02 在windows7 下用VirtualBox5.1.8 导入Ubuntu虚拟镜像15.0.4，显示的分</description></item><item><title>283. Move Zeroes</title><link>http://localhost:1313/post/2016/2016-11-02-283-move-zeroes/</link><pubDate>Wed, 02 Nov 2016 15:01:55 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-02-283-move-zeroes/</guid><description>My Submissions
Total Accepted: 131094 Total Submissions: 279468 Difficulty: Easy Contributors: Admin
Given an array nums , write a function to move all 0 &amp;rsquo;s to the end of it while maintaining the relative order of the non-zero elements. For example, given nums = [0, 1, 0, 3, 12] , after calling your function, nums should be [1, 3, 12, 0, 0] . Note: You must do this in-place without making a copy of the array.</description></item><item><title>入职一周感言</title><link>http://localhost:1313/post/2016/2016-11-02-%E5%85%A5%E8%81%8C%E4%B8%80%E5%91%A8%E6%84%9F%E8%A8%80/</link><pubDate>Wed, 02 Nov 2016 14:46:11 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-02-%E5%85%A5%E8%81%8C%E4%B8%80%E5%91%A8%E6%84%9F%E8%A8%80/</guid><description>作为新人，有一堆东西需要学习。目前在team里面暂时还帮不上忙。尽快学习中。</description></item><item><title>162. Find Peak Element</title><link>http://localhost:1313/post/2016/2016-11-02-162-find-peak-element/</link><pubDate>Wed, 02 Nov 2016 14:42:50 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-11-02-162-find-peak-element/</guid><description>My Submissions
Total Accepted: 87974 Total Submissions: 250083 Difficulty: Medium Contributors: Admin
A peak element is an element that is greater than its neighbors. Given an input array where num[i] ≠ num[i+1] , find a peak element and return its index. The array may contain multiple peaks, in that case return the index to any one of the peaks is fine. You may imagine that num[-1] = num[n] = -∞ .</description></item><item><title>看电影《倾城》</title><link>http://localhost:1313/post/2016/2016-10-30-%E7%9C%8B%E7%94%B5%E5%BD%B1%E5%80%BE%E5%9F%8E/</link><pubDate>Sun, 30 Oct 2016 15:23:13 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-30-%E7%9C%8B%E7%94%B5%E5%BD%B1%E5%80%BE%E5%9F%8E/</guid><description>我在youtube上本来打算看 《湄公河行动》，结果发现视频画质和音量不太好。 转而点了豆瓣高分电影推荐，就选了黄宏导演的《倾城》。豆瓣分数6.</description></item><item><title>VirtualBox + Ubuntu 15.04</title><link>http://localhost:1313/post/2016/2016-10-23-virtualbox-+-ubuntu-15-04/</link><pubDate>Sun, 23 Oct 2016 01:53:32 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-23-virtualbox-+-ubuntu-15-04/</guid><description>Setup the develop environment for Ubuntu 15.04 on my Mac start to use Ubuntu again. Kubernetes, docker, continuous integration, continuous delivery. 调整ubuntu的 分辨率1920 * 1080 by Hustbill 2016.11.02 用VirtualBox虚拟Ubuntu，分辨率只有800</description></item><item><title>115. Distinct Subsequences</title><link>http://localhost:1313/post/2016/2016-10-21-115-distinct-subsequences-/</link><pubDate>Fri, 21 Oct 2016 03:02:34 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-21-115-distinct-subsequences-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 /* 115. Distinct Subsequences Total Accepted: 59855 Total Submissions: 198263 Difficulty: Hard Contributors: Admin Given a string S and a string</description></item><item><title>405. Convert a Number to Hexadecimal</title><link>http://localhost:1313/post/2016/2016-10-15-405-convert-a-number-to-hexadecimal-/</link><pubDate>Sat, 15 Oct 2016 07:22:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-15-405-convert-a-number-to-hexadecimal-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 /* 405. Convert a Number to Hexadecimal Total Accepted: 5643 Total Submissions: 13518 Difficulty: Easy Contributors: Admin Given an integer, write an algorithm to convert it to hexadecimal.</description></item><item><title> 415. Add Strings</title><link>http://localhost:1313/post/2016/2016-10-15-415-add-strings/</link><pubDate>Sat, 15 Oct 2016 06:09:42 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-15-415-add-strings/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /* 415. Add Strings Total Accepted: 4917 Total Submissions: 11391 Difficulty: Easy Contributors: Admin Given two non-negative numbers num1 and num2 represented as string, return the sum of num1 and num2.</description></item><item><title>404. Sum of Left Leaves</title><link>http://localhost:1313/post/2016/2016-10-14-404-sum-of-left-leaves/</link><pubDate>Fri, 14 Oct 2016 14:45:06 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-14-404-sum-of-left-leaves/</guid><description>My Submissions
Total Accepted: 11811 Total Submissions: 25597 Difficulty: Easy Contributors: Admin
Find the sum of all left leaves in a given binary tree. Example: 3 / \ 9 20 / \ 15 7There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.
Hide Company Tags Facebook Hide Tags Tree
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class Solution { /*Recursive method.</description></item><item><title> 260. Single Number III</title><link>http://localhost:1313/post/2016/2016-10-10-260-single-number-iii/</link><pubDate>Mon, 10 Oct 2016 14:29:33 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-10-260-single-number-iii/</guid><description>My Submissions Total Accepted: 49927 Total Submissions: 104463 Difficulty: Medium Given an array of numbers nums , in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. For example: Given nums = [1, 2, 1, 3, 2, 5] , return [3, 5] . Note: The order of the result is not important. So in the above</description></item><item><title>268. Missing Number</title><link>http://localhost:1313/post/2016/2016-10-10-268-missing-number/</link><pubDate>Mon, 10 Oct 2016 13:41:20 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-10-268-missing-number/</guid><description>My Submissions
Total Accepted: 74080 Total Submissions: 174115 Difficulty: Medium
Given an array containing n distinct numbers taken from 0, 1, 2, &amp;hellip;, n , find the one that is missing from the array. For example,Given nums = [0, 1, 3] return 2 . Note:Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public int missingNumber(int[] nums) { /* Ref: 1.</description></item><item><title>409. Longest Palindrome</title><link>http://localhost:1313/post/2016/2016-10-09-409-longest-palindrome/</link><pubDate>Sun, 09 Oct 2016 15:16:27 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-09-409-longest-palindrome/</guid><description>My Submissions
Total Accepted: 5510 Total Submissions: 12152 Difficulty: Easy
Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters. This is case sensitive, for example &amp;ldquo;Aa&amp;rdquo; is not considered a palindrome here. **Note:**Assume the length of given string will not exceed 1,010. Example: Input:&amp;ldquo;abccccdd&amp;quot;Output:7Explanation:One longest palindrome that can be built is &amp;ldquo;dccaccd&amp;rdquo;, whose length is 7.</description></item><item><title>401. Binary Watch</title><link>http://localhost:1313/post/2016/2016-10-09-401-binary-watch/</link><pubDate>Sun, 09 Oct 2016 14:31:50 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-09-401-binary-watch/</guid><description>My Submissions Total Accepted: 7205 Total Submissions: 16751 Difficulty: Easy A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right. For example, the above binary watch reads &amp;ldquo;3:25&amp;rdquo;. Given a non-negative integer n which represents the number of LEDs that</description></item><item><title>每到临面试，才惊觉自己好多东西没看</title><link>http://localhost:1313/post/2016/2016-10-06-%E6%AF%8F%E5%88%B0%E4%B8%B4%E9%9D%A2%E8%AF%95%E6%89%8D%E6%83%8A%E8%A7%89%E8%87%AA%E5%B7%B1%E5%A5%BD%E5%A4%9A%E4%B8%9C%E8%A5%BF%E6%B2%A1%E7%9C%8B/</link><pubDate>Thu, 06 Oct 2016 14:41:46 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-06-%E6%AF%8F%E5%88%B0%E4%B8%B4%E9%9D%A2%E8%AF%95%E6%89%8D%E6%83%8A%E8%A7%89%E8%87%AA%E5%B7%B1%E5%A5%BD%E5%A4%9A%E4%B8%9C%E8%A5%BF%E6%B2%A1%E7%9C%8B/</guid><description>觉得自己很像小学课文里面的寒号鸟。每到临面试，才惊觉自己好多东西没看。心里觉得有压力，却不肯下功夫看书。 今天中午去safeway超市买食物，</description></item><item><title>140. Word Break II</title><link>http://localhost:1313/post/2016/2016-10-02-140-word-break-ii/</link><pubDate>Sun, 02 Oct 2016 11:32:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-02-140-word-break-ii/</guid><description>Given a string s and a dictionary of words dict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences. For example, givens = &amp;ldquo;catsanddog&amp;rdquo;,dict = [&amp;ldquo;cat&amp;rdquo;, &amp;ldquo;cats&amp;rdquo;, &amp;ldquo;and&amp;rdquo;, &amp;ldquo;sand&amp;rdquo;, &amp;ldquo;dog&amp;rdquo;]
A solution is [&amp;ldquo;cats and dog&amp;rdquo;, &amp;ldquo;cat sand dog&amp;rdquo;]
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Memoriezed backtracking(DFS) // Using DFS directly will lead to TLE, so I just used HashMap to save the previous results to prune duplicated branches, as the following: public List&amp;lt;String&amp;gt; wordBreak(String s, Set&amp;lt;String&amp;gt; wordDict) { return backtrack(s, wordDict, new HashMap&amp;lt;String, LinkedList&amp;lt;String&amp;gt;&amp;gt;()); } public List&amp;lt;String&amp;gt; backtrack(String s, Set&amp;lt;String&amp;gt; wordDict, HashMap&amp;lt;String, LinkedList&amp;lt;String&amp;gt;&amp;gt; map) { if (map.</description></item><item><title>392. Is Subsequence</title><link>http://localhost:1313/post/2016/2016-10-02-392-is-subsequence/</link><pubDate>Sun, 02 Oct 2016 05:59:52 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-10-02-392-is-subsequence/</guid><description>My Submissions
Total Accepted: 9572 Total Submissions: 21748 Difficulty: Medium
Given a string s and a string t, check if s is subsequence of t. You may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (&amp;lt;=100). A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters.</description></item><item><title>5. Longest Palindromic Substring</title><link>http://localhost:1313/post/2016/2016-09-28-5-longest-palindromic-substring-/</link><pubDate>Wed, 28 Sep 2016 06:20:14 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-28-5-longest-palindromic-substring-/</guid><description>Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // 思路： 从中</description></item><item><title>Townsend Park 散步小记</title><link>http://localhost:1313/post/2016/2016-09-26-townsend-park-%E6%95%A3%E6%AD%A5%E5%B0%8F%E8%AE%B0/</link><pubDate>Mon, 26 Sep 2016 00:34:38 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-26-townsend-park-%E6%95%A3%E6%AD%A5%E5%B0%8F%E8%AE%B0/</guid><description>清晨，拿着手机换上舒适的鞋子就去Townsend park散步了。还没到公园就听到大妈们打太极拳放出的曲子。让人恍惚回到了国内。 真是亲切。 没有</description></item><item><title>69. Sqrt(x)</title><link>http://localhost:1313/post/2016/2016-09-25-69-sqrtx/</link><pubDate>Sun, 25 Sep 2016 01:07:51 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-25-69-sqrtx/</guid><description>Difficulty: Medium
Implement int sqrt(int x) . Compute and return the square root of x.
Hide Company Tags Bloomberg Apple Facebook Hide Tags Binary Search Math Hide Similar Problems (M) Pow(x, n) (M) Valid Perfect Square
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public int mySqrt(int x) { if (x == 0) return 0; //Instead of using fancy Newton&amp;#39;s method, this plain binary search approach also works.</description></item><item><title>有感室友面Google发挥失误</title><link>http://localhost:1313/post/2016/2016-09-22-%E6%9C%89%E6%84%9F%E5%AE%A4%E5%8F%8B%E9%9D%A2google%E5%8F%91%E6%8C%A5%E5%A4%B1%E8%AF%AF/</link><pubDate>Thu, 22 Sep 2016 15:38:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-22-%E6%9C%89%E6%84%9F%E5%AE%A4%E5%8F%8B%E9%9D%A2google%E5%8F%91%E6%8C%A5%E5%A4%B1%E8%AF%AF/</guid><description>我室友是个大牛。但是今天面Google 最后一轮还是跪了。 本来应该用o(N)复杂度的算法，他临场想岔了，给了一个o（n！）的算法。 不是平时不努</description></item><item><title>228. Summary Ranges</title><link>http://localhost:1313/post/2016/2016-09-22-228-summary-ranges/</link><pubDate>Thu, 22 Sep 2016 15:32:59 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-22-228-summary-ranges/</guid><description>228 Summary Ranges
Difficulty: Medium Given a sorted integer array without duplicates, return the summary of its ranges. For example, given [0,1,2,4,5,7], return [&amp;ldquo;0-&amp;gt;2&amp;rdquo;,&amp;ldquo;4-&amp;gt;5&amp;rdquo;,&amp;ldquo;7&amp;rdquo;].
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public List&amp;lt;String&amp;gt; summaryRanges(int[] nums) { // Ref : https://leetcode.com/discuss/42290/accepted-java-solution-easy-to-understand List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;(); for (int i=0; i &amp;lt; nums.length; i++) { int num = nums[i]; while (i +1 &amp;lt; nums.</description></item><item><title>394. Decode String</title><link>http://localhost:1313/post/2016/2016-09-20-394-decode-string/</link><pubDate>Tue, 20 Sep 2016 11:53:36 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-20-394-decode-string/</guid><description>394- Decode String **Question Editorial Solution
My Submissions
Total Accepted: 4560 Total Submissions: 11726 Difficulty: Medium
Given an encoded string, return it&amp;rsquo;s decoded string. The encoding rule is: k[encoded_string] , where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer. You may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</description></item><item><title>2016-08-22 微软西雅图 Skype 组onsite面</title><link>http://localhost:1313/post/2016/2016-08-22-%E5%BE%AE%E8%BD%AF%E8%A5%BF%E9%9B%85%E5%9B%BE-skype-%E7%BB%84onsite%E9%9D%A2/</link><pubDate>Mon, 19 Sep 2016 12:49:03 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-22-%E5%BE%AE%E8%BD%AF%E8%A5%BF%E9%9B%85%E5%9B%BE-skype-%E7%BB%84onsite%E9%9D%A2/</guid><description>总共四轮，每轮45分钟。 1.印度姐姐 在微软bing组干了十年 一道题 地址框自动补全 例如 输入 app 补全为 apple 或者application 输入bl 补全为 blue</description></item><item><title>186. Reverse Words in a String II</title><link>http://localhost:1313/post/2016/2016-09-19-186-reverse-words-in-a-string-ii/</link><pubDate>Mon, 19 Sep 2016 12:42:09 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-19-186-reverse-words-in-a-string-ii/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 /* * 186. Reverse Words in a String II Total Accepted: 14384 Total Submissions: 49577 Difficulty: Medium Given an input string, reverse the string word by word.</description></item><item><title>189. Rotate Array</title><link>http://localhost:1313/post/2016/2016-09-19-189-rotate-array/</link><pubDate>Mon, 19 Sep 2016 06:42:56 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-19-189-rotate-array/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 /***189. Rotate Array Difficulty: Easy Rotate an array of n elements to the right by k steps. For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. 思路： The basic idea is that,</description></item><item><title>华中科技大学和武汉大学北加州校友聚会</title><link>http://localhost:1313/post/2016/2016-09-12-%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%92%8C%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6%E5%8C%97%E5%8A%A0%E5%B7%9E%E6%A0%A1%E5%8F%8B%E8%81%9A%E4%BC%9A/</link><pubDate>Mon, 12 Sep 2016 14:50:26 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-12-%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%92%8C%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6%E5%8C%97%E5%8A%A0%E5%B7%9E%E6%A0%A1%E5%8F%8B%E8%81%9A%E4%BC%9A/</guid><description>华中科技大学和武汉大学北加州校友聚会 这次活动组织得很好。 感觉很开心的。 认识了很多校友。 找到组织的感觉蛮好！</description></item><item><title>81. Search in Rotated Sorted Array II</title><link>http://localhost:1313/post/2016/2016-09-06-81-search-in-rotated-sorted-array-ii/</link><pubDate>Tue, 06 Sep 2016 01:56:54 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-06-81-search-in-rotated-sorted-array-ii/</guid><description>81- Search in Rotated Sorted Array II **Question Editorial Solution My Submissions Total Accepted: 71935 Total Submissions: 221320 Difficulty: Medium Follow up for &amp;ldquo;Search in Rotated Sorted Array&amp;rdquo;:What if duplicates are allowed? Would this affect the run-time complexity? How and why? Write a function to determine if a given target is in the array. ** 解题思路** test case [1,1,3,1] 3 [1,3, 1, 1, 1] 3</description></item><item><title>用心聊天，是一门学问</title><link>http://localhost:1313/post/2016/2016-09-01-%E7%94%A8%E5%BF%83%E8%81%8A%E5%A4%A9%E6%98%AF%E4%B8%80%E9%97%A8%E5%AD%A6%E9%97%AE/</link><pubDate>Thu, 01 Sep 2016 13:28:07 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-09-01-%E7%94%A8%E5%BF%83%E8%81%8A%E5%A4%A9%E6%98%AF%E4%B8%80%E9%97%A8%E5%AD%A6%E9%97%AE/</guid><description>说话是我们求学和工作必不可少的环节。 说话的本事，沟通能力的强弱和我们的职业生涯息息相关。 在说话的过程中。懂得多的人，不需要随时准备碾压对方。</description></item><item><title>Shortcodes</title><link>http://localhost:1313/post/2017/shortcodes/</link><pubDate>Tue, 30 Aug 2016 16:01:23 +0800</pubDate><guid>http://localhost:1313/post/2017/shortcodes/</guid><description>&lt;h1 id="admonition">Admonition&lt;/h1>
&lt;div class="admonition note">&lt;p class="admonition-title">I&amp;#39;m title!&lt;/p>
&lt;p>biu biu biu.&lt;/p>
&lt;details class="admonition note">&lt;summary class="admonition-title">note&lt;/summary>
 &lt;p>biu biu biu.&lt;/p>
&lt;/details>
&lt;div class="admonition example">
 &lt;p>Without title.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{% admonition note &amp;#34;I&amp;#39;m title!&amp;#34; false %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">biu biu biu.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% admonition type=&amp;#34;note&amp;#34; title=&amp;#34;note&amp;#34; details=&amp;#34;true&amp;#34; %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">biu biu biu.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% /admonition %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% admonition example %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Without title.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% /admonition %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% /admonition %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>[Mac 技巧］删除不常用的wifi 和密码</title><link>http://localhost:1313/post/2016/2016-08-25-mac-%E6%8A%80%E5%B7%A7%E5%88%A0%E9%99%A4%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84wifi-%E5%92%8C%E5%AF%86%E7%A0%81/</link><pubDate>Thu, 25 Aug 2016 11:47:49 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-25-mac-%E6%8A%80%E5%B7%A7%E5%88%A0%E9%99%A4%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84wifi-%E5%92%8C%E5%AF%86%E7%A0%81/</guid><description>Mac 会保存一下链接过的Wi-Fi热点。有些热点的临时密码已经失效，留在电脑里面浪费感情。如何删除？ 系统偏好设置-网络-高级，选中那个wifi，</description></item><item><title>289. Game of Life</title><link>http://localhost:1313/post/2016/2016-08-23-289-game-of-life/</link><pubDate>Tue, 23 Aug 2016 13:18:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-23-289-game-of-life/</guid><description>289-Game of Life **Question Editorial Solution
My Submissions
Total Accepted: 25596 Total Submissions: 71934 Difficulty: Medium
According to the Wikipedia&amp;rsquo;s article: &amp;ldquo;The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&amp;rdquo; Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with itseight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):</description></item><item><title>培养一个好习惯－写作</title><link>http://localhost:1313/post/2016/2016-08-19-%E5%9F%B9%E5%85%BB%E4%B8%80%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF%E5%86%99%E4%BD%9C/</link><pubDate>Fri, 19 Aug 2016 16:06:38 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-19-%E5%9F%B9%E5%85%BB%E4%B8%80%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF%E5%86%99%E4%BD%9C/</guid><description>其实，有很多的写作素材。日常的生活，就有很多东西可以写下来。例如，打uber就是一段好历程。值得记录下来。 最近一直靠打uber 上下班。 一同u</description></item><item><title>271. Encode and Decode Strings</title><link>http://localhost:1313/post/2016/2016-08-19-271-encode-and-decode-strings/</link><pubDate>Fri, 19 Aug 2016 16:00:03 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-19-271-encode-and-decode-strings/</guid><description>271- Encode and Decode Strings **Question Editorial Solution
My Submissions
Total Accepted: 9668 Total Submissions: 35396 Difficulty: Medium
Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings. Machine 1 (sender) has the function: string encode(vector strs) { // &amp;hellip; your code return encoded_string;} Machine 2 (receiver) has the function:vector decode(string s) { //&amp;hellip; your code return strs;}</description></item><item><title>填timesheet</title><link>http://localhost:1313/post/2016/2016-08-13-%E5%A1%ABtimesheet/</link><pubDate>Sat, 13 Aug 2016 14:00:23 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-13-%E5%A1%ABtimesheet/</guid><description>多年前做实习生的时候，填过time sheet。 今天又开始填timesheet。 工作的目的不全是为了拿薪水养家糊口。 更重要的是能够做出有价值的</description></item><item><title>沉痛悼念魏延政先生</title><link>http://localhost:1313/post/2016/2016-08-12-%E6%B2%89%E7%97%9B%E6%82%BC%E5%BF%B5%E9%AD%8F%E5%BB%B6%E6%94%BF%E5%85%88%E7%94%9F/</link><pubDate>Fri, 12 Aug 2016 13:49:02 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-12-%E6%B2%89%E7%97%9B%E6%82%BC%E5%BF%B5%E9%AD%8F%E5%BB%B6%E6%94%BF%E5%85%88%E7%94%9F/</guid><description>魏延政，北大94级计算机本科毕业。 患癌5年。在和病魔抗争的过程中，他的勇气和坚强让人感动。 摘录一下，对他的采访记录。 问：你现在最烦恼的事情是</description></item><item><title>322. Coin change</title><link>http://localhost:1313/post/2016/2016-08-08-322-coin-change/</link><pubDate>Mon, 08 Aug 2016 06:36:30 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-08-322-coin-change/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // T(c^n) c coins.length, n =amount /*#Recursive Method:# https://discuss.leetcode.com/topic/32489/java-both-iterative-and-recursive-solutions-with-explanations idea: dynamic programming: think of the last step we take. Suppose we have already found out the best way to sum up to amount a, then for the last step, we can choose any coin type which gives us a remainder r where r = a-coins[i] for all i&amp;#39;s.</description></item><item><title>247. Strobogrammatic Number II</title><link>http://localhost:1313/post/2016/2016-08-06-247-strobogrammatic-number-ii/</link><pubDate>Sat, 06 Aug 2016 15:08:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-06-247-strobogrammatic-number-ii/</guid><description>My Submissions
Total Accepted: 10689 Total Submissions: 30073 Difficulty: Medium
A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down). Find all strobogrammatic numbers that are of length = n. For example,Given n = 2, return [&amp;ldquo;11&amp;rdquo;,&amp;ldquo;69&amp;rdquo;,&amp;ldquo;88&amp;rdquo;,&amp;ldquo;96&amp;rdquo;] . Hint: Try to use recursion and notice that it should recurse with n - 2 instead of n - 1.
Hide Company Tags Google Hide Tags Math Recursion Hide Similar Problems (E) Strobogrammatic Number (H) Strobogrammatic Number III</description></item><item><title>246. Strobogrammatic Number</title><link>http://localhost:1313/post/2016/2016-08-06-246-strobogrammatic-number/</link><pubDate>Sat, 06 Aug 2016 14:48:11 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-06-246-strobogrammatic-number/</guid><description>246- Strobogrammatic Number **Question Editorial Solution
My Submissions
Total Accepted: 12358 Total Submissions: 33099 Difficulty: Easy
A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down). Write a function to determine if a number is strobogrammatic. The number is represented as a string. For example, the numbers &amp;ldquo;69&amp;rdquo;, &amp;ldquo;88&amp;rdquo;, and &amp;ldquo;818&amp;rdquo; are all strobogrammatic.
Hide Company Tags Google Hide Tags Hash Table Math Hide Similar Problems (M) Strobogrammatic Number II (H) Strobogrammatic Number III</description></item><item><title>去Fremont dmv 更新驾照</title><link>http://localhost:1313/post/2016/2016-08-04-%E5%8E%BBfremont-dmv-%E6%9B%B4%E6%96%B0%E9%A9%BE%E7%85%A7/</link><pubDate>Thu, 04 Aug 2016 10:10:03 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-04-%E5%8E%BBfremont-dmv-%E6%9B%B4%E6%96%B0%E9%A9%BE%E7%85%A7/</guid><description>早上八点半打uber去 Fremont dmv 办驾照。到了以后，看到绕着房子一周的人群。约莫有两百人吧。我安心排在队伍后面。打开kindle看书。 到了8点50左</description></item><item><title>得知一位初中同学近况后的感想</title><link>http://localhost:1313/post/2016/2016-08-03-%E5%BE%97%E7%9F%A5%E4%B8%80%E4%BD%8D%E5%88%9D%E4%B8%AD%E5%90%8C%E5%AD%A6%E8%BF%91%E5%86%B5%E5%90%8E%E7%9A%84%E6%84%9F%E6%83%B3/</link><pubDate>Wed, 03 Aug 2016 15:32:05 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-08-03-%E5%BE%97%E7%9F%A5%E4%B8%80%E4%BD%8D%E5%88%9D%E4%B8%AD%E5%90%8C%E5%AD%A6%E8%BF%91%E5%86%B5%E5%90%8E%E7%9A%84%E6%84%9F%E6%83%B3/</guid><description>刚才和一个高中女同学D聊天。 没想到我的初中同学F是她的小学同学。他们两个是一个村的。95年中考，F上的9501班，我一开始上的9508班后来</description></item><item><title>还是准备去创业公司做iOS开发</title><link>http://localhost:1313/post/2016/2016-07-31-%E8%BF%98%E6%98%AF%E5%87%86%E5%A4%87%E5%8E%BB%E5%88%9B%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%81%9Aios%E5%BC%80%E5%8F%91/</link><pubDate>Sun, 31 Jul 2016 00:23:39 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-31-%E8%BF%98%E6%98%AF%E5%87%86%E5%A4%87%E5%8E%BB%E5%88%9B%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%81%9Aios%E5%BC%80%E5%8F%91/</guid><description>经历了找工作的各种折腾以后，发现自己还是很难跳入FLAG大公司的。 刷题这条路，蛮艰辛也很枯燥。 一个偶然的机会，可以去一家刚完成A轮融资的公司</description></item><item><title>68. Text Justification</title><link>http://localhost:1313/post/2016/2016-07-28-68-text-justification/</link><pubDate>Thu, 28 Jul 2016 14:17:09 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-28-68-text-justification/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 /* * 68.</description></item><item><title>34. Search for a Range</title><link>http://localhost:1313/post/2016/2016-07-26-34-search-for-a-range/</link><pubDate>Tue, 26 Jul 2016 01:01:31 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-26-34-search-for-a-range/</guid><description>Total Accepted: 91870 Total Submissions: 308813 Difficulty: Medium
Given a sorted array of integers, find the starting and ending position of a given target value. Your algorithm&amp;rsquo;s runtime complexity must be in the order of O(log n). If the target is not found in the array, return [-1, -1] . For example,Given [5, 7, 7, 8, 8, 10] and target value 8,return [3, 4] .
Hide Company Tags LinkedIn Hide Tags Binary Search Array Hide Similar Problems (E) First Bad Version</description></item><item><title>179. Largest Number</title><link>http://localhost:1313/post/2016/2016-07-21-179-largest-number/</link><pubDate>Thu, 21 Jul 2016 01:07:28 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-21-179-largest-number/</guid><description>179- Largest Number **Question Editorial Solution
My Submissions
Total Accepted: 50334 Total Submissions: 253493 Difficulty: Medium
Given a list of non negative integers, arrange them such that they form the largest number. For example, given [3, 30, 34, 5, 9] , the largest formed number is 9534330 . Note: The result may be very large, so you need to return a string instead of an integer. **Credits:**Special thanks to @ts for adding this problem and creating all test cases.</description></item><item><title>153. Find Minimum in Rotated Sorted Array</title><link>http://localhost:1313/post/2016/2016-07-12-153-find-minimum-in-rotated-sorted-array/</link><pubDate>Tue, 12 Jul 2016 13:29:26 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-12-153-find-minimum-in-rotated-sorted-array/</guid><description>153- Find Minimum in Rotated Sorted Array **Question Editorial Solution My Submissions Total Accepted: 100021 Total Submissions: 270435 Difficulty: Medium Suppose a sorted array is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2 ). Find the minimum element. You may assume no duplicate exists in the array. Hide Company Tags Microsoft Hide Tags</description></item><item><title>做题的目标</title><link>http://localhost:1313/post/2016/2016-07-10-coding-goal-and-method/</link><pubDate>Sun, 10 Jul 2016 08:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-10-coding-goal-and-method/</guid><description>2016-07-10-做题的目标 Enjoy typing the words and make the thing better. 训练自己的手指和大脑，让自己的生产力提高。在一小时内能够刷三道题。给出bugfree的解法</description></item><item><title>73. Set Matrix Zeroes </title><link>http://localhost:1313/post/2016/2016-07-10-73-set-matrix-zeroes/</link><pubDate>Sun, 10 Jul 2016 01:20:03 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-10-73-set-matrix-zeroes/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 /* * 73.</description></item><item><title>10. Regular Expression Matching</title><link>http://localhost:1313/post/2016/2016-07-10-10-regular-expression-matching/</link><pubDate>Sun, 10 Jul 2016 01:12:44 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-10-10-regular-expression-matching/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>300. Longest Increasing Subsequence </title><link>http://localhost:1313/post/2016/2016-07-08-300-longest-increasing-subsequence/</link><pubDate>Fri, 08 Jul 2016 15:00:23 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-08-300-longest-increasing-subsequence/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /* * 300. Longest Increasing Subsequence QuestionEditorial Solution My Submissions Total Accepted: 34958 Total Submissions: 99352 Difficulty: Medium Given an unsorted array of integers, find the length of longest increasing subsequence.</description></item><item><title>369. Plus One Linked List</title><link>http://localhost:1313/post/2016/2016-07-06-369-plus-one-linked-list/</link><pubDate>Wed, 06 Jul 2016 11:35:24 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-06-369-plus-one-linked-list/</guid><description>369- Plus One Linked List **Question Editorial Solution
My Submissions
Total Accepted: 1189 Total Submissions: 2373 Difficulty: Medium
Given a non-negative number represented as a singly linked list of digits, plus one to the number. The digits are stored such that the most significant digit is at the head of the list. Example: Input:1-&amp;gt;2-&amp;gt;3Output:1-&amp;gt;2-&amp;gt;4
Hide Company Tags Google Hide Tags Linked List Hide Similar Problems (E) Plus One
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public ListNode plusOne(ListNode head) { /* * At the first glance, I want to reverse the inputs, add one, then * reverse back.</description></item><item><title>298. Binary Tree Longest Consecutive Sequence</title><link>http://localhost:1313/post/2016/2016-07-06-298-binary-tree-longest-consecutive-sequence/</link><pubDate>Wed, 06 Jul 2016 07:00:21 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-06-298-binary-tree-longest-consecutive-sequence/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>276. Paint Fence</title><link>http://localhost:1313/post/2016/2016-07-05-276-paint-fence/</link><pubDate>Tue, 05 Jul 2016 01:40:11 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-05-276-paint-fence/</guid><description>276- Paint Fence **My SubmissionsQuestion Editorial Solution
Total Accepted: 10079 Total Submissions: 31886 Difficulty: Easy
There is a fence with n posts, each post can be painted with one of the k colors. You have to paint all the posts such that no more than two adjacent fence posts have the same color. Return the total number of ways you can paint the fence. **Note:**n and k are non-negative integers.</description></item><item><title>170. Two Sum III - Data structure design</title><link>http://localhost:1313/post/2016/2016-07-04-170-two-sum-iii-data-structure-design-/</link><pubDate>Mon, 04 Jul 2016 10:15:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-04-170-two-sum-iii-data-structure-design-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>袁崇焕杀毛文龙之后</title><link>http://localhost:1313/post/2016/2016-07-04-%E8%A2%81%E5%B4%87%E7%84%95%E6%9D%80%E6%AF%9B%E6%96%87%E9%BE%99%E4%B9%8B%E5%90%8E/</link><pubDate>Mon, 04 Jul 2016 07:16:48 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-04-%E8%A2%81%E5%B4%87%E7%84%95%E6%9D%80%E6%AF%9B%E6%96%87%E9%BE%99%E4%B9%8B%E5%90%8E/</guid><description>历史事件有很多偶然性。 明朝末年，是风雨飘渺的岁月。人命不值钱。就是朝廷的官员也朝不保夕。 袁崇焕杀掉了毛文龙导致了一系列的后果。皇太极没有了毛</description></item><item><title>看微电影《红色气质》庆祝七一节日</title><link>http://localhost:1313/post/2016/2016-07-02-%E7%9C%8B%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BA%A2%E8%89%B2%E6%B0%94%E8%B4%A8%E5%BA%86%E7%A5%9D%E4%B8%83%E4%B8%80%E8%8A%82%E6%97%A5/</link><pubDate>Sat, 02 Jul 2016 00:47:25 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-07-02-%E7%9C%8B%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BA%A2%E8%89%B2%E6%B0%94%E8%B4%A8%E5%BA%86%E7%A5%9D%E4%B8%83%E4%B8%80%E8%8A%82%E6%97%A5/</guid><description>无数革命先辈抛头颅洒热血打下了这片大好江山。我们后辈就应该守住这方热土，建设美好家园。国家繁荣、社会稳定、家庭幸福，是我们这代人的最现实的追</description></item><item><title>Shell questions for [DevOps] engineer</title><link>http://localhost:1313/post/2016/2016-06-30-devops-interview-questions/</link><pubDate>Thu, 30 Jun 2016 19:04:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-30-devops-interview-questions/</guid><description>Dima gave me a shell question on this afternoon, here is the solution.
1 2 $ sudo cat *.txt &amp;gt; /bin/a.out bash: /bin/a.out: Permission denied ** Root Cause **
This command does not work because the redirection is performed by shell which does not have the permission to write to /bin/a.out. The redirection of the output is not performed by sudo.
** Solution **
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 There are two solutions to Dima’ shell question: 1.</description></item><item><title>47. Permutations II</title><link>http://localhost:1313/post/2016/2016-06-28-47-permutations-ii/</link><pubDate>Tue, 28 Jun 2016 01:28:39 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-28-47-permutations-ii/</guid><description>47- Permutations II Total Accepted: 75673 Total Submissions: 264907 Difficulty: Medium
Given a collection of numbers that might contain duplicates, return all possible unique permutations. For example, [1,1,2] have the following unique permutations: [ [1,1,2], [1,2,1], [2,1,1] ]
Hide Company Tags LinkedIn Microsoft Hide Tags Backtracking Hide Similar Problems (M) Next Permutation (M) Permutations (M) Palindrome Permutation II
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 public class Solution { public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; permuteUnique(int[] nums) { /*https://leetcode.</description></item><item><title>304. Range Sum Query 2D - Immutable</title><link>http://localhost:1313/post/2016/2016-06-26-304-range-sum-query-2d-immutable/</link><pubDate>Sun, 26 Jun 2016 02:32:01 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-26-304-range-sum-query-2d-immutable/</guid><description>304 - Range Sum Query 2D - Immutable Total Accepted: 14771 Total Submissions: 66244 Difficulty: Medium Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2). The above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and (row2, col2) = (4, 3), which contains sum = 8.</description></item><item><title>303. Range Sum Query - Immutable</title><link>http://localhost:1313/post/2016/2016-06-26-303-range-sum-query-immutable/</link><pubDate>Sun, 26 Jun 2016 00:49:22 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-26-303-range-sum-query-immutable/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 /* * 303. Range Sum Query - Immutable</description></item><item><title> 270. Closest Binary Search Tree Value </title><link>http://localhost:1313/post/2016/2016-06-22-270-closest-binary-search-tree-value/</link><pubDate>Wed, 22 Jun 2016 12:23:40 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-22-270-closest-binary-search-tree-value/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>350. Intersection of Two Arrays II</title><link>http://localhost:1313/post/2016/2016-06-22-350-intersection-of-two-arrays-ii-/</link><pubDate>Wed, 22 Jun 2016 01:43:21 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-22-350-intersection-of-two-arrays-ii-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 /* * 350. Intersection of</description></item><item><title>[2D Matrix] 130. Surrounded Regions</title><link>http://localhost:1313/post/2016/2016-06-21-2d-matrix-130-surrounded-regions/</link><pubDate>Tue, 21 Jun 2016 00:50:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-21-2d-matrix-130-surrounded-regions/</guid><description>130-. Surrounded Regions Total Accepted: 55559 Total Submissions: 339215 Difficulty: Medium Given a 2D board containing &amp;lsquo;X&amp;rsquo; and &amp;lsquo;O&amp;rsquo;, capture all regions surrounded by &amp;lsquo;X&amp;rsquo;.
A region is captured by flipping all &amp;lsquo;O&amp;rsquo;s into &amp;lsquo;X&amp;rsquo;s in that surrounded region.
For example, X X X X X O O X X X O X X O X X After running your function, the board should be:
X X X X X X X X X X X X X O X X Hide Tags Breadth-first Search Union Find Hide Similar Problems (M) Number of Islands (M) Walls and Gates</description></item><item><title>NBA总决赛的抢七大战</title><link>http://localhost:1313/post/2016/2016-06-20-nba%E6%80%BB%E5%86%B3%E8%B5%9B%E7%9A%84%E6%8A%A2%E4%B8%83%E5%A4%A7%E6%88%98/</link><pubDate>Mon, 20 Jun 2016 11:24:34 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-20-nba%E6%80%BB%E5%86%B3%E8%B5%9B%E7%9A%84%E6%8A%A2%E4%B8%83%E5%A4%A7%E6%88%98/</guid><description>今天是NBA总决赛的抢七大战。比分一直咬的很近。双方交换领先。 欧文的一记远投为克利夫兰骑士队锁定了胜局。虽然格林的表现也非常出色。还是没能扭</description></item><item><title>254. Factor Combinations</title><link>http://localhost:1313/post/2016/2016-06-19-254-factor-combinations/</link><pubDate>Sun, 19 Jun 2016 13:23:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-19-254-factor-combinations/</guid><description>254 - Factor Combinations Total Accepted: 9165 Total Submissions: 25833 Difficulty: Medium Numbers can be regarded as product of its factors. For example, 8 = 2 x 2 x 2; = 2 x 4. Write a function that takes an integer n and return all possible combinations of its factors. Note: You may assume that n is always positive. Factors should be greater than 1 and less than n. **Examples:</description></item><item><title>亚马逊电面</title><link>http://localhost:1313/post/2016/2016-06-17-%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%94%B5%E9%9D%A2/</link><pubDate>Sat, 18 Jun 2016 10:31:18 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-17-%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%94%B5%E9%9D%A2/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 //You are given two lists. Write a method that checks for duplicate elements in</description></item><item><title>171. Excel Sheet Column Number</title><link>http://localhost:1313/post/2016/2016-06-18-171-excel-sheet-column-number/</link><pubDate>Sat, 18 Jun 2016 05:26:21 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-18-171-excel-sheet-column-number/</guid><description>171 - Excel Sheet Column Number
Total Accepted: 84177 Total Submissions: 198174 Difficulty: Easy
Related to question Excel Sheet Column Title Given a column title as appear in an Excel sheet, return its corresponding column number. For example: A -&amp;gt; 1 B -&amp;gt; 2 C -&amp;gt; 3 &amp;hellip; Z -&amp;gt; 26 AA -&amp;gt; 27 AB -&amp;gt; 28 Credits: Special thanks to @ts for adding this problem and creating all test cases.</description></item><item><title>168. Excel Sheet Column Title</title><link>http://localhost:1313/post/2016/2016-06-18-168-excel-sheet-column-title/</link><pubDate>Sat, 18 Jun 2016 05:24:47 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-18-168-excel-sheet-column-title/</guid><description>168- Excel Sheet Column Title My Submissions Question Editorial Solution Total Accepted: 64257 Total Submissions: 288620 Difficulty: Easy
Given a positive integer, return its corresponding column title as appear in an Excel sheet. For example: 1 -&amp;gt; A 2 -&amp;gt; B 3 -&amp;gt; C &amp;hellip; 26 -&amp;gt; Z 27 -&amp;gt; AA 28 -&amp;gt; AB Credits: Special thanks to @ifanchu for adding this problem and creating all test cases.
Hide Company Tags Microsoft Facebook Zenefits Hide Tags Math Hide Similar Problems (E) Excel Sheet Column Number</description></item><item><title>240. Search a 2D Matrix II</title><link>http://localhost:1313/post/2016/2016-06-17-240-search-a-2d-matrix-ii/</link><pubDate>Fri, 17 Jun 2016 13:17:32 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-17-240-search-a-2d-matrix-ii/</guid><description>240 Search a 2D Matrix II Total Accepted: 39652 Total Submissions: 113403 Difficulty: Medium Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: Integers in each row are sorted in ascending from left to right. Integers in each column are sorted in ascending from top to bottom. For example, Consider the following matrix: [ [1, 4, 7, 11,</description></item><item><title>236. Lowest Common Ancestor of a Binary Tree</title><link>http://localhost:1313/post/2016/2016-06-17-236-lowest-common-ancestor-of-a-binary-tree/</link><pubDate>Fri, 17 Jun 2016 02:25:25 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-17-236-lowest-common-ancestor-of-a-binary-tree/</guid><description>236 Lowest Common Ancestor of a Binary Tree
Total Accepted: 46265 Total Submissions: 160631 Difficulty: Medium Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.
According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).</description></item><item><title>202. Happy Number</title><link>http://localhost:1313/post/2016/2016-06-15-202-happy-number/</link><pubDate>Wed, 15 Jun 2016 04:19:38 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-15-202-happy-number/</guid><description>202 Happy Number My Submissions Question Editorial Solution Total Accepted: 73442 Total Submissions: 198117 Difficulty: Easy
Write an algorithm to determine if a number is &amp;ldquo;happy&amp;rdquo;. A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.</description></item><item><title>258. Add Digits</title><link>http://localhost:1313/post/2016/2016-06-15-258-add-digits/</link><pubDate>Wed, 15 Jun 2016 01:51:47 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-15-258-add-digits/</guid><description>258 - Add Digits My Submissions Question Editorial Solution Total Accepted: 101723 Total Submissions: 207987 Difficulty: Easy
Given a non-negative integer num, repeatedly add all its digits until the result has only one digit. For example: Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it. Follow up: Could you do it without any loop/recursion in O(1) runtime?</description></item><item><title>133. Clone Graph</title><link>http://localhost:1313/post/2016/2016-06-14-133-clone-graph/</link><pubDate>Tue, 14 Jun 2016 14:41:54 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-14-133-clone-graph/</guid><description>133- Clone Graph My Submissions Question Editorial Solution Total Accepted: 69310 Total Submissions: 278633 Difficulty: Medium
Clone an undirected graph. Each node in the graph contains a label and a list of its neighbors.
OJ&amp;rsquo;s undirected graph serialization: Nodes are labeled uniquely. We use # as a separator for each node, and , as a separator for node label and each neighbor of the node.
As an example, consider the serialized graph {0,1,2#1,2#2,2}.</description></item><item><title> 113. Path Sum II</title><link>http://localhost:1313/post/2016/2016-06-14-113-path-sum-ii/</link><pubDate>Tue, 14 Jun 2016 13:25:23 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-14-113-path-sum-ii/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>93. Restore IP Addresses</title><link>http://localhost:1313/post/2016/2016-06-14-93-restore-ip-addresses/</link><pubDate>Tue, 14 Jun 2016 07:40:25 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-14-93-restore-ip-addresses/</guid><description>93 Restore IP Addresses Total Accepted: 58138 Total Submissions: 243785 Difficulty: Medium Given a string containing only digits, restore it by returning all possible valid IP address combinations. For example: Given &amp;ldquo;25525511135&amp;rdquo;, return [&amp;ldquo;255.255.11.135&amp;rdquo;, &amp;ldquo;255.255.111.35&amp;rdquo;]. (Order does not matter) Hide Tags Backtracking String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class Solution</description></item><item><title>309. Best Time to Buy and Sell Stock with Cooldown</title><link>http://localhost:1313/post/2016/2016-06-13-309-best-time-to-buy-and-sell-stock-with-cooldown/</link><pubDate>Mon, 13 Jun 2016 23:38:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-13-309-best-time-to-buy-and-sell-stock-with-cooldown/</guid><description>Total Accepted: 17241 Total Submissions: 46340 Difficulty: Medium Say you have an array for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions: You may not engage in multiple transactions at the</description></item><item><title>44. Wildcard Matching</title><link>http://localhost:1313/post/2016/2016-06-13-44-wildcard-matching/</link><pubDate>Mon, 13 Jun 2016 00:36:21 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-13-44-wildcard-matching/</guid><description>Total Accepted: 59407 Total Submissions: 335592 Difficulty: Hard Implement wildcard pattern matching with support for &amp;lsquo;?&amp;rsquo; and &amp;lsquo;&amp;rsquo;. &amp;lsquo;?&amp;rsquo; Matches any single character. &amp;lsquo;&amp;rsquo; Matches any sequence of characters (including the empty sequence). The matching should cover the entire input string (not partial). The function prototype should be: bool isMatch(const char *s, const char *p) Some examples: isMatch(&amp;ldquo;aa&amp;rdquo;,&amp;ldquo;a&amp;rdquo;) → false isMatch(&amp;ldquo;aa&amp;rdquo;,&amp;ldquo;aa&amp;rdquo;) → true isMatch(&amp;ldquo;aaa&amp;rdquo;,&amp;ldquo;aa&amp;rdquo;) → false isMatch(&amp;ldquo;aa&amp;rdquo;, &amp;ldquo;&amp;rdquo;) → true</description></item><item><title>131. Palindrome Partitioning</title><link>http://localhost:1313/post/2016/2016-06-11-131-palindrome-partitioning/</link><pubDate>Sat, 11 Jun 2016 00:43:58 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-11-131-palindrome-partitioning/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>90. Subsets II</title><link>http://localhost:1313/post/2016/2016-06-10-90-subsets-ii/</link><pubDate>Fri, 10 Jun 2016 15:27:02 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-10-90-subsets-ii/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 /* 90. Subsets II My Submissions Question Editorial</description></item><item><title>Onsite</title><link>http://localhost:1313/post/2016/2016-06-10-onsite/</link><pubDate>Fri, 10 Jun 2016 14:55:50 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-10-onsite/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 /*第一题： 多线程题</description></item><item><title>255. Verify Preorder Sequence in Binary Search Tre</title><link>http://localhost:1313/post/2016/2016-06-06-255-verify-preorder-sequence-in-binary-search-tre/</link><pubDate>Mon, 06 Jun 2016 01:58:30 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-06-255-verify-preorder-sequence-in-binary-search-tre/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 /* * 255. Verify Preorder Sequence in Binary Search Tree Total Accepted: 8634 Total Submissions: 23097 Difficulty: Medium Given an array of numbers, verify whether it is the correct preorder traversal sequence of a binary search tree.</description></item><item><title>eHarmony onsite</title><link>http://localhost:1313/post/2016/2016-06-06-eharmony-onsite/</link><pubDate>Mon, 06 Jun 2016 01:56:38 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-06-06-eharmony-onsite/</guid><description>五月下旬去了一趟LA 面试。 这家公司位于UCLA附近，内部的氛围很好，出手也很大方，报销来回机票和酒店，餐费也给的足。闲话少叙，直接上题目 2D matrix</description></item><item><title>eHarmony [onsite interview]</title><link>http://localhost:1313/post/2016/2016-05-25-eharmony-onsite-interview/</link><pubDate>Wed, 25 May 2016 08:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-25-eharmony-onsite-interview/</guid><description>从san jose airport 飞到 lax 感觉还不错。在机场吃了一顿过饭 到酒店因为是national wine day. 喝了一杯红酒。有点微醺。 忘记写程序和日记了。</description></item><item><title>100. Same Tree</title><link>http://localhost:1313/post/2016/2016-05-24-100-same-tree/</link><pubDate>Tue, 24 May 2016 13:34:17 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-24-100-same-tree/</guid><description>100 [Same Tree] (https://leetcode.com/problems/same-tree/submissions/)
Given two binary trees, write a function to check if they are equal or not. Two binary trees are considered equal if they are structurally identical and the nodes have the same value.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /** Total Accepted: **130153** Total Submissions: **299759** Difficulty: **Easy** Hide Company Tags [Bloomberg](https://leetcode.</description></item><item><title>时间飞逝</title><link>http://localhost:1313/post/2016/2016-05-24-%E6%97%B6%E9%97%B4%E9%A3%9E%E9%80%9D/</link><pubDate>Tue, 24 May 2016 01:28:52 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-24-%E6%97%B6%E9%97%B4%E9%A3%9E%E9%80%9D/</guid><description>时间过得好快，一晃一周过去，一个月过去了，一个季度也过去了。半年都快过去了。我还没有做到自己想做的事，没完成年初的任务。时间飞逝，光阴虚度。</description></item><item><title>读温昱《软件架构设计》</title><link>http://localhost:1313/post/2016/2016-05-23-%E8%AF%BB%E6%B8%A9%E6%98%B1%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Mon, 23 May 2016 00:50:38 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-23-%E8%AF%BB%E6%B8%A9%E6%98%B1%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>一道笔试题的故事 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package architect; /* * to constrcut Parent. to construct Delegatee. to construct Child. 构造一个类时，</description></item><item><title> Outreach Backend Software Engineer 电面</title><link>http://localhost:1313/post/2016/2016-05-21-outreach-backend-software-engineer-%E7%94%B5%E9%9D%A2/</link><pubDate>Sat, 21 May 2016 04:55:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-21-outreach-backend-software-engineer-%E7%94%B5%E9%9D%A2/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Pluribus Networks onsite interview</title><link>http://localhost:1313/post/2016/2016-05-17-pluribus-networks-onsite-interview/</link><pubDate>Wed, 18 May 2016 23:24:34 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-17-pluribus-networks-onsite-interview/</guid><description>办公环境蛮好的，前台华裔姐姐也很好，给我弄了一杯咖啡，还弄了一些糖。很贴心的做法。对公司的好感立马上去了。 原定是下午三点开始，我打uber早</description></item><item><title>Lending Club [onsite interview]</title><link>http://localhost:1313/post/2016/2016-05-18-lending-club-onsite-interview/</link><pubDate>Wed, 18 May 2016 20:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-18-lending-club-onsite-interview/</guid><description>5/5 phon interview 第一轮 （Core Java） 本来是一个senior engineer来面的，结果因为两个building之间衔接问题。耽误了十分钟。来了一</description></item><item><title>多走一些路，多一些思考，为目标而坚守！</title><link>http://localhost:1313/post/2016/2016-05-18-%E5%A4%9A%E8%B5%B0%E4%B8%80%E4%BA%9B%E8%B7%AF%E5%A4%9A%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83%E4%B8%BA%E7%9B%AE%E6%A0%87%E8%80%8C%E5%9D%9A%E5%AE%88/</link><pubDate>Wed, 18 May 2016 00:20:13 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-18-%E5%A4%9A%E8%B5%B0%E4%B8%80%E4%BA%9B%E8%B7%AF%E5%A4%9A%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83%E4%B8%BA%E7%9B%AE%E6%A0%87%E8%80%8C%E5%9D%9A%E5%AE%88/</guid><description>今天早上7点出门，步行到Fremont main library，来回五十分钟。走了6千步。觉得还可以。 老是窝在家里是比较容易产生负面情绪的。 未来还是</description></item><item><title>NimbleRx [onsite interview].</title><link>http://localhost:1313/post/2016/2016-05-13-nimblerx-onsite-interview/</link><pubDate>Fri, 13 May 2016 20:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-13-nimblerx-onsite-interview/</guid><description>第一个面试工程师 Dana (Software Engineer) 8:30 - 9:45 很资深的工程师，做过开发和管理， 用过c++， python 之类的开发语言。 现在开始转作java开发， 一开始给我讲了Nimbl</description></item><item><title>自律与操练</title><link>http://localhost:1313/post/2016/2016-05-12-self-discipline-practice/</link><pubDate>Thu, 12 May 2016 08:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-12-self-discipline-practice/</guid><description>缺乏太强的自律意识 临场抓瞎 每次磨蹭到临考前，发现都还有一大堆东西都没做完。 有志之人立长志 之前的辅导员给我讲过，有志之人立长志，无志之人常立志</description></item><item><title>Query sql</title><link>http://localhost:1313/post/2016/2016-05-11-query-sql/</link><pubDate>Wed, 11 May 2016 08:02:49 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-11-query-sql/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Insert data</title><link>http://localhost:1313/post/2016/2016-05-11-insert-data/</link><pubDate>Wed, 11 May 2016 06:06:52 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-11-insert-data/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Create Tables</title><link>http://localhost:1313/post/2016/2016-05-11-create-tables/</link><pubDate>Wed, 11 May 2016 06:06:22 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-11-create-tables/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>使用Markdown编辑器写博客</title><link>http://localhost:1313/post/2016/2016-05-10-use-markdown-edit-blog/</link><pubDate>Tue, 10 May 2016 11:50:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-10-use-markdown-edit-blog/</guid><description>使用Markdown编辑器写博客 本Markdown编辑器使用StackEdit修改而来，用它写博客，将会带来全新的体验哦： Markdown和</description></item><item><title>读《关键20小时，快速学会任何技能》</title><link>http://localhost:1313/post/2016/2016-05-08-the-first-20-hours-how-to-learn-anything/</link><pubDate>Sun, 08 May 2016 04:14:49 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-08-the-first-20-hours-how-to-learn-anything/</guid><description>TED大热演讲者、真正的“学霸”－乔希•考夫曼（Josh Kaufman） 在TED上的演讲：How to learn anything，这个TED大热之后，他</description></item><item><title>Yapstone code challenge</title><link>http://localhost:1313/post/2016/2016-05-08-yapstone-code-challenge/</link><pubDate>Sun, 08 May 2016 02:41:42 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-08-yapstone-code-challenge/</guid><description>#Hackrank test case: 将输入字符串数组 1st Oct 2016 20th Oct 2052 6th Jun 1933 26th May 1960 20th Sep 1958 16th Mar 2068 25th May 1912 16th Dec 2018 26th Dec 2061 4th Nov 2030 28th Jul 1963 转换格式成如下字符串数组 2052-10-20 1933-06-06 1960-05-26 1958-09-20 2068-03-16 1912-05-25 2018-12-16 2061-12-26 2030-11-04 1963-07-28</description></item><item><title>238. Product of Array Except Self</title><link>http://localhost:1313/post/2016/2016-05-05-238-product-of-array-except-self-/</link><pubDate>Thu, 05 May 2016 23:54:01 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-05-238-product-of-array-except-self-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 public class Solution { public int[] productExceptSelf(int[] nums) { /* https://leetcode.</description></item><item><title>Macys.com 面试题目</title><link>http://localhost:1313/post/2016/2016-05-05-macys-com-%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/</link><pubDate>Thu, 05 May 2016 11:55:14 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-05-macys-com-%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/</guid><description>#Interview Questions list Q1: Hive schema Answer: hive&amp;gt; CREATE SCHEMA userdb; Q2: Hive ORC and Hive ETL Answer: ORC file format provides a highly efficient way to store Hive data. It was designed to overcome limitations of the other Hive file formats. Using ORC files improves performance when Hive is reading, writing and processing data. Hive ETL : Example: How to use Hive for ELT Q3: MongoDB and JSON format</description></item><item><title>234. Palindrome Linked List</title><link>http://localhost:1313/post/2016/2016-05-03-234-palindrome-linked-list/</link><pubDate>Tue, 03 May 2016 14:22:01 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-03-234-palindrome-linked-list/</guid><description>Given a singly linked list, determine if it is a palindrome. Follow up: Could you do it in O(n) time and O(1) space? ** 解题思路 ** （1）用快慢指针找到中点 （2）然后把右边那一半反转。 （3）再依次比较左右两边，如果</description></item><item><title>147. Insertion Sort List</title><link>http://localhost:1313/post/2016/2016-05-02-147-insertion-sort-list/</link><pubDate>Mon, 02 May 2016 08:31:04 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-02-147-insertion-sort-list/</guid><description>Insertion Sort List **My SubmissionsQuestion Editorial Solution Total Accepted: 70024 Total Submissions: 238256 Difficulty: Medium
Sort a linked list using insertion sort.
Hide Tags Linked List Sort Hide Similar Problems (M) Sort List
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for singly-linked list.</description></item><item><title>75. Sort Colors</title><link>http://localhost:1313/post/2016/2016-05-02-75-sort-colors/</link><pubDate>Mon, 02 May 2016 07:03:31 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-02-75-sort-colors/</guid><description>Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue. Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.
**Note:**You are not suppose to use the library&amp;rsquo;s sort function for this problem. click to show follow up. Follow up: A rather straight forward solution is a two-pass algorithm using counting sort.</description></item><item><title>集中精力突破</title><link>http://localhost:1313/post/2016/2016-05-01-%E9%9B%86%E4%B8%AD%E7%B2%BE%E5%8A%9B%E7%AA%81%E7%A0%B4/</link><pubDate>Sun, 01 May 2016 13:42:16 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-01-%E9%9B%86%E4%B8%AD%E7%B2%BE%E5%8A%9B%E7%AA%81%E7%A0%B4/</guid><description>今天和高中同学见面。和他聊到我找了近两个月工作，还颗粒无收。他仔细一问，我投过很多职位，做Java后端开发，做Web infrastructure, 做Node.js开发，</description></item><item><title>Hadoop Practice Development Environment</title><link>http://localhost:1313/post/2016/2016-05-01-hadoop-practice-development-environment/</link><pubDate>Sun, 01 May 2016 02:36:06 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-05-01-hadoop-practice-development-environment/</guid><description>Download and Install VirtualBox Downloaded and Installed latest Hortonworks Sandbox, (download for VirtualBox) Import HDP_2.4_virtualbox_v3.ova, and start server Open a web browser, and visit url: http://127.0.0.1:8080 username: maria_dev password: maria_dev Hortonworks_Sandbox_with_HDP_2_4</description></item><item><title>最高效的学习时间</title><link>http://localhost:1313/post/2016/2016-04-29-2014-04-29-%E6%9C%80%E9%AB%98%E6%95%88%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%B6%E9%97%B4/</link><pubDate>Fri, 29 Apr 2016 23:33:44 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-29-2014-04-29-%E6%9C%80%E9%AB%98%E6%95%88%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%B6%E9%97%B4/</guid><description>最高效的学习时间－ 早上7:30-11:00 早上是我效率比较高的时候，午饭后，特别是下午两三点的时候，整个人昏昏欲睡、状态比较差。平常这段时间</description></item><item><title>最高效的学习时间</title><link>http://localhost:1313/post/2016/2016-04-29-good-time-to-study/</link><pubDate>Fri, 29 Apr 2016 23:33:44 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-29-good-time-to-study/</guid><description>早上7:30-11:00是我最高效的学习时间。适合编程、读书、写作还有技术学习。 午饭后，特别是下午两三点的时候，整个人昏昏欲睡、状态比较差。</description></item><item><title>2016-04-28 Apixio 服务端工程师面试题</title><link>http://localhost:1313/post/2016/2016-04-29-apixio-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Fri, 29 Apr 2016 02:37:20 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-29-apixio-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>Apixio 服务端工程师面试题 Redis 和 sql数据库 比较 怎样做到load balance 分布式数据库中数据库同时读写怎么防止数据不同步 kafka 和 graphite 实时数据监控是怎么做的？ 5.编</description></item><item><title>2016-04-28 Apixio 服务端工程师面试题</title><link>http://localhost:1313/post/jianshu/2016/2016-04-29-apixio-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Fri, 29 Apr 2016 02:37:20 +0000</pubDate><guid>http://localhost:1313/post/jianshu/2016/2016-04-29-apixio-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>Apixio 服务端工程师面试题 Redis 和 sql数据库 比较 怎样做到load balance 分布式数据库中数据库同时读写怎么防止数据不同步 kafka 和 graphite 实时数据监控是怎么做的？ 5.编</description></item><item><title>243. Shortest Word Distance - easy</title><link>http://localhost:1313/post/2016/2016-04-28-243-shortest-word-distance-easy/</link><pubDate>Thu, 28 Apr 2016 15:01:27 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-28-243-shortest-word-distance-easy/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 /* 243.</description></item><item><title>2016-04-Revinate and Exilant Technologies</title><link>http://localhost:1313/post/2016/2016-04-22-revinate-and-exilant-technologies/</link><pubDate>Fri, 22 Apr 2016 11:34:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-22-revinate-and-exilant-technologies/</guid><description>Revinate Implement a Poker game : Card class and Deck class Follow up: generate 52 cards, return list&amp;lt;value, suits&amp;gt; such as: {&amp;lt;&amp;lsquo;A&amp;rsquo;, SPADES&amp;gt;, &amp;lt;&amp;lsquo;5&amp;rsquo;, CLUBS&amp;gt;, &amp;hellip;} Leadership questions : what&amp;rsquo;s your experience as tech lead? Agile development methodology Exilant Technologies what&amp;rsquo;s the difference between hashcode() and equals() Implement a function Power(x,n) return xxx&amp;hellip;.x how to use Kafka in your project how to integrate the data</description></item><item><title>Uber电面－非技术</title><link>http://localhost:1313/post/2016/2016-04-20-uber-phone-interview/</link><pubDate>Wed, 20 Apr 2016 10:50:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-20-uber-phone-interview/</guid><description>今天10点刚面完，都是系统设计方面的问题，面试官白人，他严格按照简历上项目经验来问，亲口说他没有准备问答列表，想起来什么问题就现场问。凭着刚</description></item><item><title>读杨绛先生的《走到人生边上》</title><link>http://localhost:1313/post/2016/2016-04-18-%E8%AF%BB%E5%AE%8C%E4%BA%86%E6%9D%A8%E7%BB%9B%E5%85%88%E7%94%9F%E7%9A%84%E8%B5%B0%E5%88%B0%E4%BA%BA%E7%94%9F%E8%BE%B9%E4%B8%8A/</link><pubDate>Mon, 18 Apr 2016 11:52:46 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-18-%E8%AF%BB%E5%AE%8C%E4%BA%86%E6%9D%A8%E7%BB%9B%E5%85%88%E7%94%9F%E7%9A%84%E8%B5%B0%E5%88%B0%E4%BA%BA%E7%94%9F%E8%BE%B9%E4%B8%8A/</guid><description>吃完午饭，稍事休息就捧着本杨绛先生的书《走到人生边上》在沙发上看。 这一看就是一下午。这本书比较薄，读完了觉得还是很有味道的。大学问家写的东西</description></item><item><title>有感于美国H1B签证抽签</title><link>http://localhost:1313/post/2016/2016-04-18-about-h1b-mytask/</link><pubDate>Mon, 18 Apr 2016 11:40:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-18-about-h1b-mytask/</guid><description>大凡从国内来美国的留学生，在念完硕士和博士以后，如果想留下来，大多数人得走申opt，找工作，申请H1B和申请绿卡这条路。在绿卡拿到手之前，是</description></item><item><title>硅谷公司分析与技术准备</title><link>http://localhost:1313/post/2016/2016-04-16-%E7%A1%85%E8%B0%B7%E5%85%AC%E5%8F%B8%E5%88%86%E6%9E%90%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%87%86%E5%A4%87/</link><pubDate>Sat, 16 Apr 2016 21:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-16-%E7%A1%85%E8%B0%B7%E5%85%AC%E5%8F%B8%E5%88%86%E6%9E%90%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%87%86%E5%A4%87/</guid><description>硅谷公司分析 Groupon 地理位置好，有午餐，面试难度不大，offer高适合match ， 是一个非常好的起点 对在职跳槽，bar有点高， 把自己正在做的东西让</description></item><item><title>Kyle Morgano's review of leetcode</title><link>http://localhost:1313/post/2016/2016-04-15-how-to-use-leetcode/</link><pubDate>Fri, 15 Apr 2016 09:16:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-15-how-to-use-leetcode/</guid><description>How to use leetcode? (Disclaimer : this is the approach I took, and it helped me. The timeframe could vary depending on the individual skills)
Stage - 1 (Easy and Medium : 85+ and 165+ problems) Select your favorite topic, solve easy ones, OR sort by acceptance rate. After easy ones are solved, move to other topic if you&amp;rsquo;re exhausted, OR solve medium ones. Don&amp;rsquo;t even attempt for the hard ones if you&amp;rsquo;re not comfortable with easy or medium.</description></item><item><title>两个电面Agilent和GenaSys，表现不佳</title><link>http://localhost:1313/post/2016/2016-04-14-%E4%B8%A4%E4%B8%AA%E7%94%B5%E9%9D%A2agilent%E5%92%8Cgenasys%E8%A1%A8%E7%8E%B0%E4%B8%8D%E4%BD%B3/</link><pubDate>Thu, 14 Apr 2016 07:54:09 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-14-%E4%B8%A4%E4%B8%AA%E7%94%B5%E9%9D%A2agilent%E5%92%8Cgenasys%E8%A1%A8%E7%8E%B0%E4%B8%8D%E4%BD%B3/</guid><description>10:32－10: 56 AM Agilent , Roci, software development manager c# /Java 开发职位 先是Steven给我电话，然后切换到roci，他迟到了三分钟。然后问了一些问题。他现在手下有两</description></item><item><title>重读余华的《活着》</title><link>http://localhost:1313/post/2016/2016-04-12-%E9%87%8D%E8%AF%BB%E4%BD%99%E5%8D%8E%E7%9A%84%E6%B4%BB%E7%9D%80/</link><pubDate>Tue, 12 Apr 2016 11:50:34 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-12-%E9%87%8D%E8%AF%BB%E4%BD%99%E5%8D%8E%E7%9A%84%E6%B4%BB%E7%9D%80/</guid><description>福贵的一生真是坎坷。有一个爱自己的妻子家珍，有一双孝顺的儿子。可惜，命运的作弄，让他白发人送黑发人。真是悲惨至极。 苦根的死，也惨！福贵煮豆子</description></item><item><title>Prove It! - Core Java test questions</title><link>http://localhost:1313/post/2016/2016-04-11-prove-it-core-java-test-questions/</link><pubDate>Mon, 11 Apr 2016 09:18:47 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-11-prove-it-core-java-test-questions/</guid><description>6. Enhance vs-Traditional For Loop In which of the following scenarios is it appropriate to use the enhanced for loop as opposed to the traditional for loop? A. when you need access to the index of the current element within the body of the loop B. with an array C. when you need to iterate an array in reverse D. All of the above 7. Starting an Already Running Thread</description></item><item><title>Core Java concept questions</title><link>http://localhost:1313/post/2016/2016-04-10-core-java-mcq/</link><pubDate>Sun, 10 Apr 2016 15:48:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-10-core-java-mcq/</guid><description>6. Enhance vs-Traditional For Loop In which of the following scenarios is it appropriate to use the enhanced for loop as opposed to the traditional for loop? A. when you need access to the index of the current element within the body of the loop B. with an array C. when you need to iterate an array in reverse D. All of the above 7. Starting an Already Running Thread</description></item><item><title>2016-4-08-Paypal onsite 面试记录</title><link>http://localhost:1313/post/2016/2016-04-09-paypal-onsite-%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</link><pubDate>Sat, 09 Apr 2016 13:59:48 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-09-paypal-onsite-%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</guid><description>Round1 和善的印度老头、经理 soap vs REST , follow up , 为什么soap会慢？ 如果rest 也用xml格式，和soap 它还会快吗？ 用过spring没， 说一下mvc ，</description></item><item><title>Senior Software Engineer (Tour Automation) at Redfin</title><link>http://localhost:1313/post/2016/2016-04-06-redfin-sw-engineer/</link><pubDate>Wed, 06 Apr 2016 22:42:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-06-redfin-sw-engineer/</guid><description>Redfin San Francisco Posted 2 days ago22 views Be one of the first 10 applicants. Kaitlin McHargue·2nd Technical Recruiter at Redfin San Francisco, California Website www.redfin.comHeadquarters Seattle, WASize 1001 to 5000 EmployeesFounded 2004Type Company - PrivateIndustry Real Estate Competitors Zillow, Trulia, Coldwell Banker Senior Software Engineer (Tour Automation) at Redfin Job description Redfin is a well-funded technology startup t</description></item><item><title>71. Simplify Path My Submissions Question</title><link>http://localhost:1313/post/2016/2016-04-05-71-simplify-path-my-submissions-question/</link><pubDate>Tue, 05 Apr 2016 04:47:16 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-05-71-simplify-path-my-submissions-question/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /*71. Simplify Path My Submissions Question Total Accepted: 44962 Total Submissions: 211834 Difficulty: Medium Given an absolute path for a file (Unix-style), simplify it. For example, path = &amp;#34;/home/&amp;#34;, =&amp;gt; &amp;#34;/home&amp;#34; path = &amp;#34;/a/./b/../../c/&amp;#34;, =&amp;gt; &amp;#34;/c&amp;#34; */ import java.</description></item><item><title>Configure Ejabberd chat server to use PostgreSQL</title><link>http://localhost:1313/post/2016/2016-04-04-ejabberd-configure-db-postgresql/</link><pubDate>Mon, 04 Apr 2016 19:58:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-04-ejabberd-configure-db-postgresql/</guid><description>Configure Ejabberd chat server to use PostgreSQL In order to make data persistent with in any application, we can link it to a PostgreSQL relational database. To change the default to use a postgres database we first need to create a new postgresql database on the server 1 2 3 huazhang@zhoutekiMacBook-Air:~/ejabberd-15.09/bin$ psql psql (9.4.4) huazhang=# run ./createdb ejabberd Create the tables using the supplied script 1 huazhang-# ./psql ejabberd &amp;lt;</description></item><item><title>亚麻电面题</title><link>http://localhost:1313/post/2016/2016-04-04-amazon-phone-interview-questions/</link><pubDate>Mon, 04 Apr 2016 11:50:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-04-amazon-phone-interview-questions/</guid><description>Question You’ve got a text file that contains x,y,z-coordinate points for every star in the sky (on the order of 1 billion (this is N)). I want to know the 100 (or K) closest stars to earth, how would you compute that? earth = 0, 0, 0 Solution (1) Split the file by N= 10000 lines, and calculate the distance, define a class Star with</description></item><item><title>Collective Health HackerRank OA</title><link>http://localhost:1313/post/2016/2016-04-04-collective-health-hackerrank-oa/</link><pubDate>Mon, 04 Apr 2016 07:30:45 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-04-collective-health-hackerrank-oa/</guid><description>Collect Health Software Engineer OA 要求在20分钟内完成所有的题目，不能copy 和paste答案。题目都比较基础，现场搜google 有点来不及。还是靠自己平时的积累。</description></item><item><title>去参加Mountain view-Coding Interview Preparation</title><link>http://localhost:1313/post/2016/2016-04-04-%E5%8E%BB%E5%8F%82%E5%8A%A0mountain-view-coding-interview-preparation/</link><pubDate>Mon, 04 Apr 2016 05:44:31 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-04-%E5%8E%BB%E5%8F%82%E5%8A%A0mountain-view-coding-interview-preparation/</guid><description>meetup的地点就在mountain view Tango公司边上。一进去，打印了自己的访客label，觉得这个地方很极客，设施很简单，很多桌子。适</description></item><item><title>200. Number of Islands</title><link>http://localhost:1313/post/2016/2016-04-03-200-number-of-islands/</link><pubDate>Sun, 03 Apr 2016 04:54:15 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-03-200-number-of-islands/</guid><description>DFS solution for 200. Number of Islands
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 /* 200.</description></item><item><title>Tesla-Model 3</title><link>http://localhost:1313/post/2016/2016-04-03-tesla-model-3-/</link><pubDate>Sun, 03 Apr 2016 03:15:50 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-03-tesla-model-3-/</guid><description>天天写字，天天编程，努力吧！ 为了明年拿到Model 3 而努力！ Tesla Model-3</description></item><item><title>89. Gray Code</title><link>http://localhost:1313/post/2016/2016-04-03-89-gray-code/</link><pubDate>Sun, 03 Apr 2016 02:42:56 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-03-89-gray-code/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 /* 89.</description></item><item><title>199. Binary Tree Right Side View</title><link>http://localhost:1313/post/2016/2016-04-02-199-binary-tree-right-side-view-/</link><pubDate>Sat, 02 Apr 2016 13:41:31 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-02-199-binary-tree-right-side-view-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 /* 199.</description></item><item><title>EPAM-Scala-Interview-Questions</title><link>http://localhost:1313/post/2016/2016-03-31-epam-scala-interview-questions/</link><pubDate>Fri, 01 Apr 2016 08:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-31-epam-scala-interview-questions/</guid><description>Scala Interview Questions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 1. pattern matching and functional composition https://twitter.github.io/scala_school/pattern-matching-and-functional-composition.html scala compose partial functions scala&amp;gt; val fComposeG = f _ compose g _ fComposeG: (String) =&amp;gt; java.lang.String = &amp;lt;function&amp;gt; scala&amp;gt; fComposeG(&amp;#34;yay&amp;#34;) res0: java.lang.String = f(g(yay)) andThen andThen is like compose, but calls the first</description></item><item><title>今天是个好日子－拿到Paypal onsite</title><link>http://localhost:1313/post/2016/2016-04-01-%E4%BB%8A%E5%A4%A9%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%97%A5%E5%AD%90%E6%8B%BF%E5%88%B0paypal-onsite/</link><pubDate>Fri, 01 Apr 2016 07:36:56 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-04-01-%E4%BB%8A%E5%A4%A9%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%97%A5%E5%AD%90%E6%8B%BF%E5%88%B0paypal-onsite/</guid><description>昨天上午Paypal电面，面试官是一个华裔女工程师，在里面Paypal做了十年，非常资深。 她问的问题比较基础，但是蛮多的， 例如第一个问题，N</description></item><item><title>Scala resource list</title><link>http://localhost:1313/post/2016/2016-03-31-scala-resource/</link><pubDate>Thu, 31 Mar 2016 22:50:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-31-scala-resource/</guid><description>Scala resource list Scala School Lessons in the Fundamentals of Scala Effective Scala Twitter&amp;rsquo;s &amp;ldquo;best practices&amp;rdquo; for Scala. Useful for understanding idioms in Twitter&amp;rsquo;s code. scala-lang.org Documentation Links to tutorials, manuals, API reference, books, &amp;hellip; Scala API Documentation Scala Syntax FAQ pattern matching and functional composition andThen Map immutable</description></item><item><title>清晨接了一个外包公司电话面试</title><link>http://localhost:1313/post/2016/2016-03-30-phone-interview-outsourcing-company/</link><pubDate>Wed, 30 Mar 2016 08:20:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-30-phone-interview-outsourcing-company/</guid><description>早上6:38醒了，就在床上写点东西，梳理一下要准备的技术和项目描述。 冷不丁有一个电话打进来了。我没听清楚是recruiter，还是面试官。他</description></item><item><title>关于职业发展的思考</title><link>http://localhost:1313/post/2016/2016-03-30-personal-career-goal/</link><pubDate>Tue, 29 Mar 2016 23:58:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-30-personal-career-goal/</guid><description>最近技术面试迭遭打击，好几次挂在电话面试上，还有两次是挂在onsite面上。我开始对自己的技术储备产生了怀疑。现在觉得我懂的技术很宽泛，多浮</description></item><item><title>Zabbix Installation and Configurations</title><link>http://localhost:1313/post/2016/2016-03-29-zabbix-setup-configurations/</link><pubDate>Tue, 29 Mar 2016 14:39:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-29-zabbix-setup-configurations/</guid><description>Note Zabbix is LAMP based monitoring tool, which include sever, client, proxy (for different IDC without public IP). We only use server/client. #Installation zabbix official has its own repository, load the zabbix repo for centos6 first. # rpm -ivh http://repo.zabbix.com/zabbix/2</description></item><item><title>LinkedIn Phone Interview Questions</title><link>http://localhost:1313/post/2016/2016-03-29-linkedin-phone-interview/</link><pubDate>Tue, 29 Mar 2016 13:33:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-29-linkedin-phone-interview/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>170. Two Sum III - Data structure design</title><link>http://localhost:1313/post/2016/2016-03-29-170-two-sum-iii-data-structure-design/</link><pubDate>Tue, 29 Mar 2016 08:47:37 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-29-170-two-sum-iii-data-structure-design/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /* Date: March 21, 2016 170. Two Sum III - Data structure design [My Submissions](https://leetcode.</description></item><item><title>在候机厅、飞机和火车上搭讪的经历</title><link>http://localhost:1313/post/2016/2016-03-27-talk-in-train-flight/</link><pubDate>Mon, 28 Mar 2016 09:15:56 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-27-talk-in-train-flight/</guid><description>不管是坐火车还是坐飞机，只要客观环境允许，我都喜欢和座位旁边的人聊天。因为自身还算面善，喜欢听别人讲故事，也喜欢讲一些故事，所以基本上都能聊</description></item><item><title>74. Search a 2D Matrix</title><link>http://localhost:1313/post/2016/2016-03-28-74-search-a-2d-matrix-/</link><pubDate>Mon, 28 Mar 2016 03:11:02 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-28-74-search-a-2d-matrix-/</guid><description>Use binary search. Don&amp;rsquo;t treat it as a 2D matrix, just treat it as a sorted array： m ＊ n matrix convert to an array =&amp;gt; matrix[x][y] =&amp;gt; a[x * n + y] an array convert to m *＊n matrix =&amp;gt; a[x] =&amp;gt;matrix[x / n][x % n]; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description></item><item><title>本周读书</title><link>http://localhost:1313/post/2016/2016-03-27-2016-03-26-%E6%9C%AC%E5%91%A8%E8%AF%BB%E4%B9%A6/</link><pubDate>Sun, 27 Mar 2016 00:06:56 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-27-2016-03-26-%E6%9C%AC%E5%91%A8%E8%AF%BB%E4%B9%A6/</guid><description>本周读了几本书 Head first Java - 读了第一章至第四章，复习了java的基础知识和面向对象的概念。 Elements of Programming Interviews - 读了第一章至第四章， 第四章剩下几页没读完。 少有</description></item><item><title>当间谍和卧底的命运是怎样的</title><link>http://localhost:1313/post/2016/2016-03-27-%E5%BD%93%E9%97%B4%E8%B0%8D%E5%92%8C%E5%8D%A7%E5%BA%95%E7%9A%84%E5%91%BD%E8%BF%90%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84/</link><pubDate>Sun, 27 Mar 2016 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-27-%E5%BD%93%E9%97%B4%E8%B0%8D%E5%92%8C%E5%8D%A7%E5%BA%95%E7%9A%84%E5%91%BD%E8%BF%90%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84/</guid><description>上月重读《鹿鼎记》，除开韦小宝在清廷和天地会左右逢源以外，还特别注意到康熙安插在天地会的卧底－风际中。此人武功高强，胆大心细，在康熙准备炮轰</description></item><item><title>少有人走过的路－读书摘要</title><link>http://localhost:1313/post/2016/2016-03-25-theroadlesstraveled/</link><pubDate>Fri, 25 Mar 2016 21:20:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-25-theroadlesstraveled/</guid><description>自律，是以积极而主动的态度，去解决人生痛苦的重要原则，主要包括四个方面：推迟满足感、承担责任、尊重事实、保持平衡。 推迟满足感 意味着不贪图暂时</description></item><item><title>Expedia phone interview questions</title><link>http://localhost:1313/post/2016/2016-03-25-expedia-phone-interview-questions/</link><pubDate>Fri, 25 Mar 2016 20:20:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-25-expedia-phone-interview-questions/</guid><description>what’s the difference between abstract class and interface? why we use abstract class explain three OOD concepts with example what’s the difference between unit test and integrated test? regular express Give a html file, replace the 408-909-2786 by 4089092786. how to implement it transfer? tell me about REST api What is caching? What is statelessness in RESTful Webservices? When test</description></item><item><title>Some questions from Intel Software group</title><link>http://localhost:1313/post/2016/2016-03-25-some-questions-from-intel-software-group/</link><pubDate>Fri, 25 Mar 2016 10:20:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-25-some-questions-from-intel-software-group/</guid><description>2011-03-09 Some questions from Intel Software group Posted on March 9, 2011 by hustbill Do you enjoy collaborative development and programming with others in a dynamic and fast pace environment? Do you have a talent for programming? Do you enjoy the challenge of finding bad bugs? Do you get excited by improving and refining algorithms? Does writing tight, clean, bug free code interest you? Do you read coding books instead</description></item><item><title>Expedia Software Engineer Interview Questions</title><link>http://localhost:1313/post/2016/2016-03-24-expedia-software-engineer-interview-questions/</link><pubDate>Thu, 24 Mar 2016 23:04:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-24-expedia-software-engineer-interview-questions/</guid><description>##Software Developer Interview Questions How will you generate random numbers. How to use big data in mobile apps. Coding problems on tree Design a black jack card game How to find K most frequently occurring elements. Reverse a string Remove duplicates in a string Lots of queries involving JOINs Given 2 integer arrays, find common elements. Design an extensible school schema. tracing recursive method that are called multiple times in</description></item><item><title>梦到考场了</title><link>http://localhost:1313/post/2016/2016-03-24-strangedream/</link><pubDate>Thu, 24 Mar 2016 06:34:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-24-strangedream/</guid><description>昨晚在微信大学同学群看了一段关于考试作弊的搞笑视频，里面说某班的奇葩同学，把各种低劣作弊手段都用上了，结果他们班还是考了年级最后一名，被校长</description></item><item><title>听奶奶讲过去的故事之一</title><link>http://localhost:1313/post/2016/2016-03-23-grandma-story01/</link><pubDate>Thu, 24 Mar 2016 01:19:20 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-23-grandma-story01/</guid><description>我奶奶去世好几年了，我的脑海里有时候还会浮现出她的音容笑貌。我奶奶是一个比较严肃的人。对小辈比较关心和爱护，但是绝不溺爱。虽然她从来没打过我</description></item><item><title>GrandmaStory02</title><link>http://localhost:1313/post/2016/2016-03-23-grandmastory02/</link><pubDate>Wed, 23 Mar 2016 10:29:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-23-grandmastory02/</guid><description>#听奶奶讲过去的故事之二 一些贩夫走卒之类的乡间故事, to be continue&amp;hellip;</description></item><item><title>The Play Framework</title><link>http://localhost:1313/post/2016/2016-03-23-the-play-framework-/</link><pubDate>Wed, 23 Mar 2016 01:56:20 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-23-the-play-framework-/</guid><description>The Play Framework at LinkedIn. This talk introduces why LinkedIn moved to Play. Node.js vs Play Framework. A talk that shows how to compare two web frameworks, using Node and Play as a specific example. Composable and Streamable Play apps. A talk that shows the power of non-blocking I/O and functional programming by implementing BigPipe-style streaming in Play. What are the pros and cons of Play Framework 2, for a</description></item><item><title>28. Implement strStr()</title><link>http://localhost:1313/post/2016/2016-03-23-28-implement-strstr/</link><pubDate>Wed, 23 Mar 2016 01:44:55 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-23-28-implement-strstr/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 /* 28. Implement strStr() Total Accepted: 98416 Total Submissions: 400908 Difficulty: Easy Implement strStr(). Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</description></item><item><title>8. String to Integer (atoi)</title><link>http://localhost:1313/post/2016/2016-03-23-8-string-to-integer-atoi-/</link><pubDate>Wed, 23 Mar 2016 00:43:43 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-23-8-string-to-integer-atoi-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 /* 8.</description></item><item><title>Expedia Software Engineer Interview Questions</title><link>http://localhost:1313/post/2016/2016-03-22-expedia-software-engineer-interview-questions/</link><pubDate>Tue, 22 Mar 2016 14:41:28 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-22-expedia-software-engineer-interview-questions/</guid><description>Software Developer Interview Questions How will you generate random numbers. How to use big data in mobile apps. Coding problems on tree Design a black jack card game How to find K most frequently occurring elements. Reverse a string Remove duplicates in a string Lots of queries involving JOINs Given 2 integer arrays, find common elements. Design an extensible school schema. tracing recursive method that are called multiple times in</description></item><item><title>125. Valid Palindrome My Submissions Question</title><link>http://localhost:1313/post/2016/2016-03-22-125-valid-palindrome-my-submissions-question/</link><pubDate>Tue, 22 Mar 2016 13:48:27 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-22-125-valid-palindrome-my-submissions-question/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 /* 125.</description></item><item><title>ElasticSearch, Logstash and Kibana</title><link>http://localhost:1313/post/2016/2016-03-21-elasticsearch-logstash-and-kibana/</link><pubDate>Tue, 22 Mar 2016 12:04:08 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-21-elasticsearch-logstash-and-kibana/</guid><description>The ELK Stack is the combination of Elasticsearch, Logstash, and Kibana that is used specifically in log analytics. Logstash ships log data to Elasticsearch, which indexes the information in a searchable datastore. Kibana then takes the datastore and shows the information in graphical format for log analysis. Logstash is developed by Ruby, Kibana by javascript, Elasticsearch by Java ELK setting in CentOS We can use script to install ELK in</description></item><item><title>AppFiolo Interview questions</title><link>http://localhost:1313/post/2016/2016-03-22-appfiolo-interview-questions/</link><pubDate>Tue, 22 Mar 2016 07:19:17 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-22-appfiolo-interview-questions/</guid><description>AppFolio, Inc.(NASDAQ:APPF)成立于2006年，总部位于美国加州圣巴巴拉，创始人为加州大学前计算机科学教授克劳斯·绍瑟尔(Klasu S</description></item><item><title>读书清单</title><link>http://localhost:1313/post/2016/2016-03-22-%E8%AF%BB%E4%B9%A6%E6%B8%85%E5%8D%95/</link><pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-22-%E8%AF%BB%E4%B9%A6%E6%B8%85%E5%8D%95/</guid><description>2016年3月读书清单 Clean Code - LeetCode (复习) Head First Java (复习) Elements of Programming Interviews: The Insiders&amp;rsquo; Guide （第四章 30%） 剑指offer Effective Java More Effective C# Head First Design Patterns 你的灯亮着吗? : 发现问题的</description></item><item><title>《书都不会读，你还想成功》读书心得</title><link>http://localhost:1313/post/2016/2016-03-21-%E4%B9%A6%E9%83%BD%E4%B8%8D%E4%BC%9A%E8%AF%BB%E4%BD%A0%E8%BF%98%E6%83%B3%E6%88%90%E5%8A%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 21 Mar 2016 10:07:31 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-21-%E4%B9%A6%E9%83%BD%E4%B8%8D%E4%BC%9A%E8%AF%BB%E4%BD%A0%E8%BF%98%E6%83%B3%E6%88%90%E5%8A%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid><description>今天坚持读完了一本书《书都不会读，你还想成功》，觉得还是很有收获的。作者用一名普通公司职员的鲜活例子，展现给读者一个读书改变人生的故事。主人</description></item><item><title>看网络小说也算生产力吗？</title><link>http://localhost:1313/post/2016/2016-03-20-%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4%E4%B9%9F%E7%AE%97%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%90%97/</link><pubDate>Sun, 20 Mar 2016 02:39:43 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-20-%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4%E4%B9%9F%E7%AE%97%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%90%97/</guid><description>我一直喜欢看小说，特别是网络小说。很多闲暇时间我都去读网络小说了。军事的、悬疑的，玄幻穿越的，好的，差的，只要能吸引我的眼球，都能持续地读下</description></item><item><title>在MacOS Sublime Text 3中编译和运行Java程序</title><link>http://localhost:1313/post/2016/2016-03-19-%E5%9C%A8macos-sublime-text-3%E4%B8%AD%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8Cjava%E7%A8%8B%E5%BA%8F/</link><pubDate>Sat, 19 Mar 2016 09:09:36 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-19-%E5%9C%A8macos-sublime-text-3%E4%B8%AD%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8Cjava%E7%A8%8B%E5%BA%8F/</guid><description>修改JavaC.sublime-build 或者创建新的编译系统－Java.sublime-build /Users/$username/Library/Application Support/Sublime Text 3/Packages/Java/JavaC.sublime-build 为： ` { "cmd": ["javac \"$file\" &amp;&amp; java \"$file_base_name\""], "shell":true, "file_regex": "^(...*?):([0-9]*):?([0-9]*)", "selector": "source.java" }</description></item><item><title>2016.03.17.Prepare for interview</title><link>http://localhost:1313/post/2016/2016-03-17-prepare-for-interview/</link><pubDate>Thu, 17 Mar 2016 23:39:13 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-17-prepare-for-interview/</guid><description>March 17, 2016 Summary and introducation section Spend time, write down the summary,and recite, cover everything you want to talk. Be confident. You are reaching out because you have the background and skills they required. Deep breath. Don&amp;rsquo;t rush. Take your time. Get comfortable. When you talking, they will ask you additional questions. If you don&amp;rsquo;t understand the question, ask them repeat their questions, and pay attention. Show your what</description></item><item><title>2016.03.07 HERE- phone interview (failed)</title><link>http://localhost:1313/post/2016/2016-03-17-here-phone-interview-failed/</link><pubDate>Thu, 17 Mar 2016 10:13:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-17-here-phone-interview-failed/</guid><description>March 7, 2016 Justin Eylander Lead Software Engineer at HERE He asked me a few questions. But I can not catch the point. I cannot understand his questions clearly. Q1: How to use the scalability of AKKA? what’s you use environment? Q2: What’s the advantage and disadvantage of AKKA and Scala to develop the RESTful APIs?</description></item><item><title>2016.03.16.Equinix-onsite-interview</title><link>http://localhost:1313/post/2016/2016-03-16-equinix-onsite-interview/</link><pubDate>Thu, 17 Mar 2016 06:08:09 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-16-equinix-onsite-interview/</guid><description>#面试问题 1.在多线程情况下的Singleton写法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // version 1.4 public class Singleton { private volatile static Singleton singleton = null; private Singleton() { } public static Singleton getInstance() { if (singleton == null ) {</description></item><item><title>2016.03.15. Sony Playstation Network interview</title><link>http://localhost:1313/post/2016/2016-03-17-sony-playstation-network-interview/</link><pubDate>Thu, 17 Mar 2016 00:13:21 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-17-sony-playstation-network-interview/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 // write a method to replace all whites spaces in a string with 20% // new York --&amp;gt; new%20York20%20% // Date: March 15, 2016 // Desc: Interview for Sony technical</description></item><item><title>Tips for technical interviews</title><link>http://localhost:1313/post/2016/2016-03-15-tips-for-technical-interviews/</link><pubDate>Tue, 15 Mar 2016 02:19:16 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-15-tips-for-technical-interviews/</guid><description>The main thing here is to talk through your direction of code. Ask validation questions to make sure you understand the question and what the outcome should be. Drawing some basic things out first and just speaking or showing your reasoning is a great way to get the conversation started. Again, it&amp;rsquo;s not always about getting the right answer yourself but proving you can work with the the interviewers to</description></item><item><title>JavaScript 和 Node.js学习资源及书籍</title><link>http://localhost:1313/post/2016/2016-03-14-javascript-%E5%92%8C-node-js%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E5%8F%8A%E4%B9%A6%E7%B1%8D/</link><pubDate>Mon, 14 Mar 2016 13:28:50 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-14-javascript-%E5%92%8C-node-js%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E5%8F%8A%E4%B9%A6%E7%B1%8D/</guid><description>学习和使用Node.js已经有近一年多时间了。越学习越觉得自己懂得还不够多。之前走过一些弯路，看了太多的入门水平的文章。现在推荐一些深入的学</description></item><item><title>深度思考的能力</title><link>http://localhost:1313/post/2016/2016-03-12-%E6%B7%B1%E5%BA%A6%E6%80%9D%E8%80%83%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Sat, 12 Mar 2016 13:47:20 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-12-%E6%B7%B1%E5%BA%A6%E6%80%9D%E8%80%83%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>我有个很坏的习惯，只要一打开电脑，就容易被电脑上蹦出的网页牵着鼻子走。 从一个网页跳到另外一个网页。往往最后就去看小说，八卦新闻。除了工作时间</description></item><item><title>Wipro Interview questions- Java 8 Stream - @ Apple Inc. code</title><link>http://localhost:1313/post/2016/2016-03-11-wipro-interview-questions-java-8-stream-@-apple-inc-code-/</link><pubDate>Fri, 11 Mar 2016 09:17:46 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-11-wipro-interview-questions-java-8-stream-@-apple-inc-code-/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 import java.util.*; public class StreamDemo { public static void main(String[] args) { // TODO Auto-generated method stub List&amp;lt;Book&amp;gt; libray = new ArrayList&amp;lt;Book&amp;gt;(); libray.add(new</description></item><item><title>读微信公众号－长江评论的几篇文章有感</title><link>http://localhost:1313/post/2016/2016-03-07-%E8%AF%BB%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%95%BF%E6%B1%9F%E8%AF%84%E8%AE%BA%E7%9A%84%E5%87%A0%E7%AF%87%E6%96%87%E7%AB%A0%E6%9C%89%E6%84%9F/</link><pubDate>Mon, 07 Mar 2016 13:16:18 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-03-07-%E8%AF%BB%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%95%BF%E6%B1%9F%E8%AF%84%E8%AE%BA%E7%9A%84%E5%87%A0%E7%AF%87%E6%96%87%E7%AB%A0%E6%9C%89%E6%84%9F/</guid><description>8:41 PM 今天用手机一起读了几篇公众号文章，来自长江评论所刊摘的－杨国英《2016，保住工作就是保命》，《你每天90%的注意力，都浪费在了脚毛蒜皮</description></item><item><title>2016.02.28《无人区》观后感</title><link>http://localhost:1313/post/2016/2016-02-28%E6%97%A0%E4%BA%BA%E5%8C%BA%E8%A7%82%E5%90%8E%E6%84%9F/</link><pubDate>Mon, 29 Feb 2016 10:35:22 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-28%E6%97%A0%E4%BA%BA%E5%8C%BA%E8%A7%82%E5%90%8E%E6%84%9F/</guid><description>潘肖－北京的一名见习律师，飞机加马车，辗转到西北小城，为那个贩卖鹰隼的老大撞死警察作无罪辩护。凭着一张饭店的结账单，上面有白酒和啤酒，潘肖找</description></item><item><title>2016.02.27本周小结与思考</title><link>http://localhost:1313/post/2016/2016-02-27%E6%9C%AC%E5%91%A8%E5%B0%8F%E7%BB%93%E4%B8%8E%E6%80%9D%E8%80%83/</link><pubDate>Sun, 28 Feb 2016 03:50:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-27%E6%9C%AC%E5%91%A8%E5%B0%8F%E7%BB%93%E4%B8%8E%E6%80%9D%E8%80%83/</guid><description>这一周找工作，整个人都是稀里糊涂的。 没有认真刷题，就是在网上逛来逛去。就接了几个猎头的问询电话，一个扎实的电话面试都没有。烦闷之余，就是看视</description></item><item><title>thumbtack 面试经验</title><link>http://localhost:1313/post/2016/2016-02-25-thumbtack-%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/</link><pubDate>Thu, 25 Feb 2016 08:47:39 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-25-thumbtack-%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/</guid><description>面经一： 一共经过了三轮面试 Online code challenge : 实现一个in-memory数据库 上交之后会有人review code 大概3-5天后收到phon-screen通知.</description></item><item><title>过去的小故事</title><link>http://localhost:1313/post/2016/2016-02-25-%E8%BF%87%E5%8E%BB%E7%9A%84%E5%B0%8F%E6%95%85%E4%BA%8B/</link><pubDate>Thu, 25 Feb 2016 01:40:19 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-25-%E8%BF%87%E5%8E%BB%E7%9A%84%E5%B0%8F%E6%95%85%E4%BA%8B/</guid><description>随着年纪的增加，越来越有倾诉的欲望。身边的朋友总是在变。以前说得上话的朋友，因为工作和生活环境的变迁，慢慢失去联系。除了微信或者qq上面偶尔</description></item><item><title>学习计划－2016.02.23</title><link>http://localhost:1313/post/2016/2016-02-24-%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%922016-02-23/</link><pubDate>Wed, 24 Feb 2016 10:52:42 +0000</pubDate><guid>http://localhost:1313/post/2016/2016-02-24-%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%922016-02-23/</guid><description>练习听力和口语 做听写，校对自己的听写。所用的材料：voa新闻，CNN视频。 要做到生活在硅谷，而不是生活在华人圈。日常听美国人的新闻。坚持写下</description></item><item><title>Ejabberd-Architecture</title><link>http://localhost:1313/post/2015/2015-10-12-ejabberd-architecture/</link><pubDate>Mon, 12 Oct 2015 11:50:00 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-10-12-ejabberd-architecture/</guid><description>Created by Hustbill, last modified on Oct 12, 2015 ejabberd is the de facto XMPP server in the world. ejabberd has been designed from the ground-up, since 2002 for robust, entreprise deployment. The goal has always been to shot for the moon and that what made it a long-lasting success. ejabberd is specifically designed for enterprise purposes: it is fault-tolerant can utilise the resources of multiple clustered machines, and easily</description></item><item><title>Git Operations</title><link>http://localhost:1313/post/2015/2015-06-26-git-operations/</link><pubDate>Fri, 26 Jun 2015 09:30:00 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-06-26-git-operations/</guid><description>Git Operations How to remove local untracked files from the current Git branch To remove directories, run git clean -f -d or git clean -fd.
To remove ignored files, run git clean -f -X or git clean -fX.
To remove ignored and non-ignored files, run git clean -f -x or git clean -fx.
reset to an absolute commit SHA1 value
1 git reset 5d125c Git submodule 1 git submodule add https://github.</description></item><item><title>Hadoop YARN Setting</title><link>http://localhost:1313/post/2015/2015-04-11-setup-hadoop-yarn-2.6.0/</link><pubDate>Sat, 11 Apr 2015 11:49:00 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-11-setup-hadoop-yarn-2.6.0/</guid><description>Hadoop YARN vi .bash_profile add two lines export JAVA_HOME=`/usr/libexec/java_home -v 1.7` export HADOOP_PREFIX=/usr/local/Cellar/hadoop/2.6.0/libexec 2.SSH If you cannot ssh to localhost without a passphrase, execute the following commands: $ ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa $ cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys modify In the distribution, edit the file etc/hadoop/hadoop-env.sh to define some parameters as follows: # set to the root of your Java installation export JAVA_HOME={your java home directory} # set</description></item><item><title>优化Hexo Theme Pure 正文字体CSS写法</title><link>http://localhost:1313/post/2015/2015-05-26-best-css-font-in-web-design/</link><pubDate>Sat, 11 Apr 2015 11:49:00 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-05-26-best-css-font-in-web-design/</guid><description>Hexo theme pure 主题很棒，符合我的大部分需求。美中不足的是字体设置有些偏小，字间距有些紧凑。 为了优化阅读体验，重新设置了CSS 中的 font-famil</description></item><item><title>重新使用Hadoop YARN 2.4.0</title><link>http://localhost:1313/post/2015/2015-04-10-hadoop-2.4.0-how-to-use/</link><pubDate>Fri, 10 Apr 2015 11:49:00 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-10-hadoop-2.4.0-how-to-use/</guid><description>因为写论文需要，增加一章case study。 把之前做过的Hadoop job Scheduler 实验数据加进来。一上午都在弄之前搭建好的hadoop cluster，</description></item><item><title>Yarn Scheduler Load Simulator (SLS)</title><link>http://localhost:1313/post/2015/2015-04-09-yarn-scheduler-load-simulator/</link><pubDate>Thu, 09 Apr 2015 21:42:08 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-09-yarn-scheduler-load-simulator/</guid><description>Yarn Scheduler Load Simulator (SLS) Yarn Scheduler Load Simulator (SLS) The Yarn Scheduler Load Simulator (SLS) is such a tool, which can simulate large-scale Yarn clusters and application loads in a single machine.This simulator would be invaluable in furthering Yarn by providing a tool for researchers and developers to prototype new scheduler features and predict their behavior and performance with reasonable amount of confidence, thereby aiding rapid innovation. The simulator</description></item><item><title>Prepare for Intel technical interview</title><link>http://localhost:1313/post/2015/2015-04-09-intel/</link><pubDate>Thu, 09 Apr 2015 03:52:08 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-09-intel/</guid><description>My friend told me there is an open position as software engineer in Intel, Oregon. I send my update resume to her. She give me some advices. To pass the interview, I need to refresh my Operation system knowledge and c/c++ skills. Job requirment This position focus on the software performance. Since I have the experience using WinDB , understand the basic concepts related to Operating System such as Process</description></item><item><title>当前的任务和想法</title><link>http://localhost:1313/post/2015/2015-04-08-task-action/</link><pubDate>Wed, 08 Apr 2015 19:04:08 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-08-task-action/</guid><description>2015.04.08 去学校餐厅吃完晚饭后，和同学在学生活动中心打了二十分钟的乒乓球，出了点汗。回到座位上以后，不想写程序。索性打开writed 来写一下自己现在</description></item><item><title>This is my first post!</title><link>http://localhost:1313/post/2015/2015-04-08-this-is-my-firstpost/</link><pubDate>Wed, 08 Apr 2015 12:04:08 +0000</pubDate><guid>http://localhost:1313/post/2015/2015-04-08-this-is-my-firstpost/</guid><description>You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve --watch, which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the</description></item><item><title>JS Flowchart Diagrams</title><link>http://localhost:1313/post/2017/js-flowchart-diagrams/</link><pubDate>Wed, 04 Mar 2015 21:57:50 +0800</pubDate><guid>http://localhost:1313/post/2017/js-flowchart-diagrams/</guid><description>&lt;h2 id="usage">Usage&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">st=&amp;gt;start: Start|past:&amp;gt;http://www.google.com[blank]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e=&amp;gt;end: End:&amp;gt;http://www.google.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">op1=&amp;gt;operation: My Operation|past
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">op2=&amp;gt;operation: Stuff|current
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub1=&amp;gt;subroutine: My Subroutine|invalid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cond=&amp;gt;condition: Yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">or No?|approved:&amp;gt;http://www.google.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c2=&amp;gt;condition: Good idea|rejected
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">io=&amp;gt;inputoutput: catch something...|request
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">st-&amp;gt;op1(right)-&amp;gt;cond
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cond(yes, right)-&amp;gt;c2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cond(no)-&amp;gt;sub1(left)-&amp;gt;op1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c2(yes)-&amp;gt;io-&amp;gt;e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c2(no)-&amp;gt;op2-&amp;gt;e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>JS Sequence Diagrams</title><link>http://localhost:1313/post/2017/js-sequence-diagrams/</link><pubDate>Wed, 04 Mar 2015 21:57:45 +0800</pubDate><guid>http://localhost:1313/post/2017/js-sequence-diagrams/</guid><description>&lt;h2 id="usage">Usage&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Andrew-&amp;gt;China: Says Hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Note right of China: China thinks\nabout it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">China--&amp;gt;Andrew: How are you?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Andrew-&amp;gt;&amp;gt;China: I am good thanks!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Syntax Highlighting</title><link>http://localhost:1313/post/2017/syntax-highlighting/</link><pubDate>Tue, 30 Aug 2011 16:01:23 +0800</pubDate><guid>http://localhost:1313/post/2017/syntax-highlighting/</guid><description>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">helloWorld&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">alert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title/><link>http://localhost:1313/post/2021/2021-10/2021-10-12-%E8%A2%AB%E8%83%A1%E8%90%9D%E5%8D%9Cpip%E5%90%8E%E4%BB%8A%E5%A4%9C%E6%88%91%E5%86%B3%E5%AE%9A%E8%A3%B8%E8%BE%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2021/2021-10/2021-10-12-%E8%A2%AB%E8%83%A1%E8%90%9D%E5%8D%9Cpip%E5%90%8E%E4%BB%8A%E5%A4%9C%E6%88%91%E5%86%B3%E5%AE%9A%E8%A3%B8%E8%BE%9E/</guid><description>本帖最后由匿名于2021-9-2512:38编辑 PIP对我来说，一直是存在于网上的传说，我从来没有想到它会真正落到我的头上。我曾经天真的以为</description></item><item><title>2017-06-25 听音乐，让自己内心宁静而放松</title><link>http://localhost:1313/post/2017/2017-06-25-%E5%90%AC%E9%9F%B3%E4%B9%90%E8%AE%A9%E8%87%AA%E5%B7%B1%E5%86%85%E5%BF%83%E5%AE%81%E9%9D%99%E8%80%8C%E6%94%BE%E6%9D%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-06-25-%E5%90%AC%E9%9F%B3%E4%B9%90%E8%AE%A9%E8%87%AA%E5%B7%B1%E5%86%85%E5%BF%83%E5%AE%81%E9%9D%99%E8%80%8C%E6%94%BE%E6%9D%BE/</guid><description>听李宗盛的《》和《凡人歌》 感觉还不错。一个人在公司，温度还合适。不觉得太孤单。 爱音乐。 想着自己未来二十年的生活。 没有退休之前，还是需要培养一</description></item><item><title>2017-07-22 to 2017-08-26</title><link>http://localhost:1313/post/2017/2017-07-22-to-2017-08-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/2017/2017-07-22-to-2017-08-26/</guid><description>家人团聚，其乐融融。 去了斯坦福大学、卡梅尔小镇， 还有napa 古堡酒庄</description></item></channel></rss>